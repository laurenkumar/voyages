{"ast":null,"code":"/*!\n * VelocityTracker: 3.2.6\n * https://greensock.com\n *\n * Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n    _coreInitted,\n    _toArray,\n    _getUnit,\n    _first,\n    _ticker,\n    _time1,\n    _time2,\n    _getCache,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap);\n},\n    _lookup = {},\n    _round = function _round(value) {\n  return Math.round(value * 10000) / 10000;\n},\n    _getID = function _getID(target) {\n  return _getCache(target).id;\n},\n    _getByTarget = function _getByTarget(target) {\n  return _lookup[_getID(typeof target === \"string\" ? _toArray(target)[0] : target)];\n},\n    _onTick = function _onTick(time) {\n  var pt = _first,\n      val; //if the frame rate is too high, we won't be able to track the velocity as well, so only update the values about 20 times per second\n\n  if (time - _time1 >= 0.05) {\n    _time2 = _time1;\n    _time1 = time;\n\n    while (pt) {\n      val = pt.g(pt.t, pt.p);\n\n      if (val !== pt.v1 || time - pt.t1 > 0.2) {\n        //use a threshold of 0.2 seconds for zeroing-out velocity. If we only use 0.05 and things update slightly slower, like some Android devices dispatch \"touchmove\" events sluggishly so 2 or 3 ticks of the gsap.ticker may elapse inbetween, thus it may appear like the object is not moving but it actually is but it's not updating as frequently. A threshold of 0.2 seconds seems to be a good balance. We want to update things frequently (0.05 seconds) when they're moving so that we can respond to fast motions accurately, but we want to be more resistant to go back to a zero velocity.\n        pt.v2 = pt.v1;\n        pt.v1 = val;\n        pt.t2 = pt.t1;\n        pt.t1 = time;\n      }\n\n      pt = pt._next;\n    }\n  }\n},\n    _types = {\n  deg: 360,\n  rad: Math.PI * 2\n},\n    _initCore = function _initCore() {\n  gsap = _getGSAP();\n\n  if (gsap) {\n    _toArray = gsap.utils.toArray;\n    _getUnit = gsap.utils.getUnit;\n    _getCache = gsap.core.getCache;\n    _ticker = gsap.ticker;\n    _coreInitted = 1;\n  }\n};\n\nvar PropTracker = function PropTracker(target, property, type, next) {\n  this.t = target;\n  this.p = property;\n  this.g = target._gsap.get;\n  this.rCap = _types[type || _getUnit(this.g(target, property))]; //rotational cap (for degrees, \"deg\", it's 360 and for radians, \"rad\", it's Math.PI * 2)\n\n  this.v1 = this.v2 = 0;\n  this.t1 = this.t2 = _ticker.time;\n\n  if (next) {\n    this._next = next;\n    next._prev = this;\n  }\n};\n\nexport var VelocityTracker =\n/*#__PURE__*/\nfunction () {\n  function VelocityTracker(target, property) {\n    if (!_coreInitted) {\n      _initCore();\n    }\n\n    this.target = _toArray(target)[0];\n    _lookup[_getID(this.target)] = this;\n    this._props = {};\n    property && this.add(property);\n  }\n\n  VelocityTracker.register = function register(core) {\n    gsap = core;\n\n    _initCore();\n  };\n\n  var _proto = VelocityTracker.prototype;\n\n  _proto.get = function get(property, skipRecentTick) {\n    var pt = this._props[property],\n        val,\n        dif,\n        rotationCap;\n\n    if (!pt) {\n      console.warn(\"Not tracking \" + property + \" velocity.\");\n    }\n\n    val = parseFloat(skipRecentTick ? pt.v1 : pt.g(pt.t, pt.p));\n    dif = val - parseFloat(pt.v2);\n    rotationCap = pt.rCap;\n\n    if (rotationCap) {\n      //rotational values need special interpretation so that if, for example, they go from 179 to -178 degrees it is interpreted as a change of 3 instead of -357.\n      dif = dif % rotationCap;\n\n      if (dif !== dif % (rotationCap / 2)) {\n        dif = dif < 0 ? dif + rotationCap : dif - rotationCap;\n      }\n    }\n\n    return _round(dif / ((skipRecentTick ? pt.t1 : _ticker.time) - pt.t2));\n  };\n\n  _proto.getAll = function getAll() {\n    var result = {},\n        props = this._props,\n        p;\n\n    for (p in props) {\n      result[p] = this.get(p);\n    }\n\n    return result;\n  };\n\n  _proto.isTracking = function isTracking(property) {\n    return property in this._props;\n  };\n\n  _proto.add = function add(property, type) {\n    if (!(property in this._props)) {\n      if (!_first) {\n        _ticker.add(_onTick);\n\n        _time1 = _time2 = _ticker.time;\n      }\n\n      _first = this._props[property] = new PropTracker(this.target, property, type, _first);\n    }\n  };\n\n  _proto.remove = function remove(property) {\n    var pt = this._props[property],\n        prev,\n        next;\n\n    if (pt) {\n      prev = pt._prev;\n      next = pt._next;\n\n      if (prev) {\n        prev._next = next;\n      }\n\n      if (next) {\n        next._prev = prev;\n      } else if (_first === pt) {\n        _ticker.remove(_onTick);\n\n        _first = 0;\n      }\n\n      delete this._props[property];\n    }\n  };\n\n  _proto.kill = function kill(shallow) {\n    for (var p in this._props) {\n      this.remove(p);\n    }\n\n    if (!shallow) {\n      delete _lookup[_getID(this.target)];\n    }\n  };\n\n  VelocityTracker.track = function track(targets, properties, types) {\n    if (!_coreInitted) {\n      _initCore();\n    }\n\n    var result = [],\n        targs = _toArray(targets),\n        a = properties.split(\",\"),\n        t = (types || \"\").split(\",\"),\n        i = targs.length,\n        tracker,\n        j;\n\n    while (i--) {\n      tracker = _getByTarget(targs[i]) || new VelocityTracker(targs[i]);\n      j = a.length;\n\n      while (j--) {\n        tracker.add(a[j], t[j] || t[0]);\n      }\n\n      result.push(tracker);\n    }\n\n    return result;\n  };\n\n  VelocityTracker.untrack = function untrack(targets, properties) {\n    var props = (properties || \"\").split(\",\");\n\n    _toArray(targets).forEach(function (target) {\n      var tracker = _getByTarget(target);\n\n      if (tracker) {\n        if (!props.length) {\n          tracker.kill(1);\n        } else {\n          props.forEach(function (p) {\n            return tracker.remove(p);\n          });\n        }\n      }\n    });\n  };\n\n  VelocityTracker.isTracking = function isTracking(target, property) {\n    var tracker = _getByTarget(target);\n\n    return tracker && tracker.isTracking(property);\n  };\n\n  VelocityTracker.getVelocity = function getVelocity(target, property) {\n    var tracker = _getByTarget(target);\n\n    return !tracker || !tracker.isTracking(property) ? console.warn(\"Not tracking velocity of \" + property) : tracker.get(property);\n  };\n\n  return VelocityTracker;\n}();\nVelocityTracker.getByTarget = _getByTarget;\n_getGSAP() && gsap.registerPlugin(VelocityTracker);\nexport { VelocityTracker as default };","map":{"version":3,"sources":["/Users/uthaya/ourjourneys/node_modules/gsap/utils/VelocityTracker.js"],"names":["gsap","_coreInitted","_toArray","_getUnit","_first","_ticker","_time1","_time2","_getCache","_getGSAP","window","_lookup","_round","value","Math","round","_getID","target","id","_getByTarget","_onTick","time","pt","val","g","t","p","v1","t1","v2","t2","_next","_types","deg","rad","PI","_initCore","utils","toArray","getUnit","core","getCache","ticker","PropTracker","property","type","next","_gsap","get","rCap","_prev","VelocityTracker","_props","add","register","_proto","prototype","skipRecentTick","dif","rotationCap","console","warn","parseFloat","getAll","result","props","isTracking","remove","prev","kill","shallow","track","targets","properties","types","targs","a","split","i","length","tracker","j","push","untrack","forEach","getVelocity","getByTarget","registerPlugin","default"],"mappings":"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","sourcesContent":["/*!\n * VelocityTracker: 3.2.6\n * https://greensock.com\n *\n * Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n    _coreInitted,\n    _toArray,\n    _getUnit,\n    _first,\n    _ticker,\n    _time1,\n    _time2,\n    _getCache,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap);\n},\n    _lookup = {},\n    _round = function _round(value) {\n  return Math.round(value * 10000) / 10000;\n},\n    _getID = function _getID(target) {\n  return _getCache(target).id;\n},\n    _getByTarget = function _getByTarget(target) {\n  return _lookup[_getID(typeof target === \"string\" ? _toArray(target)[0] : target)];\n},\n    _onTick = function _onTick(time) {\n  var pt = _first,\n      val; //if the frame rate is too high, we won't be able to track the velocity as well, so only update the values about 20 times per second\n\n  if (time - _time1 >= 0.05) {\n    _time2 = _time1;\n    _time1 = time;\n\n    while (pt) {\n      val = pt.g(pt.t, pt.p);\n\n      if (val !== pt.v1 || time - pt.t1 > 0.2) {\n        //use a threshold of 0.2 seconds for zeroing-out velocity. If we only use 0.05 and things update slightly slower, like some Android devices dispatch \"touchmove\" events sluggishly so 2 or 3 ticks of the gsap.ticker may elapse inbetween, thus it may appear like the object is not moving but it actually is but it's not updating as frequently. A threshold of 0.2 seconds seems to be a good balance. We want to update things frequently (0.05 seconds) when they're moving so that we can respond to fast motions accurately, but we want to be more resistant to go back to a zero velocity.\n        pt.v2 = pt.v1;\n        pt.v1 = val;\n        pt.t2 = pt.t1;\n        pt.t1 = time;\n      }\n\n      pt = pt._next;\n    }\n  }\n},\n    _types = {\n  deg: 360,\n  rad: Math.PI * 2\n},\n    _initCore = function _initCore() {\n  gsap = _getGSAP();\n\n  if (gsap) {\n    _toArray = gsap.utils.toArray;\n    _getUnit = gsap.utils.getUnit;\n    _getCache = gsap.core.getCache;\n    _ticker = gsap.ticker;\n    _coreInitted = 1;\n  }\n};\n\nvar PropTracker = function PropTracker(target, property, type, next) {\n  this.t = target;\n  this.p = property;\n  this.g = target._gsap.get;\n  this.rCap = _types[type || _getUnit(this.g(target, property))]; //rotational cap (for degrees, \"deg\", it's 360 and for radians, \"rad\", it's Math.PI * 2)\n\n  this.v1 = this.v2 = 0;\n  this.t1 = this.t2 = _ticker.time;\n\n  if (next) {\n    this._next = next;\n    next._prev = this;\n  }\n};\n\nexport var VelocityTracker =\n/*#__PURE__*/\nfunction () {\n  function VelocityTracker(target, property) {\n    if (!_coreInitted) {\n      _initCore();\n    }\n\n    this.target = _toArray(target)[0];\n    _lookup[_getID(this.target)] = this;\n    this._props = {};\n    property && this.add(property);\n  }\n\n  VelocityTracker.register = function register(core) {\n    gsap = core;\n\n    _initCore();\n  };\n\n  var _proto = VelocityTracker.prototype;\n\n  _proto.get = function get(property, skipRecentTick) {\n    var pt = this._props[property],\n        val,\n        dif,\n        rotationCap;\n\n    if (!pt) {\n      console.warn(\"Not tracking \" + property + \" velocity.\");\n    }\n\n    val = parseFloat(skipRecentTick ? pt.v1 : pt.g(pt.t, pt.p));\n    dif = val - parseFloat(pt.v2);\n    rotationCap = pt.rCap;\n\n    if (rotationCap) {\n      //rotational values need special interpretation so that if, for example, they go from 179 to -178 degrees it is interpreted as a change of 3 instead of -357.\n      dif = dif % rotationCap;\n\n      if (dif !== dif % (rotationCap / 2)) {\n        dif = dif < 0 ? dif + rotationCap : dif - rotationCap;\n      }\n    }\n\n    return _round(dif / ((skipRecentTick ? pt.t1 : _ticker.time) - pt.t2));\n  };\n\n  _proto.getAll = function getAll() {\n    var result = {},\n        props = this._props,\n        p;\n\n    for (p in props) {\n      result[p] = this.get(p);\n    }\n\n    return result;\n  };\n\n  _proto.isTracking = function isTracking(property) {\n    return property in this._props;\n  };\n\n  _proto.add = function add(property, type) {\n    if (!(property in this._props)) {\n      if (!_first) {\n        _ticker.add(_onTick);\n\n        _time1 = _time2 = _ticker.time;\n      }\n\n      _first = this._props[property] = new PropTracker(this.target, property, type, _first);\n    }\n  };\n\n  _proto.remove = function remove(property) {\n    var pt = this._props[property],\n        prev,\n        next;\n\n    if (pt) {\n      prev = pt._prev;\n      next = pt._next;\n\n      if (prev) {\n        prev._next = next;\n      }\n\n      if (next) {\n        next._prev = prev;\n      } else if (_first === pt) {\n        _ticker.remove(_onTick);\n\n        _first = 0;\n      }\n\n      delete this._props[property];\n    }\n  };\n\n  _proto.kill = function kill(shallow) {\n    for (var p in this._props) {\n      this.remove(p);\n    }\n\n    if (!shallow) {\n      delete _lookup[_getID(this.target)];\n    }\n  };\n\n  VelocityTracker.track = function track(targets, properties, types) {\n    if (!_coreInitted) {\n      _initCore();\n    }\n\n    var result = [],\n        targs = _toArray(targets),\n        a = properties.split(\",\"),\n        t = (types || \"\").split(\",\"),\n        i = targs.length,\n        tracker,\n        j;\n\n    while (i--) {\n      tracker = _getByTarget(targs[i]) || new VelocityTracker(targs[i]);\n      j = a.length;\n\n      while (j--) {\n        tracker.add(a[j], t[j] || t[0]);\n      }\n\n      result.push(tracker);\n    }\n\n    return result;\n  };\n\n  VelocityTracker.untrack = function untrack(targets, properties) {\n    var props = (properties || \"\").split(\",\");\n\n    _toArray(targets).forEach(function (target) {\n      var tracker = _getByTarget(target);\n\n      if (tracker) {\n        if (!props.length) {\n          tracker.kill(1);\n        } else {\n          props.forEach(function (p) {\n            return tracker.remove(p);\n          });\n        }\n      }\n    });\n  };\n\n  VelocityTracker.isTracking = function isTracking(target, property) {\n    var tracker = _getByTarget(target);\n\n    return tracker && tracker.isTracking(property);\n  };\n\n  VelocityTracker.getVelocity = function getVelocity(target, property) {\n    var tracker = _getByTarget(target);\n\n    return !tracker || !tracker.isTracking(property) ? console.warn(\"Not tracking velocity of \" + property) : tracker.get(property);\n  };\n\n  return VelocityTracker;\n}();\nVelocityTracker.getByTarget = _getByTarget;\n_getGSAP() && gsap.registerPlugin(VelocityTracker);\nexport { VelocityTracker as default };"]},"metadata":{},"sourceType":"module"}