{"ast":null,"code":"var _jsxFileName = \"/Users/uthaya/ourjourneys/src/components/ProjectList/ProjectList.js\";\nimport React, { Component, useState } from \"react\";\nimport { TweenLite, gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport image1 from \"./image-1.jpg\";\nimport image2 from \"./image-2.jpg\";\nimport image3 from \"./image-3.jpg\";\nimport image4 from \"./image-4.jpg\";\nimport \"./ProjectList.scss\";\ngsap.registerPlugin(Draggable);\nconst containerId = \"imageContainer\";\nconst containerSelector = \"#\" + containerId;\nconst rowClass = \"row\";\nconst rowSelector = \".\" + rowClass;\nconst imageClass = \"sliderImage\";\nconst imageSelector = \".\" + imageClass;\nconst imgURLArray = null;\nconst imgURLArrayLength = imgURLArray ? imgURLArray.length : -1;\nconst rowNum = 5;\nconst imgNum = 9;\nconst useInertia = true;\nconst useCenterGrid = true;\nlet rows, imgMidIndex, rowMidIndex;\nconst rowArray = [];\nconst imgRep = [];\nlet boxWidth, boxHeight, gutter, horizSpacing, vertSpacing, horizOffset, vertOffset, winMidX, winMidY, lastCenteredElem;\n\nclass projectList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateCenterElem = () => {\n      let elems = document.elementsFromPoint(winMidX, winMidY);\n      elems.forEach(elem => {\n        if (elem.matches(imageSelector) && !lastCenteredElem.isSameNode(elem)) {\n          lastCenteredElem = elem;\n          this.checkPositions(lastCenteredElem);\n        }\n      });\n    };\n\n    this.mouseMove = e => {\n      TweenLite.to(this.myRef.current, 0.5, {\n        css: {\n          left: e.pageX,\n          top: e.pageY\n        },\n        delay: 0.03\n      });\n    };\n\n    this.handleMouseEnter = () => {\n      TweenLite.to(this.myRef.current, 0, {\n        css: {\n          opacity: \"1\"\n        }\n      });\n    };\n\n    this.handleMouseLeave = () => {\n      TweenLite.to(this.myRef.current, 0, {\n        css: {\n          opacity: \"0\"\n        }\n      });\n    };\n\n    this.onHover = e => {\n      if (e.target.className === \"lib__item\") {\n        TweenLite.to(this.myRef.current, 0, {\n          css: {\n            \"background-image\": \"url(\" + image1 + \")\"\n          }\n        });\n      }\n\n      if (e.target.className === \"project p-2\") {\n        TweenLite.to(this.myRef.current, 0, {\n          css: {\n            \"background-image\": \"url(\" + image2 + \")\"\n          }\n        });\n      }\n\n      if (e.target.className === \"project p-3\") {\n        TweenLite.to(this.myRef.current, 0, {\n          css: {\n            \"background-image\": \"url(\" + image3 + \")\"\n          }\n        });\n      }\n\n      if (e.target.className === \"project p-4\") {\n        TweenLite.to(this.myRef.current, 0, {\n          css: {\n            \"background-image\": \"url(\" + image4 + \")\"\n          }\n        });\n      }\n    };\n\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount() {\n    gsap.set(containerSelector, {\n      willChange: \"transform\"\n    });\n    this.createImageGrid();\n    this.createMask();\n    lastCenteredElem = document.querySelectorAll(imageSelector)[(rowMidIndex - 1) * imgNum + imgMidIndex];\n    this.createDraggable();\n    this.setStyles();\n    this.resize();\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  moveArrayIndex(array, oldIndex, newIndex) {\n    if (newIndex >= array.length) {\n      newIndex = array.length - 1;\n    }\n\n    array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n    return array;\n  }\n\n  checkPositions(elem) {\n    // Find the location in our array of the element\n    let rowIndex = -1,\n        imgIndex = -1;\n    imgRep.forEach((row, i) => {\n      row.forEach((img, j) => {\n        if (elem.isSameNode(img)) {\n          rowIndex = i;\n          imgIndex = j;\n        }\n      });\n    }); // Element not found, return\n\n    if (rowIndex === -1) return; // Reposition elements as necessary so that our element is in the center\n    // Reposition the rows as necessary\n\n    if (rowIndex < rowMidIndex) {\n      for (let i = rowIndex; i < rowMidIndex; i++) {\n        // Update the row's actual position\n        let rowY = gsap.getProperty(rowArray[0], \"y\");\n\n        if (rowArray.length % 2 === 1) {\n          // Odd number of rows means we have to handle offset\n          let row = rowArray[rowArray.length - 1];\n\n          if (row.dataset.offset === \"true\") {\n            gsap.set(row, {\n              y: rowY - gutter - boxHeight,\n              x: \"+=\" + boxWidth / 2\n            });\n            row.dataset.offset = \"false\";\n          } else {\n            gsap.set(row, {\n              y: rowY - gutter - boxHeight,\n              x: \"-=\" + boxWidth / 2\n            });\n            row.dataset.offset = \"true\";\n          }\n        } else {\n          // Equal number of rows; don't have to handle offset\n          gsap.set(rowArray[rowArray.length - 1], {\n            y: rowY - gutter - boxHeight\n          });\n        } // Update our representations\n\n\n        this.moveArrayIndex(imgRep, imgRep.length - 1, 0);\n        this.moveArrayIndex(rowArray, rowArray.length - 1, 0);\n      }\n    } else if (rowIndex > rowMidIndex) {\n      for (let i = rowMidIndex; i < rowIndex; i++) {\n        // Update the row's actual position\n        let rowY = gsap.getProperty(rowArray[rowArray.length - 1], \"y\");\n\n        if (rowArray.length % 2 === 1) {\n          // Odd number of rows means we have to handle offset\n          let row = rowArray[0];\n\n          if (row.dataset.offset === \"true\") {\n            gsap.set(row, {\n              y: rowY + gutter + boxHeight,\n              x: \"-=\" + boxWidth / 2\n            });\n            row.dataset.offset = \"false\";\n          } else {\n            gsap.set(row, {\n              y: rowY + gutter + boxHeight,\n              x: \"+=\" + boxWidth / 2\n            });\n            row.dataset.offset = \"true\";\n          }\n        } else {\n          // Equal number of rows; don't have to handle offset\n          gsap.set(rowArray[0], {\n            y: rowY + gutter + boxHeight\n          });\n        } // Update our representations\n\n\n        this.moveArrayIndex(imgRep, 0, imgRep.length - 1);\n        this.moveArrayIndex(rowArray, 0, rowArray.length - 1);\n      }\n    } // Reposition the images as necessary\n\n\n    if (imgIndex < imgMidIndex) {\n      for (let rowNum = 0; rowNum < rows.length; rowNum++) {\n        // Do it for every row\n        let row = imgRep[rowNum];\n\n        for (let i = imgIndex; i < imgMidIndex; i++) {\n          // Update the images's actual position\n          let imgX = gsap.getProperty(row[0], \"x\");\n          gsap.set(row[row.length - 1], {\n            x: imgX - gutter - boxWidth\n          }); // Update our representation\n\n          this.moveArrayIndex(row, row.length - 1, 0);\n        }\n      }\n    } else if (imgIndex > imgMidIndex) {\n      for (let rowNum = 0; rowNum < rows.length; rowNum++) {\n        // Do it for every row\n        let row = imgRep[rowNum];\n\n        for (let i = imgMidIndex; i < imgIndex; i++) {\n          // Update the images's actual position\n          let imgX = gsap.getProperty(row[imgNum - 1], \"x\");\n          gsap.set(row[0], {\n            x: imgX + gutter + boxWidth\n          }); // Update our representation\n\n          this.moveArrayIndex(row, 0, row.length - 1);\n        }\n      }\n    }\n  }\n\n  centerGrid() {\n    let bcr = lastCenteredElem.getBoundingClientRect();\n    let midX = bcr.x + bcr.width / 2;\n    let midY = bcr.y + bcr.height / 2;\n    let x = winMidX - midX;\n    let y = winMidY - midY;\n    gsap.to(containerSelector, {\n      ease: \"sine.inOut\",\n      duration: 0.7,\n      x: \"+=\" + x,\n      y: \"+=\" + y\n    });\n  }\n\n  getCenterCoords(endX, endY) {\n    return {\n      x: winMidX - endX,\n      y: winMidY - endY\n    };\n  }\n\n  createImageGrid() {\n    for (let y = 0; y < rowNum; y++) {\n      let row = document.createElement(\"div\");\n      row.className = rowClass;\n\n      for (let x = 0; x < imgNum; x++) {\n        let image = document.createElement(\"div\");\n        image.className = imageClass;\n        row.appendChild(image);\n      }\n\n      document.querySelector(containerSelector).appendChild(row); // Add the images to our representation\n\n      imgRep.push(gsap.utils.toArray(row.querySelectorAll(imageSelector)));\n    }\n\n    rows = document.querySelectorAll(rowSelector);\n    imgMidIndex = Math.floor(imgNum / 2);\n    rowMidIndex = Math.floor(rowNum / 2);\n  }\n\n  createMask() {\n    let mask = document.createElement(\"div\");\n    mask.className = \"mask\";\n    document.body.appendChild(mask);\n    gsap.set(mask, {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      zIndex: 9999 // backgroundColor: \"green\",\n      // opacity: \"0.2\",\n\n    });\n  }\n\n  resize() {\n    winMidX = window.innerWidth / 2;\n    winMidY = window.innerHeight / 2;\n    boxWidth = window.innerWidth * 0.35;\n    boxHeight = window.innerHeight * 0.35;\n    gutter = window.innerWidth * 0.05;\n    horizSpacing = boxWidth + gutter;\n    vertSpacing = boxHeight + gutter;\n    horizOffset = -(imgMidIndex * horizSpacing + boxWidth / 2) + winMidX;\n    vertOffset = -(rowMidIndex * vertSpacing + boxHeight / 2) + winMidY; // Reset our container and rows\n\n    gsap.set(containerSelector, {\n      x: 0,\n      y: 0\n    });\n    rows.forEach(function (row, i) {\n      gsap.set(row, {\n        attr: {\n          \"data-offset\": function () {\n            if (i % 2 === 0) return false;else return true;\n          }\n        },\n        x: function () {\n          if (i % 2 === 0) return horizOffset;else return horizOffset - boxWidth / 2;\n        },\n        y: function () {\n          return i * vertSpacing + vertOffset;\n        }\n      });\n      gsap.set(row.querySelectorAll(imageSelector), {\n        width: boxWidth,\n        height: boxHeight,\n        x: function (index) {\n          return index * horizSpacing;\n        }\n      }); // Update our representation of the rows\n\n      rowArray[i] = row;\n    });\n  }\n\n  setStyles() {\n    gsap.set(\"body\", {\n      margin: 0,\n      overflow: \"hidden\"\n    });\n    const randImgSize = Math.floor(Math.max(window.innerWidth, window.innerHeight) / 3);\n    gsap.set(imageSelector, {\n      backgroundImage: function (index) {\n        if (imgURLArray) {\n          return imgURLArray[index % imgURLArrayLength];\n        } else return `url(https://picsum.photos/${randImgSize}/${randImgSize}?random=${index})`;\n      },\n      position: \"absolute\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      top: 0,\n      left: 0\n    });\n    gsap.set(rowSelector, {\n      position: \"absolute\"\n    });\n  }\n\n  createDraggable() {\n    let options = {\n      trigger: \".mask\",\n      dragResistance: 0.4,\n      resistance: 400,\n      onDrag: this.updateCenterElem\n    };\n\n    if (useInertia) {\n      options.inertia = true;\n      options.onThrowUpdate = this.updateCenterElem;\n\n      if (useCenterGrid) {\n        options.onThrowComplete = this.centerGrid;\n      }\n    } else if (useCenterGrid) {\n      // No inertia\n      options.onDragEnd = this.centerGrid;\n    }\n\n    return Draggable.create(containerSelector, options);\n  }\n  /*moveArrayIndex(array, oldIndex, newIndex) {\n      if (newIndex >= array.length) {\n          newIndex = array.length - 1;\n      }\n      array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n      return array;\n  }\n    checkPositions(elem) {\n  // Find the location in our array of the element\n    let rowIndex = -1,\n        imgIndex = -1;\n    imgRep.forEach((row, i) => {\n      row.forEach((img, j) => {\n        if(elem.isSameNode(img)) {\n          rowIndex = i;\n          imgIndex = j;\n        }\n      });\n    });\n  \n  // Element not found, return\n    if(rowIndex === -1)\n      return;\n    \n    // Reposition elements as necessary so that our element is in the center\n    // Reposition the rows as necessary\n    if(rowIndex < rowMidIndex) {\n      for(let i = rowIndex; i < rowMidIndex; i++) {\n        // Update the row's actual position\n        let rowY = gsap.getProperty(rowArray[0], \"y\");\n        \n        if(rowArray.length % 2 === 1) { // Odd number of rows means we have to handle offset\n          let row = rowArray[rowArray.length - 1];\n          if(row.dataset.offset === \"true\") {\n            gsap.set(row, {y: rowY - gutter - boxHeight, x: \"+=\" + boxWidth / 2});\n            row.dataset.offset = \"false\";\n          } else {\n            gsap.set(row, {y: rowY - gutter - boxHeight, x: \"-=\" + boxWidth / 2});\n            row.dataset.offset = \"true\";\n          }\n        } else { // Equal number of rows; don't have to handle offset\n          gsap.set(rowArray[rowArray.length - 1], {y: rowY - gutter - boxHeight});\n        }\n        \n        // Update our representations\n        this.moveArrayIndex(imgRep, imgRep.length - 1, 0);\n        this.moveArrayIndex(rowArray, rowArray.length - 1, 0);\n      }\n    } else if(rowIndex > rowMidIndex) {\n      for(let i = rowMidIndex; i < rowIndex; i++) {\n        // Update the row's actual position\n        let rowY = gsap.getProperty(rowArray[rowArray.length - 1], \"y\");\n        \n        if(rowArray.length % 2 === 1) { // Odd number of rows means we have to handle offset\n          let row = rowArray[0];\n          if(row.dataset.offset === \"true\") {\n            gsap.set(row, {y: rowY + gutter + boxHeight, x: \"-=\" + boxWidth / 2});\n            row.dataset.offset = \"false\";\n          } else {\n            gsap.set(row, {y: rowY + gutter + boxHeight, x: \"+=\" + boxWidth / 2});\n            row.dataset.offset = \"true\";\n          }\n        } else { // Equal number of rows; don't have to handle offset\n          gsap.set(rowArray[0], {y: rowY + gutter + boxHeight});\n        }\n        \n        // Update our representations\n        this.moveArrayIndex(imgRep, 0, imgRep.length - 1);\n        this.moveArrayIndex(rowArray, 0, rowArray.length - 1);\n      }\n    }\n  \n  \n    // Reposition the images as necessary\n    if(imgIndex < imgMidIndex) {\n      for(let rowNum = 0; rowNum < rows.length; rowNum++) { // Do it for every row\n        let row = imgRep[rowNum];\n        \n        for(let i = imgIndex; i < imgMidIndex; i++) {\n          // Update the images's actual position\n          let imgX = gsap.getProperty(row[0], \"x\");\n           gsap.set(row[row.length - 1], {x: imgX - gutter - boxWidth});\n           // Update our representation\n          this.moveArrayIndex(row, row.length - 1, 0);\n        }\n      }\n    } else if(imgIndex > imgMidIndex) {\n      for(let rowNum = 0; rowNum < rows.length; rowNum++) { // Do it for every row\n        let row = imgRep[rowNum];\n        \n        for(let i = imgMidIndex; i < imgIndex; i++) {\n          // Update the images's actual position\n          let imgX = gsap.getProperty(row[imgNum - 1], \"x\");\n           gsap.set(row[0], {x: imgX + gutter + boxWidth});\n           // Update our representation\n          this.moveArrayIndex(row, 0, row.length - 1);\n        }\n      }\n    }\n  }\n    centerGrid() {\n    let bcr = lastCenteredElem.getBoundingClientRect();\n    let midX = bcr.x + bcr.width / 2;\n    let midY = bcr.y + bcr.height / 2;\n    \n    let x = winMidX - midX;\n    let y = winMidY - midY;\n    \n    gsap.to(containerSelector, {\n      ease: \"sine.inOut\",\n      duration: 0.7,\n      x: \"+=\" + x,\n      y: \"+=\" + y\n    });\n  }\n   updateCenterElem() {\n    let elems = document.elementsFromPoint(winMidX, winMidY);\n    elems.forEach(elem => {\n      if(elem.matches(imageSelector) && !lastCenteredElem.isSameNode(elem)) {\n        lastCenteredElem = elem; \n        \n        this.checkPositions(lastCenteredElem);\n      }\n    });\n  }\n   createMask() {\n    let mask = document.createElement(\"div\");\n    mask.className = \"mask\";\n    document.body.appendChild(mask);\n    \n    gsap.set(mask, {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      zIndex: 9999,\n    });\n  }*/\n\n  /*resize() {\n    winMidX = innerWidth / 2;\n    winMidY = innerHeight / 2;\n    boxWidth = innerWidth * 0.35;\n    boxHeight = innerHeight * 0.35;\n    gutter = innerWidth * 0.05;\n    horizSpacing = boxWidth + gutter;\n    vertSpacing = boxHeight + gutter;\n    horizOffset = -(imgMidIndex * horizSpacing + boxWidth / 2) + winMidX;\n    vertOffset = -(rowMidIndex * vertSpacing + boxHeight / 2) + winMidY;\n    \n    // Reset our container and rows\n    gsap.set(containerSelector, {x: 0, y: 0, rotate: 30});\n    let imgNum = document.querySelectorAll(imageSelector);\n    for (var i = 0; i < imgNum.length; i++) {\n        gsap.set(imgNum[i], {\n          x: function() {\n              return 0;\n          },\n          y: function() {\n            return 0;\n          },\n        });\n    }\n     var callback = function (entries, observer) {\n      entries.forEach(function(entry) {\n        if (entry.isIntersecting) {\n          // play the individual target.timeline\n          entry.target.timeline.play();\n        } else {\n          //entry.target.timeline.pause(0);\n        }\n      });\n    };\n     var options = {\n      threshold: 0.6, // target 'section' should be 60% visible\n      rootMargin: '0px 0px -40% 0px'\n      //rootMargin isn't active in a normal CodePen.\n      //Change View: use DebugMode\n    };\n     var observer = new IntersectionObserver(callback, options);\n    var targets = document.querySelectorAll(imageSelector);\n     // a loop: create the individual target timelines\n    targets.forEach(function(target) {\n      var ww = window.innerWidth + 300;\n      var action = gsap.timeline({paused:false})\n      .to(target, {\n        duration: 10, \n        x:ww, \n        ease: \"sine.inOut\", \n        repeat: -1\n      });\n      \n      target.timeline = action;\n    });\n     Array.prototype.forEach.call(targets, (el) => {observer.observe(el);});  \n    \n  }\n   createDraggable() {\n    let options = {\n      trigger: \".mask\",\n      dragResistance: 0.4,\n      resistance: 400,\n      rotate: 45,\n    }\n    \n    if(useInertia) {\n      options.inertia = true;\n    }\n        \n    return Draggable.create(imageSelector, options);\n  }*/\n\n\n  changeBackground(e) {\n    console.log(e.target);\n    e.target.style.background = 'red';\n  }\n\n  render() {\n    const dragInfo = {\n      position: 'absolute',\n      bottom: '20%'\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 624\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Container__wrapper Container__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 625\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Intro__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 627\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Heading__wrapper styles__font-size-xl styles__font-family-serif-bold Intro__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 628\n      },\n      __self: this\n    }, \"Nos voyages\\uD83C\\uDFDD\"), React.createElement(\"div\", {\n      className: \"Heading__wrapper styles__font-size-sm Intro__desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 629\n      },\n      __self: this\n    }, \"Retrouvez ici toutes les villes que nous avons visit\\xE9.\"))), React.createElement(\"div\", {\n      className: \"Container__wrapper Container__absolute Container__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Container__wrapper Container__absolute Container__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Heading__wrapper styles__font-size-xs\",\n      style: dragInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, \"DRAG POUR EXPLORER\"), React.createElement(\"div\", {\n      className: \"lib__wrapper \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"lib__item\",\n      onMouseOver: this.changeBackground,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 636\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      \"data-hide-cursor\": \"true\",\n      className: \"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\",\n      draggable: \"false\",\n      href: \"/postcards/my-week\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"Thumb__cover\",\n      alt: \"My week by Raffaele Filiberti \\u2014 sabato.studio\",\n      draggable: \"false\",\n      src: image1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Thumb__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639\n      },\n      __self: this\n    }, \"My week by Raffaele Filiberti \\u2014 sabato.studio\"))), React.createElement(\"div\", {\n      className: \"lib__item\",\n      onMouseOver: this.changeBackground,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      \"data-hide-cursor\": \"true\",\n      className: \"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\",\n      draggable: \"false\",\n      href: \"/postcards/my-week\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"Thumb__cover\",\n      alt: \"My week by Raffaele Filiberti \\u2014 sabato.studio\",\n      draggable: \"false\",\n      src: image1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Thumb__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646\n      },\n      __self: this\n    }, \"My week by Raffaele Filiberti \\u2014 sabato.studio\"))), React.createElement(\"div\", {\n      className: \"lib__item\",\n      onMouseOver: this.changeBackground,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      \"data-hide-cursor\": \"true\",\n      className: \"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\",\n      draggable: \"false\",\n      href: \"/postcards/my-week\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"Thumb__cover\",\n      alt: \"My week by Raffaele Filiberti \\u2014 sabato.studio\",\n      draggable: \"false\",\n      src: image1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Thumb__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 653\n      },\n      __self: this\n    }, \"My week by Raffaele Filiberti \\u2014 sabato.studio\"))), React.createElement(\"div\", {\n      className: \"lib__item\",\n      onMouseOver: this.changeBackground,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      \"data-hide-cursor\": \"true\",\n      className: \"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\",\n      draggable: \"false\",\n      href: \"/postcards/my-week\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"Thumb__cover\",\n      alt: \"My week by Raffaele Filiberti \\u2014 sabato.studio\",\n      draggable: \"false\",\n      src: image1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 659\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Thumb__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 660\n      },\n      __self: this\n    }, \"My week by Raffaele Filiberti \\u2014 sabato.studio\"))), React.createElement(\"div\", {\n      className: \"lib__item\",\n      onMouseOver: this.changeBackground,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 664\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      \"data-hide-cursor\": \"true\",\n      className: \"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\",\n      draggable: \"false\",\n      href: \"/postcards/my-week\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 665\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"Thumb__cover\",\n      alt: \"My week by Raffaele Filiberti \\u2014 sabato.studio\",\n      draggable: \"false\",\n      src: image1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 666\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Thumb__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 667\n      },\n      __self: this\n    }, \"My week by Raffaele Filiberti \\u2014 sabato.studio\"))), React.createElement(\"div\", {\n      className: \"lib__item\",\n      onMouseOver: this.changeBackground,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      \"data-hide-cursor\": \"true\",\n      className: \"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\",\n      draggable: \"false\",\n      href: \"/postcards/my-week\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"Thumb__cover\",\n      alt: \"My week by Raffaele Filiberti \\u2014 sabato.studio\",\n      draggable: \"false\",\n      src: image1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Thumb__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    }, \"My week by Raffaele Filiberti \\u2014 sabato.studio\"))), React.createElement(\"div\", {\n      className: \"lib__item\",\n      onMouseOver: this.changeBackground,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      \"data-hide-cursor\": \"true\",\n      className: \"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\",\n      draggable: \"false\",\n      href: \"/postcards/my-week\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"Thumb__cover\",\n      alt: \"My week by Raffaele Filiberti \\u2014 sabato.studio\",\n      draggable: \"false\",\n      src: image1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 680\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Thumb__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 681\n      },\n      __self: this\n    }, \"My week by Raffaele Filiberti \\u2014 sabato.studio\"))), React.createElement(\"div\", {\n      className: \"lib__item\",\n      onMouseOver: this.changeBackground,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      \"data-hide-cursor\": \"true\",\n      className: \"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\",\n      draggable: \"false\",\n      href: \"/postcards/my-week\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"Thumb__cover\",\n      alt: \"My week by Raffaele Filiberti \\u2014 sabato.studio\",\n      draggable: \"false\",\n      src: image1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 687\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Thumb__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 688\n      },\n      __self: this\n    }, \"My week by Raffaele Filiberti \\u2014 sabato.studio\")))), React.createElement(\"div\", {\n      id: \"imageContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 693\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default projectList;","map":{"version":3,"sources":["/Users/uthaya/ourjourneys/src/components/ProjectList/ProjectList.js"],"names":["React","Component","useState","TweenLite","gsap","Draggable","image1","image2","image3","image4","registerPlugin","containerId","containerSelector","rowClass","rowSelector","imageClass","imageSelector","imgURLArray","imgURLArrayLength","length","rowNum","imgNum","useInertia","useCenterGrid","rows","imgMidIndex","rowMidIndex","rowArray","imgRep","boxWidth","boxHeight","gutter","horizSpacing","vertSpacing","horizOffset","vertOffset","winMidX","winMidY","lastCenteredElem","projectList","constructor","props","updateCenterElem","elems","document","elementsFromPoint","forEach","elem","matches","isSameNode","checkPositions","mouseMove","e","to","myRef","current","css","left","pageX","top","pageY","delay","handleMouseEnter","opacity","handleMouseLeave","onHover","target","className","createRef","componentDidMount","set","willChange","createImageGrid","createMask","querySelectorAll","createDraggable","setStyles","resize","window","addEventListener","moveArrayIndex","array","oldIndex","newIndex","splice","rowIndex","imgIndex","row","i","img","j","rowY","getProperty","dataset","offset","y","x","imgX","centerGrid","bcr","getBoundingClientRect","midX","width","midY","height","ease","duration","getCenterCoords","endX","endY","createElement","image","appendChild","querySelector","push","utils","toArray","Math","floor","mask","body","position","zIndex","innerWidth","innerHeight","attr","index","margin","overflow","randImgSize","max","backgroundImage","backgroundSize","backgroundPosition","options","trigger","dragResistance","resistance","onDrag","inertia","onThrowUpdate","onThrowComplete","onDragEnd","create","changeBackground","console","log","style","background","render","dragInfo","bottom"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { TweenLite, gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport image1 from \"./image-1.jpg\";\nimport image2 from \"./image-2.jpg\";\nimport image3 from \"./image-3.jpg\";\nimport image4 from \"./image-4.jpg\";\n\nimport \"./ProjectList.scss\";\n\ngsap.registerPlugin(Draggable);\nconst containerId = \"imageContainer\";\nconst containerSelector = \"#\" + containerId;\nconst rowClass = \"row\"\nconst rowSelector = \".\" + rowClass;\nconst imageClass = \"sliderImage\";\nconst imageSelector = \".\" + imageClass;\nconst imgURLArray = null;\nconst imgURLArrayLength = imgURLArray ? imgURLArray.length : -1;\nconst rowNum = 5;\nconst imgNum = 9;\n\nconst useInertia = true;\nconst useCenterGrid = true;\n\nlet rows,\n    imgMidIndex,\n    rowMidIndex;\nconst rowArray = [];\nconst imgRep = [];\n\nlet boxWidth,\n    boxHeight,\n    gutter,\n    horizSpacing,\n    vertSpacing,\n    horizOffset,\n    vertOffset,\n    winMidX,\n    winMidY,\n    lastCenteredElem;\n\nclass projectList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.myRef = React.createRef();\n  }\n\n  componentDidMount() {\n    gsap.set(containerSelector, {willChange: \"transform\"});\n  \n    this.createImageGrid();\n    this.createMask();\n    lastCenteredElem = document.querySelectorAll(imageSelector)[(rowMidIndex - 1) * imgNum + imgMidIndex];\n    \n    this.createDraggable();\n    \n    this.setStyles();\n    \n    this.resize();\n    window.addEventListener(\"resize\", this.resize);\n  };\n\n  moveArrayIndex(array, oldIndex, newIndex) {\n    if (newIndex >= array.length) {\n        newIndex = array.length - 1;\n    }\n    array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n    return array;\n  }\n\n\ncheckPositions(elem) {\n  // Find the location in our array of the element\n  let rowIndex = -1,\n      imgIndex = -1;\n  imgRep.forEach((row, i) => {\n    row.forEach((img, j) => {\n      if(elem.isSameNode(img)) {\n        rowIndex = i;\n        imgIndex = j;\n      }\n    });\n  });\n  \n  // Element not found, return\n  if(rowIndex === -1)\n    return;\n  \n  // Reposition elements as necessary so that our element is in the center\n  // Reposition the rows as necessary\n  if(rowIndex < rowMidIndex) {\n    for(let i = rowIndex; i < rowMidIndex; i++) {\n      // Update the row's actual position\n      let rowY = gsap.getProperty(rowArray[0], \"y\");\n      \n      if(rowArray.length % 2 === 1) { // Odd number of rows means we have to handle offset\n        let row = rowArray[rowArray.length - 1];\n        if(row.dataset.offset === \"true\") {\n          gsap.set(row, {y: rowY - gutter - boxHeight, x: \"+=\" + boxWidth / 2});\n          row.dataset.offset = \"false\";\n        } else {\n          gsap.set(row, {y: rowY - gutter - boxHeight, x: \"-=\" + boxWidth / 2});\n          row.dataset.offset = \"true\";\n        }\n      } else { // Equal number of rows; don't have to handle offset\n        gsap.set(rowArray[rowArray.length - 1], {y: rowY - gutter - boxHeight});\n      }\n      \n      // Update our representations\n      this.moveArrayIndex(imgRep, imgRep.length - 1, 0);\n      this.moveArrayIndex(rowArray, rowArray.length - 1, 0);\n    }\n  } else if(rowIndex > rowMidIndex) {\n    for(let i = rowMidIndex; i < rowIndex; i++) {\n      // Update the row's actual position\n      let rowY = gsap.getProperty(rowArray[rowArray.length - 1], \"y\");\n      \n      if(rowArray.length % 2 === 1) { // Odd number of rows means we have to handle offset\n        let row = rowArray[0];\n        if(row.dataset.offset === \"true\") {\n          gsap.set(row, {y: rowY + gutter + boxHeight, x: \"-=\" + boxWidth / 2});\n          row.dataset.offset = \"false\";\n        } else {\n          gsap.set(row, {y: rowY + gutter + boxHeight, x: \"+=\" + boxWidth / 2});\n          row.dataset.offset = \"true\";\n        }\n      } else { // Equal number of rows; don't have to handle offset\n        gsap.set(rowArray[0], {y: rowY + gutter + boxHeight});\n      }\n      \n      // Update our representations\n      this.moveArrayIndex(imgRep, 0, imgRep.length - 1);\n      this.moveArrayIndex(rowArray, 0, rowArray.length - 1);\n    }\n  }\n  \n  \n  // Reposition the images as necessary\n  if(imgIndex < imgMidIndex) {\n    for(let rowNum = 0; rowNum < rows.length; rowNum++) { // Do it for every row\n      let row = imgRep[rowNum];\n      \n      for(let i = imgIndex; i < imgMidIndex; i++) {\n        // Update the images's actual position\n        let imgX = gsap.getProperty(row[0], \"x\");\n\n        gsap.set(row[row.length - 1], {x: imgX - gutter - boxWidth});\n\n        // Update our representation\n        this.moveArrayIndex(row, row.length - 1, 0);\n      }\n    }\n  } else if(imgIndex > imgMidIndex) {\n    for(let rowNum = 0; rowNum < rows.length; rowNum++) { // Do it for every row\n      let row = imgRep[rowNum];\n      \n      for(let i = imgMidIndex; i < imgIndex; i++) {\n        // Update the images's actual position\n        let imgX = gsap.getProperty(row[imgNum - 1], \"x\");\n\n        gsap.set(row[0], {x: imgX + gutter + boxWidth});\n\n        // Update our representation\n        this.moveArrayIndex(row, 0, row.length - 1);\n      }\n    }\n  }\n}\n\n\ncenterGrid() {\n  let bcr = lastCenteredElem.getBoundingClientRect();\n  let midX = bcr.x + bcr.width / 2;\n  let midY = bcr.y + bcr.height / 2;\n  \n  let x = winMidX - midX;\n  let y = winMidY - midY;\n  \n  gsap.to(containerSelector, {\n    ease: \"sine.inOut\",\n    duration: 0.7,\n    x: \"+=\" + x,\n    y: \"+=\" + y\n  });\n}\n\ngetCenterCoords(endX, endY) {\n  return {x: winMidX - endX, y: winMidY - endY}\n}\n\nupdateCenterElem = () => {\n  let elems = document.elementsFromPoint(winMidX, winMidY);\n  elems.forEach(elem => {\n    if(elem.matches(imageSelector) && !lastCenteredElem.isSameNode(elem)) {\n      lastCenteredElem = elem; \n      \n      this.checkPositions(lastCenteredElem);\n    }\n  });\n}\n\ncreateImageGrid() {\n  for(let y = 0; y < rowNum; y++) {\n    let row = document.createElement(\"div\");\n    row.className = rowClass;\n      for(let x = 0; x < imgNum; x++) {\n        let image = document.createElement(\"div\");\n        image.className = imageClass;\n        row.appendChild(image);\n      }\n    document.querySelector(containerSelector).appendChild(row);\n    \n    // Add the images to our representation\n    imgRep.push(gsap.utils.toArray(row.querySelectorAll(imageSelector)));\n  }\n  \n  rows = document.querySelectorAll(rowSelector);\n  imgMidIndex = Math.floor(imgNum / 2);\n  rowMidIndex = Math.floor(rowNum / 2);\n}\n\ncreateMask() {\n  let mask = document.createElement(\"div\");\n  mask.className = \"mask\";\n  document.body.appendChild(mask);\n  \n  gsap.set(mask, {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    zIndex: 9999,\n    // backgroundColor: \"green\",\n    // opacity: \"0.2\",\n  });\n}\n\nresize() {\n  winMidX = window.innerWidth / 2;\n  winMidY = window.innerHeight / 2;\n  boxWidth = window.innerWidth * 0.35;\n  boxHeight = window.innerHeight * 0.35;\n  gutter = window.innerWidth * 0.05;\n  horizSpacing = boxWidth + gutter;\n  vertSpacing = boxHeight + gutter;\n  horizOffset = -(imgMidIndex * horizSpacing + boxWidth / 2) + winMidX;\n  vertOffset = -(rowMidIndex * vertSpacing + boxHeight / 2) + winMidY;\n  \n  // Reset our container and rows\n  gsap.set(containerSelector, {x: 0, y: 0});\n  \n  rows.forEach(function(row, i) {\n    gsap.set(row, {\n      attr: { \n        \"data-offset\": function() {\n          if(i % 2 === 0) return false;\n          else return true;\n        }\n      },\n      x: function() {\n        if(i % 2 === 0)\n          return horizOffset;\n        else\n          return horizOffset - boxWidth / 2;\n      },\n      y: function() {\n        return i * vertSpacing + vertOffset;\n      },\n    });\n\n    gsap.set(row.querySelectorAll(imageSelector), {\n      width: boxWidth,\n      height: boxHeight,\n      x: function(index) {\n        return index * horizSpacing;\n      }\n    });\n    \n    // Update our representation of the rows\n    rowArray[i] = row;\n  });\n}\n\nsetStyles() {\n  gsap.set(\"body\", {\n    margin: 0,\n    overflow: \"hidden\"\n  });\n  \n  const randImgSize = Math.floor( Math.max(window.innerWidth, window.innerHeight) / 3);\n  gsap.set(imageSelector, {\n    backgroundImage: function(index) {\n      if(imgURLArray) {\n        return imgURLArray[index % imgURLArrayLength];\n      } else \n        return `url(https://picsum.photos/${randImgSize}/${randImgSize}?random=${index})`;\n    },\n    position: \"absolute\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    top: 0,\n    left: 0\n  });\n  \n  gsap.set(rowSelector, {\n    position: \"absolute\"\n  });\n}\n\ncreateDraggable() {\n  let options = {\n    trigger: \".mask\",\n    dragResistance: 0.4,\n    resistance: 400,\n    onDrag: this.updateCenterElem,\n  }\n  \n  if(useInertia) {\n    options.inertia = true;\n    options.onThrowUpdate = this.updateCenterElem;\n    \n    if(useCenterGrid) {\n      options.onThrowComplete = this.centerGrid;\n    }\n  } else if(useCenterGrid) { // No inertia\n    options.onDragEnd = this.centerGrid;\n  }\n      \n  return Draggable.create(containerSelector, options);\n}\n\n  /*moveArrayIndex(array, oldIndex, newIndex) {\n      if (newIndex >= array.length) {\n          newIndex = array.length - 1;\n      }\n      array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n      return array;\n  }\n\n\n  checkPositions(elem) {\n  // Find the location in our array of the element\n    let rowIndex = -1,\n        imgIndex = -1;\n    imgRep.forEach((row, i) => {\n      row.forEach((img, j) => {\n        if(elem.isSameNode(img)) {\n          rowIndex = i;\n          imgIndex = j;\n        }\n      });\n    });\n  \n  // Element not found, return\n    if(rowIndex === -1)\n      return;\n    \n    // Reposition elements as necessary so that our element is in the center\n    // Reposition the rows as necessary\n    if(rowIndex < rowMidIndex) {\n      for(let i = rowIndex; i < rowMidIndex; i++) {\n        // Update the row's actual position\n        let rowY = gsap.getProperty(rowArray[0], \"y\");\n        \n        if(rowArray.length % 2 === 1) { // Odd number of rows means we have to handle offset\n          let row = rowArray[rowArray.length - 1];\n          if(row.dataset.offset === \"true\") {\n            gsap.set(row, {y: rowY - gutter - boxHeight, x: \"+=\" + boxWidth / 2});\n            row.dataset.offset = \"false\";\n          } else {\n            gsap.set(row, {y: rowY - gutter - boxHeight, x: \"-=\" + boxWidth / 2});\n            row.dataset.offset = \"true\";\n          }\n        } else { // Equal number of rows; don't have to handle offset\n          gsap.set(rowArray[rowArray.length - 1], {y: rowY - gutter - boxHeight});\n        }\n        \n        // Update our representations\n        this.moveArrayIndex(imgRep, imgRep.length - 1, 0);\n        this.moveArrayIndex(rowArray, rowArray.length - 1, 0);\n      }\n    } else if(rowIndex > rowMidIndex) {\n      for(let i = rowMidIndex; i < rowIndex; i++) {\n        // Update the row's actual position\n        let rowY = gsap.getProperty(rowArray[rowArray.length - 1], \"y\");\n        \n        if(rowArray.length % 2 === 1) { // Odd number of rows means we have to handle offset\n          let row = rowArray[0];\n          if(row.dataset.offset === \"true\") {\n            gsap.set(row, {y: rowY + gutter + boxHeight, x: \"-=\" + boxWidth / 2});\n            row.dataset.offset = \"false\";\n          } else {\n            gsap.set(row, {y: rowY + gutter + boxHeight, x: \"+=\" + boxWidth / 2});\n            row.dataset.offset = \"true\";\n          }\n        } else { // Equal number of rows; don't have to handle offset\n          gsap.set(rowArray[0], {y: rowY + gutter + boxHeight});\n        }\n        \n        // Update our representations\n        this.moveArrayIndex(imgRep, 0, imgRep.length - 1);\n        this.moveArrayIndex(rowArray, 0, rowArray.length - 1);\n      }\n    }\n  \n  \n    // Reposition the images as necessary\n    if(imgIndex < imgMidIndex) {\n      for(let rowNum = 0; rowNum < rows.length; rowNum++) { // Do it for every row\n        let row = imgRep[rowNum];\n        \n        for(let i = imgIndex; i < imgMidIndex; i++) {\n          // Update the images's actual position\n          let imgX = gsap.getProperty(row[0], \"x\");\n\n          gsap.set(row[row.length - 1], {x: imgX - gutter - boxWidth});\n\n          // Update our representation\n          this.moveArrayIndex(row, row.length - 1, 0);\n        }\n      }\n    } else if(imgIndex > imgMidIndex) {\n      for(let rowNum = 0; rowNum < rows.length; rowNum++) { // Do it for every row\n        let row = imgRep[rowNum];\n        \n        for(let i = imgMidIndex; i < imgIndex; i++) {\n          // Update the images's actual position\n          let imgX = gsap.getProperty(row[imgNum - 1], \"x\");\n\n          gsap.set(row[0], {x: imgX + gutter + boxWidth});\n\n          // Update our representation\n          this.moveArrayIndex(row, 0, row.length - 1);\n        }\n      }\n    }\n  }\n\n\n  centerGrid() {\n    let bcr = lastCenteredElem.getBoundingClientRect();\n    let midX = bcr.x + bcr.width / 2;\n    let midY = bcr.y + bcr.height / 2;\n    \n    let x = winMidX - midX;\n    let y = winMidY - midY;\n    \n    gsap.to(containerSelector, {\n      ease: \"sine.inOut\",\n      duration: 0.7,\n      x: \"+=\" + x,\n      y: \"+=\" + y\n    });\n  }\n\n  updateCenterElem() {\n    let elems = document.elementsFromPoint(winMidX, winMidY);\n    elems.forEach(elem => {\n      if(elem.matches(imageSelector) && !lastCenteredElem.isSameNode(elem)) {\n        lastCenteredElem = elem; \n        \n        this.checkPositions(lastCenteredElem);\n      }\n    });\n  }\n\n  createMask() {\n    let mask = document.createElement(\"div\");\n    mask.className = \"mask\";\n    document.body.appendChild(mask);\n    \n    gsap.set(mask, {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      zIndex: 9999,\n    });\n  }*/\n\n  /*resize() {\n    winMidX = innerWidth / 2;\n    winMidY = innerHeight / 2;\n    boxWidth = innerWidth * 0.35;\n    boxHeight = innerHeight * 0.35;\n    gutter = innerWidth * 0.05;\n    horizSpacing = boxWidth + gutter;\n    vertSpacing = boxHeight + gutter;\n    horizOffset = -(imgMidIndex * horizSpacing + boxWidth / 2) + winMidX;\n    vertOffset = -(rowMidIndex * vertSpacing + boxHeight / 2) + winMidY;\n    \n    // Reset our container and rows\n    gsap.set(containerSelector, {x: 0, y: 0, rotate: 30});\n    let imgNum = document.querySelectorAll(imageSelector);\n    for (var i = 0; i < imgNum.length; i++) {\n        gsap.set(imgNum[i], {\n          x: function() {\n              return 0;\n          },\n          y: function() {\n            return 0;\n          },\n        });\n    }\n\n    var callback = function (entries, observer) {\n      entries.forEach(function(entry) {\n        if (entry.isIntersecting) {\n          // play the individual target.timeline\n          entry.target.timeline.play();\n        } else {\n          //entry.target.timeline.pause(0);\n        }\n      });\n    };\n\n    var options = {\n      threshold: 0.6, // target 'section' should be 60% visible\n      rootMargin: '0px 0px -40% 0px'\n      //rootMargin isn't active in a normal CodePen.\n      //Change View: use DebugMode\n    };\n\n    var observer = new IntersectionObserver(callback, options);\n    var targets = document.querySelectorAll(imageSelector);\n\n    // a loop: create the individual target timelines\n    targets.forEach(function(target) {\n      var ww = window.innerWidth + 300;\n      var action = gsap.timeline({paused:false})\n      .to(target, {\n        duration: 10, \n        x:ww, \n        ease: \"sine.inOut\", \n        repeat: -1\n      });\n      \n      target.timeline = action;\n    });\n\n    Array.prototype.forEach.call(targets, (el) => {observer.observe(el);});  \n    \n  }\n\n  createDraggable() {\n    let options = {\n      trigger: \".mask\",\n      dragResistance: 0.4,\n      resistance: 400,\n      rotate: 45,\n    }\n    \n    if(useInertia) {\n      options.inertia = true;\n    }\n        \n    return Draggable.create(imageSelector, options);\n  }*/\n\n  mouseMove = e => {\n    TweenLite.to(this.myRef.current, 0.5, {\n      css: {\n        left: e.pageX,\n        top: e.pageY\n      },\n      delay: 0.03\n    });\n  };\n\n  changeBackground(e) {\n    console.log(e.target)\n    e.target.style.background = 'red';\n  }\n\n  handleMouseEnter = () => {\n    TweenLite.to(this.myRef.current, 0, {\n      css: {\n        opacity: \"1\"\n      }\n    });\n  };\n\n  handleMouseLeave = () => {\n    TweenLite.to(this.myRef.current, 0, {\n      css: {\n        opacity: \"0\"\n      }\n    });\n  };\n\n  onHover = e => {\n    if (e.target.className === \"lib__item\") {\n      TweenLite.to(this.myRef.current, 0, {\n        css: { \"background-image\": \"url(\" + image1 + \")\" }\n      });\n    }\n    if (e.target.className === \"project p-2\") {\n      TweenLite.to(this.myRef.current, 0, {\n        css: { \"background-image\": \"url(\" + image2 + \")\" }\n      });\n    }\n    if (e.target.className === \"project p-3\") {\n      TweenLite.to(this.myRef.current, 0, {\n        css: { \"background-image\": \"url(\" + image3 + \")\" }\n      });\n    }\n    if (e.target.className === \"project p-4\") {\n      TweenLite.to(this.myRef.current, 0, {\n        css: { \"background-image\": \"url(\" + image4 + \")\" }\n      });\n    }\n  };\n\n  render() {\n    const dragInfo = {\n      position: 'absolute', \n      bottom: '20%',\n    };\n    return (\n      <React.Fragment>\n        <div className=\"Container__wrapper Container__center\">\n          <div>\n            <div className=\"Intro__wrapper\">\n              <h1 className=\"Heading__wrapper styles__font-size-xl styles__font-family-serif-bold Intro__title\">Nos voyages🏝</h1>\n              <div className=\"Heading__wrapper styles__font-size-sm Intro__desc\">Retrouvez ici toutes les villes que nous avons visité.</div>\n            </div>\n          </div>\n          <div className=\"Container__wrapper Container__absolute Container__center\"></div>\n          <div className=\"Container__wrapper Container__absolute Container__center\">\n              <div className=\"Heading__wrapper styles__font-size-xs\" style={dragInfo}>DRAG POUR EXPLORER</div>\n              <div className=\"lib__wrapper \">\n                <div className=\"lib__item\" onMouseOver={this.changeBackground}>\n                  <a data-hide-cursor=\"true\" className=\"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\" draggable=\"false\" href=\"/postcards/my-week\">\n                    <img className=\"Thumb__cover\" alt=\"My week by Raffaele Filiberti — sabato.studio\" draggable=\"false\" src={image1}/>\n                    <div className=\"Thumb__title\">My week by Raffaele Filiberti — sabato.studio\n                    </div>\n                  </a>\n                </div>\n                  <div className=\"lib__item\" onMouseOver={this.changeBackground}>\n                    <a data-hide-cursor=\"true\" className=\"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\" draggable=\"false\" href=\"/postcards/my-week\">\n                      <img className=\"Thumb__cover\" alt=\"My week by Raffaele Filiberti — sabato.studio\" draggable=\"false\" src={image1}/>\n                      <div className=\"Thumb__title\">My week by Raffaele Filiberti — sabato.studio\n                      </div>\n                    </a>\n                  </div>\n                  <div className=\"lib__item\" onMouseOver={this.changeBackground}>\n                    <a data-hide-cursor=\"true\" className=\"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\" draggable=\"false\" href=\"/postcards/my-week\">\n                      <img className=\"Thumb__cover\" alt=\"My week by Raffaele Filiberti — sabato.studio\" draggable=\"false\" src={image1}/>\n                      <div className=\"Thumb__title\">My week by Raffaele Filiberti — sabato.studio\n                      </div>\n                    </a>\n                  </div>\n                  <div className=\"lib__item\" onMouseOver={this.changeBackground}>\n                    <a data-hide-cursor=\"true\" className=\"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\" draggable=\"false\" href=\"/postcards/my-week\">\n                      <img className=\"Thumb__cover\" alt=\"My week by Raffaele Filiberti — sabato.studio\" draggable=\"false\" src={image1}/>\n                      <div className=\"Thumb__title\">My week by Raffaele Filiberti — sabato.studio\n                      </div>\n                    </a>\n                  </div>\n                  <div className=\"lib__item\" onMouseOver={this.changeBackground}>\n                    <a data-hide-cursor=\"true\" className=\"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\" draggable=\"false\" href=\"/postcards/my-week\">\n                      <img className=\"Thumb__cover\" alt=\"My week by Raffaele Filiberti — sabato.studio\" draggable=\"false\" src={image1}/>\n                      <div className=\"Thumb__title\">My week by Raffaele Filiberti — sabato.studio\n                      </div>\n                    </a>\n                  </div>\n                  <div className=\"lib__item\" onMouseOver={this.changeBackground}>\n                    <a data-hide-cursor=\"true\" className=\"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\" draggable=\"false\" href=\"/postcards/my-week\">\n                      <img className=\"Thumb__cover\" alt=\"My week by Raffaele Filiberti — sabato.studio\" draggable=\"false\" src={image1}/>\n                      <div className=\"Thumb__title\">My week by Raffaele Filiberti — sabato.studio\n                      </div>\n                    </a>\n                  </div>\n                  <div className=\"lib__item\" onMouseOver={this.changeBackground}>\n                    <a data-hide-cursor=\"true\" className=\"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\" draggable=\"false\" href=\"/postcards/my-week\">\n                      <img className=\"Thumb__cover\" alt=\"My week by Raffaele Filiberti — sabato.studio\" draggable=\"false\" src={image1}/>\n                      <div className=\"Thumb__title\">My week by Raffaele Filiberti — sabato.studio\n                      </div>\n                    </a>\n                  </div>\n                  <div className=\"lib__item\" onMouseOver={this.changeBackground}>\n                    <a data-hide-cursor=\"true\" className=\"styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-medium Thumb__layout-horizontal\" draggable=\"false\" href=\"/postcards/my-week\">\n                      <img className=\"Thumb__cover\" alt=\"My week by Raffaele Filiberti — sabato.studio\" draggable=\"false\" src={image1}/>\n                      <div className=\"Thumb__title\">My week by Raffaele Filiberti — sabato.studio\n                      </div>\n                    </a>\n                  </div>\n              </div>\n              <div id=\"imageContainer\"></div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default projectList;\n"]},"metadata":{},"sourceType":"module"}