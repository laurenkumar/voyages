{"ast":null,"code":"var _jsxFileName = \"/Users/uthaya/ourjourneys/src/components/ProjectList/ProjectList.js\";\nimport React, { Component, useState } from \"react\";\nimport { TweenLite, gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport { InertiaPlugin } from \"gsap/InertiaPlugin\";\nimport Isotope from 'isotope-layout';\nimport image1 from \"./image-1.jpg\";\nimport image2 from \"./image-2.jpg\";\nimport image3 from \"./image-3.jpg\";\nimport image4 from \"./image-4.jpg\";\nimport \"./ProjectList.scss\";\ngsap.registerPlugin(Draggable, InertiaPlugin);\nconst containerId = \"imageContainer\";\nconst containerSelector = \"#\" + containerId;\nconst rowClass = \"row\";\nconst rowSelector = \".\" + rowClass;\nconst imageClass = \"sliderImage\";\nconst imageSelector = \".\" + imageClass;\nconst imgURLArray = [{\n  src: image1,\n  class: \"irlande\",\n  titre: \"The temple bar\"\n}, {\n  src: image2,\n  class: \"irlande\",\n  titre: \"Pont East / West side\"\n}, {\n  src: image3,\n  class: \"italie\",\n  titre: \"Le colisÃ©\"\n}, {\n  src: image4,\n  class: \"italie\",\n  titre: \"Florence\"\n}];\nconst imgURLArrayLength = imgURLArray ? imgURLArray.length : -1;\nconst rowNum = 4;\nconst imgNum = 6;\nconst useInertia = true;\nconst useCenterGrid = true;\nlet rows, imgMidIndex, rowMidIndex;\nconst rowArray = [];\nconst imgRep = [];\nlet boxWidth, boxHeight, gutter, horizSpacing, vertSpacing, horizOffset, vertOffset, winMidX, winMidY, lastCenteredElem;\n\nclass projectList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFilterChange = newFilter => {\n      if (newFilter === '*') {\n        this.setStyles();\n      } else {\n        this.setStyles(newFilter);\n      }\n\n      this.resize();\n    };\n\n    this.centerGrid = () => {\n      let bcr = lastCenteredElem.getBoundingClientRect();\n      let midX = bcr.x + bcr.width / 2;\n      let midY = bcr.y + bcr.height / 2;\n      let x = winMidX - midX;\n      let y = winMidY - midY;\n      gsap.to(containerSelector, {\n        ease: \"sine.inOut\",\n        duration: 0.7,\n        x: \"+=\" + x,\n        y: \"+=\" + y\n      });\n    };\n\n    this.updateCenterElem = () => {\n      let elems = document.elementsFromPoint(winMidX, winMidY);\n      elems.forEach(elem => {\n        if (elem.matches(imageSelector) && !lastCenteredElem.isSameNode(elem)) {\n          lastCenteredElem = elem;\n          this.checkPositions(lastCenteredElem);\n        }\n      });\n    };\n\n    this.mouseMove = e => {\n      TweenLite.to(this.myRef.current, 0.5, {\n        css: {\n          left: e.pageX,\n          top: e.pageY\n        },\n        delay: 0.03\n      });\n    };\n\n    this.handleMouseEnter = () => {\n      TweenLite.to(this.myRef.current, 0, {\n        css: {\n          opacity: \"1\"\n        }\n      });\n    };\n\n    this.handleMouseLeave = () => {\n      TweenLite.to(this.myRef.current, 0, {\n        css: {\n          opacity: \"0\"\n        }\n      });\n    };\n\n    this.onHover = e => {\n      if (e.target.className === \"lib__item\") {\n        TweenLite.to(this.myRef.current, 0, {\n          css: {\n            \"background-image\": \"url(\" + image1 + \")\"\n          }\n        });\n      }\n\n      if (e.target.className === \"project p-2\") {\n        TweenLite.to(this.myRef.current, 0, {\n          css: {\n            \"background-image\": \"url(\" + image2 + \")\"\n          }\n        });\n      }\n\n      if (e.target.className === \"project p-3\") {\n        TweenLite.to(this.myRef.current, 0, {\n          css: {\n            \"background-image\": \"url(\" + image3 + \")\"\n          }\n        });\n      }\n\n      if (e.target.className === \"project p-4\") {\n        TweenLite.to(this.myRef.current, 0, {\n          css: {\n            \"background-image\": \"url(\" + image4 + \")\"\n          }\n        });\n      }\n    };\n\n    this.myRef = React.createRef();\n    this.onFilterChange = this.onFilterChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  init() {\n    gsap.set(containerSelector, {\n      willChange: \"transform\"\n    });\n    this.createImageGrid();\n    this.createMask();\n    lastCenteredElem = document.querySelectorAll(imageSelector)[(rowMidIndex - 1) * imgNum + imgMidIndex];\n    this.createDraggable();\n    this.setStyles();\n    this.resize();\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  moveArrayIndex(array, oldIndex, newIndex) {\n    if (newIndex >= array.length) {\n      newIndex = array.length - 1;\n    }\n\n    array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n    return array;\n  }\n\n  checkPositions(elem) {\n    // Find the location in our array of the element\n    let rowIndex = -1,\n        imgIndex = -1;\n    imgRep.forEach((row, i) => {\n      row.forEach((img, j) => {\n        if (elem.isSameNode(img)) {\n          rowIndex = i;\n          imgIndex = j;\n        }\n      });\n    }); // Element not found, return\n\n    if (rowIndex === -1) return; // Reposition elements as necessary so that our element is in the center\n    // Reposition the rows as necessary\n\n    if (rowIndex < rowMidIndex) {\n      for (let i = rowIndex; i < rowMidIndex; i++) {\n        // Update the row's actual position\n        let rowY = gsap.getProperty(rowArray[0], \"y\");\n\n        if (rowArray.length % 2 === 1) {\n          // Odd number of rows means we have to handle offset\n          let row = rowArray[rowArray.length - 1];\n\n          if (row.dataset.offset === \"true\") {\n            gsap.set(row, {\n              y: rowY - gutter - boxHeight,\n              x: \"+=\" + boxWidth / 2\n            });\n            row.dataset.offset = \"false\";\n          } else {\n            gsap.set(row, {\n              y: rowY - gutter - boxHeight,\n              x: \"-=\" + boxWidth / 2\n            });\n            row.dataset.offset = \"true\";\n          }\n        } else {\n          // Equal number of rows; don't have to handle offset\n          gsap.set(rowArray[rowArray.length - 1], {\n            y: rowY - gutter - boxHeight\n          });\n        } // Update our representations\n\n\n        this.moveArrayIndex(imgRep, imgRep.length - 1, 0);\n        this.moveArrayIndex(rowArray, rowArray.length - 1, 0);\n      }\n    } else if (rowIndex > rowMidIndex) {\n      for (let i = rowMidIndex; i < rowIndex; i++) {\n        // Update the row's actual position\n        let rowY = gsap.getProperty(rowArray[rowArray.length - 1], \"y\");\n\n        if (rowArray.length % 2 === 1) {\n          // Odd number of rows means we have to handle offset\n          let row = rowArray[0];\n\n          if (row.dataset.offset === \"true\") {\n            gsap.set(row, {\n              y: rowY + gutter + boxHeight,\n              x: \"-=\" + boxWidth / 2\n            });\n            row.dataset.offset = \"false\";\n          } else {\n            gsap.set(row, {\n              y: rowY + gutter + boxHeight,\n              x: \"+=\" + boxWidth / 2\n            });\n            row.dataset.offset = \"true\";\n          }\n        } else {\n          // Equal number of rows; don't have to handle offset\n          gsap.set(rowArray[0], {\n            y: rowY + gutter + boxHeight\n          });\n        } // Update our representations\n\n\n        this.moveArrayIndex(imgRep, 0, imgRep.length - 1);\n        this.moveArrayIndex(rowArray, 0, rowArray.length - 1);\n      }\n    } // Reposition the images as necessary\n\n\n    if (imgIndex < imgMidIndex) {\n      for (let rowNum = 0; rowNum < rows.length; rowNum++) {\n        // Do it for every row\n        let row = imgRep[rowNum];\n\n        for (let i = imgIndex; i < imgMidIndex; i++) {\n          // Update the images's actual position\n          let imgX = gsap.getProperty(row[0], \"x\");\n          gsap.set(row[row.length - 1], {\n            x: imgX - gutter - boxWidth\n          }); // Update our representation\n\n          this.moveArrayIndex(row, row.length - 1, 0);\n        }\n      }\n    } else if (imgIndex > imgMidIndex) {\n      for (let rowNum = 0; rowNum < rows.length; rowNum++) {\n        // Do it for every row\n        let row = imgRep[rowNum];\n\n        for (let i = imgMidIndex; i < imgIndex; i++) {\n          // Update the images's actual position\n          let imgX = gsap.getProperty(row[imgNum - 1], \"x\");\n          gsap.set(row[0], {\n            x: imgX + gutter + boxWidth\n          }); // Update our representation\n\n          this.moveArrayIndex(row, 0, row.length - 1);\n        }\n      }\n    }\n  }\n\n  getCenterCoords(endX, endY) {\n    return {\n      x: winMidX - endX,\n      y: winMidY - endY\n    };\n  }\n\n  createImageGrid() {\n    for (let y = 0; y < rowNum; y++) {\n      let row = document.createElement(\"div\");\n      row.className = rowClass;\n\n      for (let x = 0; x < imgNum; x++) {\n        let image = document.createElement(\"div\");\n        let link = document.createElement(\"a\");\n        let legend = document.createElement(\"div\");\n        legend.className = \"Thumb__title\";\n        link.className = \"filter-item styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-small Thumb__layout-horizontal\";\n        image.className = imageClass;\n        image.onmouseover = replaceTitle;\n        row.appendChild(link);\n        link.appendChild(image);\n        image.appendChild(legend);\n      }\n\n      document.querySelector(containerSelector).appendChild(row); // Add the images to our representation\n\n      imgRep.push(gsap.utils.toArray(row.querySelectorAll(imageSelector)));\n    }\n\n    rows = document.querySelectorAll(rowSelector);\n    imgMidIndex = Math.floor(imgNum / 2);\n    rowMidIndex = Math.floor(rowNum / 2);\n  }\n\n  replaceTitle() {\n    console.log(\"tototo\");\n  }\n\n  createMask() {\n    let mask = document.createElement(\"div\");\n    mask.className = \"mask\";\n    document.body.appendChild(mask);\n    gsap.set(mask, {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      zIndex: 9999 // backgroundColor: \"green\",\n      // opacity: \"0.2\",\n\n    });\n  }\n\n  resize() {\n    winMidX = window.innerWidth / 2;\n    winMidY = window.innerHeight / 2;\n    boxWidth = window.innerWidth * 0.35;\n    boxHeight = window.innerHeight * 0.35;\n    gutter = window.innerWidth * 0.09;\n    horizSpacing = boxWidth + gutter * 1.5;\n    vertSpacing = boxHeight + gutter;\n    horizOffset = -(imgMidIndex * horizSpacing + boxWidth / 2) + winMidX;\n    vertOffset = -(rowMidIndex * vertSpacing + boxHeight / 2) + winMidY; // Reset our container and rows\n\n    gsap.set(containerSelector, {\n      x: 0,\n      y: 0\n    });\n    rows.forEach(function (row, i) {\n      gsap.set(row, {\n        attr: {\n          \"data-offset\": function () {\n            if (i % 2 === 0) return false;else return true;\n          }\n        },\n        x: function () {\n          if (i % 2 === 0) return horizOffset;else return horizOffset - boxWidth / 2;\n        },\n        y: function () {\n          return i * vertSpacing + vertOffset;\n        }\n      });\n      gsap.set(row.querySelectorAll(imageSelector), {\n        width: boxWidth * 0.5,\n        height: boxHeight,\n        x: function (index) {\n          return index * horizSpacing;\n        }\n      });\n      const tl = gsap.timeline();\n      tl.from(row.querySelectorAll(imageSelector), {\n        scale: 0.2,\n        duration: 3,\n        y: 500,\n        ease: \"sine.inOut\",\n        opacity: 0\n      }); // Update our representation of the rows\n\n      rowArray[i] = row;\n    });\n  }\n\n  setStyles(param) {\n    gsap.set(\"body\", {\n      margin: 0,\n      overflow: \"hidden\"\n    });\n    const randImgSize = Math.floor(Math.max(window.innerWidth, window.innerHeight) / 3);\n    gsap.set(imageSelector, {\n      backgroundImage: function (index) {\n        if (param) {\n          const newImages = imgURLArray.filter(element => element.class === param);\n          const newImagesArrayLength = newImages ? newImages.length : -1;\n          return `url(` + newImages[index % newImagesArrayLength].src + `)`;\n        } else {\n          return `url(` + imgURLArray[index % imgURLArrayLength].src + `)`;\n        }\n      },\n      position: \"absolute\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      border: \"4px solid\",\n      top: 0,\n      left: 0\n    });\n    let legend = document.querySelectorAll(imageSelector);\n\n    for (let x = 0; x < legend.length; x++) {\n      if (param) {\n        const newImages = imgURLArray.filter(element => element.class === param);\n        const newImagesArrayLength = newImages ? newImages.length : -1;\n        legend[x].children[0].innerHTML = newImages[x % newImagesArrayLength].titre;\n      } else {\n        legend[x].children[0].innerHTML = imgURLArray[x % imgURLArrayLength].titre;\n      }\n    }\n\n    gsap.set(rowSelector, {\n      position: \"absolute\"\n    });\n  }\n\n  createDraggable() {\n    let options = {\n      trigger: \".mask\",\n      dragResistance: 0.4,\n      resistance: 400,\n      onDrag: this.updateCenterElem\n    };\n\n    if (useInertia) {\n      options.inertia = true;\n      options.onThrowUpdate = this.updateCenterElem;\n\n      if (useCenterGrid) {\n        options.onThrowComplete = this.centerGrid;\n      }\n    } else if (useCenterGrid) {\n      // No inertia\n      options.onDragEnd = this.centerGrid;\n    }\n\n    return Draggable.create(containerSelector, options);\n  }\n\n  changeBackground(e) {\n    e.target.style.background = 'red';\n  }\n\n  render() {\n    const dragInfo = {\n      position: 'absolute',\n      bottom: '20%'\n    };\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      id: \"portfolio-flters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      \"data-filter\": \"*\",\n      onClick: () => {\n        this.onFilterChange(\"*\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, \"Le monde\"), React.createElement(\"li\", {\n      \"data-filter\": \"filter-one\",\n      onClick: () => {\n        this.onFilterChange(\"italie\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, \"Italie\"), React.createElement(\"li\", {\n      \"data-filter\": \"filter-two\",\n      onClick: () => {\n        this.onFilterChange(\"irlande\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, \"Irlande\")), React.createElement(\"div\", {\n      className: \"Container__wrapper Container__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Intro__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Heading__wrapper styles__font-size-xl styles__font-family-serif-bold Intro__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, \"Nos voyages\\uD83C\\uDFDD\"), React.createElement(\"div\", {\n      className: \"Heading__wrapper styles__font-size-sm Intro__desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, \"Retrouvez ici toutes les villes que nous avons visit\\xE9.\"))), React.createElement(\"div\", {\n      className: \"Container__wrapper Container__absolute Container__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Container__wrapper Container__absolute Container__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Heading__wrapper styles__font-size-xs\",\n      style: dragInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461\n      },\n      __self: this\n    }, \"DRAG POUR EXPLORER\"), React.createElement(\"div\", {\n      id: \"imageContainer\",\n      className: \"filter-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default projectList;","map":{"version":3,"sources":["/Users/uthaya/ourjourneys/src/components/ProjectList/ProjectList.js"],"names":["React","Component","useState","TweenLite","gsap","Draggable","InertiaPlugin","Isotope","image1","image2","image3","image4","registerPlugin","containerId","containerSelector","rowClass","rowSelector","imageClass","imageSelector","imgURLArray","src","class","titre","imgURLArrayLength","length","rowNum","imgNum","useInertia","useCenterGrid","rows","imgMidIndex","rowMidIndex","rowArray","imgRep","boxWidth","boxHeight","gutter","horizSpacing","vertSpacing","horizOffset","vertOffset","winMidX","winMidY","lastCenteredElem","projectList","constructor","props","onFilterChange","newFilter","setStyles","resize","centerGrid","bcr","getBoundingClientRect","midX","x","width","midY","y","height","to","ease","duration","updateCenterElem","elems","document","elementsFromPoint","forEach","elem","matches","isSameNode","checkPositions","mouseMove","e","myRef","current","css","left","pageX","top","pageY","delay","handleMouseEnter","opacity","handleMouseLeave","onHover","target","className","createRef","bind","componentDidMount","init","set","willChange","createImageGrid","createMask","querySelectorAll","createDraggable","window","addEventListener","moveArrayIndex","array","oldIndex","newIndex","splice","rowIndex","imgIndex","row","i","img","j","rowY","getProperty","dataset","offset","imgX","getCenterCoords","endX","endY","createElement","image","link","legend","onmouseover","replaceTitle","appendChild","querySelector","push","utils","toArray","Math","floor","console","log","mask","body","position","zIndex","innerWidth","innerHeight","attr","index","tl","timeline","from","scale","param","margin","overflow","randImgSize","max","backgroundImage","newImages","filter","element","newImagesArrayLength","backgroundSize","backgroundPosition","border","children","innerHTML","options","trigger","dragResistance","resistance","onDrag","inertia","onThrowUpdate","onThrowComplete","onDragEnd","create","changeBackground","style","background","render","dragInfo","bottom"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { TweenLite, gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport { InertiaPlugin } from \"gsap/InertiaPlugin\";\nimport Isotope from 'isotope-layout';\nimport image1 from \"./image-1.jpg\";\nimport image2 from \"./image-2.jpg\";\nimport image3 from \"./image-3.jpg\";\nimport image4 from \"./image-4.jpg\";\n\nimport \"./ProjectList.scss\";\n\ngsap.registerPlugin(Draggable, InertiaPlugin);\nconst containerId = \"imageContainer\";\nconst containerSelector = \"#\" + containerId;\nconst rowClass = \"row\"\nconst rowSelector = \".\" + rowClass;\nconst imageClass = \"sliderImage\";\nconst imageSelector = \".\" + imageClass;\nconst imgURLArray = [{src: image1, class: \"irlande\", titre: \"The temple bar\"}, {src: image2, class: \"irlande\", titre: \"Pont East / West side\"}, {src: image3, class: \"italie\", titre: \"Le colisÃ©\"}, {src: image4, class: \"italie\", titre: \"Florence\"}];\nconst imgURLArrayLength = imgURLArray ? imgURLArray.length : -1;\nconst rowNum = 4;\nconst imgNum = 6;\n\nconst useInertia = true;\nconst useCenterGrid = true;\n\nlet rows,\nimgMidIndex,\nrowMidIndex;\nconst rowArray = [];\nconst imgRep = [];\n\nlet boxWidth,\nboxHeight,\ngutter,\nhorizSpacing,\nvertSpacing,\nhorizOffset,\nvertOffset,\nwinMidX,\nwinMidY,\nlastCenteredElem;\n\nclass projectList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.myRef = React.createRef();\n    this.onFilterChange = this.onFilterChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.init();\n  };\n\n  init() {\n    gsap.set(containerSelector, {willChange: \"transform\"});\n\n    this.createImageGrid();\n    this.createMask();\n    lastCenteredElem = document.querySelectorAll(imageSelector)[(rowMidIndex - 1) * imgNum + imgMidIndex];\n    \n    this.createDraggable();\n    \n    this.setStyles();\n    \n    this.resize();\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  onFilterChange = (newFilter) => {\n    if(newFilter === '*') {\n      this.setStyles();\n    } else {\n      this.setStyles(newFilter);\n    }\n    this.resize();\n  }\n\n  moveArrayIndex(array, oldIndex, newIndex) {\n    if (newIndex >= array.length) {\n      newIndex = array.length - 1;\n    }\n    array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n    return array;\n  }\n\n\n  checkPositions(elem) {\n  // Find the location in our array of the element\n  let rowIndex = -1,\n  imgIndex = -1;\n  imgRep.forEach((row, i) => {\n    row.forEach((img, j) => {\n      if(elem.isSameNode(img)) {\n        rowIndex = i;\n        imgIndex = j;\n      }\n    });\n  });\n  \n  // Element not found, return\n  if(rowIndex === -1)\n    return;\n  \n  // Reposition elements as necessary so that our element is in the center\n  // Reposition the rows as necessary\n  if(rowIndex < rowMidIndex) {\n    for(let i = rowIndex; i < rowMidIndex; i++) {\n      // Update the row's actual position\n      let rowY = gsap.getProperty(rowArray[0], \"y\");\n      \n      if(rowArray.length % 2 === 1) { // Odd number of rows means we have to handle offset\n        let row = rowArray[rowArray.length - 1];\n        if(row.dataset.offset === \"true\") {\n          gsap.set(row, {y: rowY - gutter - boxHeight, x: \"+=\" + boxWidth / 2});\n          row.dataset.offset = \"false\";\n        } else {\n          gsap.set(row, {y: rowY - gutter - boxHeight, x: \"-=\" + boxWidth / 2});\n          row.dataset.offset = \"true\";\n        }\n      } else { // Equal number of rows; don't have to handle offset\n      gsap.set(rowArray[rowArray.length - 1], {y: rowY - gutter - boxHeight});\n    }\n\n      // Update our representations\n      this.moveArrayIndex(imgRep, imgRep.length - 1, 0);\n      this.moveArrayIndex(rowArray, rowArray.length - 1, 0);\n    }\n  } else if(rowIndex > rowMidIndex) {\n    for(let i = rowMidIndex; i < rowIndex; i++) {\n      // Update the row's actual position\n      let rowY = gsap.getProperty(rowArray[rowArray.length - 1], \"y\");\n      \n      if(rowArray.length % 2 === 1) { // Odd number of rows means we have to handle offset\n        let row = rowArray[0];\n        if(row.dataset.offset === \"true\") {\n          gsap.set(row, {y: rowY + gutter + boxHeight, x: \"-=\" + boxWidth / 2});\n          row.dataset.offset = \"false\";\n        } else {\n          gsap.set(row, {y: rowY + gutter + boxHeight, x: \"+=\" + boxWidth / 2});\n          row.dataset.offset = \"true\";\n        }\n      } else { // Equal number of rows; don't have to handle offset\n      gsap.set(rowArray[0], {y: rowY + gutter + boxHeight});\n    }\n\n      // Update our representations\n      this.moveArrayIndex(imgRep, 0, imgRep.length - 1);\n      this.moveArrayIndex(rowArray, 0, rowArray.length - 1);\n    }\n  }\n  \n  \n  // Reposition the images as necessary\n  if(imgIndex < imgMidIndex) {\n    for(let rowNum = 0; rowNum < rows.length; rowNum++) { // Do it for every row\n      let row = imgRep[rowNum];\n      \n      for(let i = imgIndex; i < imgMidIndex; i++) {\n        // Update the images's actual position\n        let imgX = gsap.getProperty(row[0], \"x\");\n\n        gsap.set(row[row.length - 1], {x: imgX - gutter - boxWidth});\n\n        // Update our representation\n        this.moveArrayIndex(row, row.length - 1, 0);\n      }\n    }\n  } else if(imgIndex > imgMidIndex) {\n    for(let rowNum = 0; rowNum < rows.length; rowNum++) { // Do it for every row\n      let row = imgRep[rowNum];\n      \n      for(let i = imgMidIndex; i < imgIndex; i++) {\n        // Update the images's actual position\n        let imgX = gsap.getProperty(row[imgNum - 1], \"x\");\n\n        gsap.set(row[0], {x: imgX + gutter + boxWidth});\n\n        // Update our representation\n        this.moveArrayIndex(row, 0, row.length - 1);\n      }\n    }\n  }\n}\n\n\ncenterGrid = () => {\n  let bcr = lastCenteredElem.getBoundingClientRect();\n  let midX = bcr.x + bcr.width / 2;\n  let midY = bcr.y + bcr.height / 2;\n  \n  let x = winMidX - midX;\n  let y = winMidY - midY;\n  \n  gsap.to(containerSelector, {\n    ease: \"sine.inOut\",\n    duration: 0.7,\n    x: \"+=\" + x,\n    y: \"+=\" + y\n  });\n}\n\ngetCenterCoords(endX, endY) {\n  return {x: winMidX - endX, y: winMidY - endY}\n}\n\nupdateCenterElem = () => {\n  let elems = document.elementsFromPoint(winMidX, winMidY);\n  elems.forEach(elem => {\n    if(elem.matches(imageSelector) && !lastCenteredElem.isSameNode(elem)) {\n      lastCenteredElem = elem; \n      \n      this.checkPositions(lastCenteredElem);\n    }\n  });\n}\n\ncreateImageGrid() {\n  for(let y = 0; y < rowNum; y++) {\n    let row = document.createElement(\"div\");\n    row.className = rowClass;\n    for(let x = 0; x < imgNum; x++) {\n      let image = document.createElement(\"div\");\n      let link = document.createElement(\"a\");\n      let legend = document.createElement(\"div\");\n      legend.className = \"Thumb__title\";\n      link.className = \"filter-item styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-small Thumb__layout-horizontal\";\n      image.className = imageClass;\n      image.onmouseover = replaceTitle;\n      row.appendChild(link);\n      link.appendChild(image);\n      image.appendChild(legend);\n    }\n    document.querySelector(containerSelector).appendChild(row);\n    \n    // Add the images to our representation\n    imgRep.push(gsap.utils.toArray(row.querySelectorAll(imageSelector)));\n  }\n  \n  rows = document.querySelectorAll(rowSelector);\n  imgMidIndex = Math.floor(imgNum / 2);\n  rowMidIndex = Math.floor(rowNum / 2);\n}\n\nreplaceTitle() {\n  console.log(\"tototo\")\n}\n\ncreateMask() {\n  let mask = document.createElement(\"div\");\n  mask.className = \"mask\";\n  document.body.appendChild(mask);\n  \n  gsap.set(mask, {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    zIndex: 9999,\n    // backgroundColor: \"green\",\n    // opacity: \"0.2\",\n  });\n}\n\nresize() {\n  winMidX = window.innerWidth / 2;\n  winMidY = window.innerHeight / 2;\n  boxWidth = window.innerWidth * 0.35;\n  boxHeight = window.innerHeight * 0.35;\n  gutter = window.innerWidth * 0.09;\n  horizSpacing = boxWidth + gutter * 1.5;\n  vertSpacing = boxHeight + gutter;\n  horizOffset = -(imgMidIndex * horizSpacing + boxWidth / 2) + winMidX;\n  vertOffset = -(rowMidIndex * vertSpacing + boxHeight / 2) + winMidY;\n  \n  // Reset our container and rows\n  gsap.set(containerSelector, {x: 0, y: 0});\n  \n  rows.forEach(function(row, i) {\n    gsap.set(row, {\n      attr: { \n        \"data-offset\": function() {\n          if(i % 2 === 0) return false;\n          else return true;\n        }\n      },\n      x: function() {\n        if(i % 2 === 0)\n          return horizOffset;\n        else\n          return horizOffset - boxWidth / 2;\n      },\n      y: function() {\n        return i * vertSpacing + vertOffset;\n      },\n    });\n\n    gsap.set(row.querySelectorAll(imageSelector), {\n      width: boxWidth * 0.5,\n      height: boxHeight,\n      x: function(index) {\n        return index * horizSpacing;\n      }\n    });\n\n    const tl = gsap.timeline();\n\n    tl.from(row.querySelectorAll(imageSelector), {\n      scale: 0.2,\n      duration: 3,\n      y: 500,\n      ease: \"sine.inOut\",\n      opacity: 0\n    });\n    \n    // Update our representation of the rows\n    rowArray[i] = row;\n  });\n}\n\nsetStyles(param) {\n  gsap.set(\"body\", {\n    margin: 0,\n    overflow: \"hidden\"\n  });\n\n  const randImgSize = Math.floor( Math.max(window.innerWidth, window.innerHeight) / 3);\n  gsap.set(imageSelector, {\n    backgroundImage: function(index) {\n      if (param) {\n        const newImages = imgURLArray.filter(element => element.class === param);\n        const newImagesArrayLength = newImages ? newImages.length : -1;\n        return `url(` + newImages[index % newImagesArrayLength].src + `)`;\n      } else {\n        return `url(` + imgURLArray[index % imgURLArrayLength].src + `)`;\n      }\n    },\n    position: \"absolute\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    border: \"4px solid\",\n    top: 0,\n    left: 0\n  });\n\n  let legend = document.querySelectorAll(imageSelector);\n  for(let x = 0; x < legend.length; x++) {\n    if (param) {\n      const newImages = imgURLArray.filter(element => element.class === param);\n      const newImagesArrayLength = newImages ? newImages.length : -1;\n      legend[x].children[0].innerHTML = newImages[x % newImagesArrayLength].titre;\n    } else {\n      legend[x].children[0].innerHTML = imgURLArray[x % imgURLArrayLength].titre;\n    }\n  }\n\n  gsap.set(rowSelector, {\n    position: \"absolute\"\n  });\n}\n\ncreateDraggable() {\n  let options = {\n    trigger: \".mask\",\n    dragResistance: 0.4,\n    resistance: 400,\n    onDrag: this.updateCenterElem,\n  }\n  \n  if(useInertia) {\n    options.inertia = true;\n    options.onThrowUpdate = this.updateCenterElem;\n    \n    if(useCenterGrid) {\n      options.onThrowComplete = this.centerGrid;\n    }\n  } else if(useCenterGrid) { // No inertia\n    options.onDragEnd = this.centerGrid;\n  }\n\n  return Draggable.create(containerSelector, options);\n}\n\nmouseMove = e => {\n  TweenLite.to(this.myRef.current, 0.5, {\n    css: {\n      left: e.pageX,\n      top: e.pageY\n    },\n    delay: 0.03\n  });\n};\n\nchangeBackground(e) {\n  e.target.style.background = 'red';\n}\n\nhandleMouseEnter = () => {\n  TweenLite.to(this.myRef.current, 0, {\n    css: {\n      opacity: \"1\"\n    }\n  });\n};\n\nhandleMouseLeave = () => {\n  TweenLite.to(this.myRef.current, 0, {\n    css: {\n      opacity: \"0\"\n    }\n  });\n};\n\nonHover = e => {\n  if (e.target.className === \"lib__item\") {\n    TweenLite.to(this.myRef.current, 0, {\n      css: { \"background-image\": \"url(\" + image1 + \")\" }\n    });\n  }\n  if (e.target.className === \"project p-2\") {\n    TweenLite.to(this.myRef.current, 0, {\n      css: { \"background-image\": \"url(\" + image2 + \")\" }\n    });\n  }\n  if (e.target.className === \"project p-3\") {\n    TweenLite.to(this.myRef.current, 0, {\n      css: { \"background-image\": \"url(\" + image3 + \")\" }\n    });\n  }\n  if (e.target.className === \"project p-4\") {\n    TweenLite.to(this.myRef.current, 0, {\n      css: { \"background-image\": \"url(\" + image4 + \")\" }\n    });\n  }\n};\n\nrender() {\n  const dragInfo = {\n    position: 'absolute', \n    bottom: '20%',\n  };\n  return (\n    <React.Fragment>\n    <ul id=\"portfolio-flters\">\n    <li data-filter=\"*\" onClick={() => {this.onFilterChange(\"*\")}}>Le monde</li>\n    <li data-filter=\"filter-one\" onClick={() => {this.onFilterChange(\"italie\")}}>Italie</li>\n    <li data-filter=\"filter-two\" onClick={() => {this.onFilterChange(\"irlande\")}}>Irlande</li>\n    </ul>\n    <div className=\"Container__wrapper Container__center\">\n    <div>\n    <div className=\"Intro__wrapper\">\n    <h1 className=\"Heading__wrapper styles__font-size-xl styles__font-family-serif-bold Intro__title\">Nos voyagesð</h1>\n    <div className=\"Heading__wrapper styles__font-size-sm Intro__desc\">Retrouvez ici toutes les villes que nous avons visitÃ©.</div>\n    </div>\n    </div>\n    <div className=\"Container__wrapper Container__absolute Container__center\"></div>\n    <div className=\"Container__wrapper Container__absolute Container__center\">\n    <div className=\"Heading__wrapper styles__font-size-xs\" style={dragInfo}>DRAG POUR EXPLORER</div>\n    <div id=\"imageContainer\" className=\"filter-container\"></div>\n    </div>\n    </div>\n    </React.Fragment>\n    );\n}\n}\n\nexport default projectList;\n"]},"metadata":{},"sourceType":"module"}