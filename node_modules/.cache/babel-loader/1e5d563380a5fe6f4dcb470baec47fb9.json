{"ast":null,"code":"/*!\n * PhysicsPropsPlugin 3.2.6\n * https://greensock.com\n *\n * @license Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n    _coreInitted,\n    _getUnit,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _round = function _round(value) {\n  return Math.round(value * 10000) / 10000;\n},\n    _bonusValidated = 1,\n    //<name>PhysicsPropsPlugin</name>\n_initCore = function _initCore(core) {\n  gsap = core || _getGSAP();\n\n  if (!_coreInitted) {\n    _getUnit = gsap.utils.getUnit;\n    _coreInitted = 1;\n  }\n};\n\nvar PhysicsProp = function PhysicsProp(target, p, velocity, acceleration, friction, stepsPerTimeUnit) {\n  var cache = target._gsap,\n      curVal = cache.get(target, p);\n  this.p = p;\n  this.set = cache.set(target, p); //setter\n\n  this.s = this.val = parseFloat(curVal);\n  this.u = _getUnit(curVal) || 0;\n  this.vel = velocity || 0;\n  this.v = this.vel / stepsPerTimeUnit;\n\n  if (acceleration || acceleration === 0) {\n    this.acc = acceleration;\n    this.a = this.acc / (stepsPerTimeUnit * stepsPerTimeUnit);\n  } else {\n    this.acc = this.a = 0;\n  }\n\n  this.fr = 1 - (friction || 0);\n};\n\nexport var PhysicsPropsPlugin = {\n  version: \"3.2.6\",\n  name: \"physicsProps\",\n  register: _initCore,\n  init: function init(target, value, tween) {\n    if (!_coreInitted) {\n      _initCore();\n    }\n\n    var data = this,\n        p;\n    data.target = target;\n    data.tween = tween;\n    data.step = 0;\n    data.sps = 30; //steps per second\n\n    data.vProps = [];\n\n    for (p in value) {\n      var _value$p = value[p],\n          velocity = _value$p.velocity,\n          acceleration = _value$p.acceleration,\n          friction = _value$p.friction;\n\n      if (velocity || acceleration) {\n        data.vProps.push(new PhysicsProp(target, p, velocity, acceleration, friction, data.sps));\n\n        data._props.push(p);\n\n        if (friction) {\n          data.hasFr = 1;\n        }\n      }\n    }\n  },\n  render: function render(ratio, data) {\n    var vProps = data.vProps,\n        tween = data.tween,\n        target = data.target,\n        step = data.step,\n        hasFr = data.hasFr,\n        sps = data.sps,\n        i = vProps.length,\n        time = tween._from ? tween._dur - tween._time : tween._time,\n        curProp,\n        steps,\n        remainder,\n        j,\n        tt;\n\n    if (hasFr) {\n      time *= sps;\n      steps = (time | 0) - step;\n      remainder = time % 1;\n\n      if (steps >= 0) {\n        //going forward\n        while (i--) {\n          curProp = vProps[i];\n          j = steps;\n\n          while (j--) {\n            curProp.v += curProp.a;\n            curProp.v *= curProp.fr;\n            curProp.val += curProp.v;\n          }\n\n          curProp.set(target, curProp.p, _round(curProp.val + curProp.v * remainder) + curProp.u);\n        }\n      } else {\n        //going backwards\n        while (i--) {\n          curProp = vProps[i];\n          j = -steps;\n\n          while (j--) {\n            curProp.val -= curProp.v;\n            curProp.v /= curProp.fr;\n            curProp.v -= curProp.a;\n          }\n\n          curProp.set(target, curProp.p, _round(curProp.val + curProp.v * remainder) + curProp.u);\n        }\n      }\n\n      data.step += steps;\n    } else {\n      tt = time * time * 0.5;\n\n      while (i--) {\n        curProp = vProps[i];\n        curProp.set(target, curProp.p, _round(curProp.s + curProp.vel * time + curProp.acc * tt) + curProp.u);\n      }\n    }\n  },\n  kill: function kill(property) {\n    var vProps = this.vProps,\n        i = vProps.length;\n\n    while (i--) {\n      if (vProps[i].p === property) {\n        vProps.splice(i, 1);\n      }\n    }\n  }\n};\n_getGSAP() && gsap.registerPlugin(PhysicsPropsPlugin);\nexport { PhysicsPropsPlugin as default };","map":{"version":3,"sources":["/Users/uthaya/ourjourneys/node_modules/gsap/PhysicsPropsPlugin.js"],"names":["gsap","_coreInitted","_getUnit","_getGSAP","window","registerPlugin","_round","value","Math","round","_bonusValidated","_initCore","core","utils","getUnit","PhysicsProp","target","p","velocity","acceleration","friction","stepsPerTimeUnit","cache","_gsap","curVal","get","set","s","val","parseFloat","u","vel","v","acc","a","fr","PhysicsPropsPlugin","version","name","register","init","tween","data","step","sps","vProps","_value$p","push","_props","hasFr","render","ratio","i","length","time","_from","_dur","_time","curProp","steps","remainder","j","tt","kill","property","splice","default"],"mappings":"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","sourcesContent":["/*!\n * PhysicsPropsPlugin 3.2.6\n * https://greensock.com\n *\n * @license Copyright 2008-2020, GreenSock. All rights reserved.\n * Subject to the terms at https://greensock.com/standard-license or for\n * Club GreenSock members, the agreement issued with that membership.\n * @author: Jack Doyle, jack@greensock.com\n*/\n\n/* eslint-disable */\nvar gsap,\n    _coreInitted,\n    _getUnit,\n    _getGSAP = function _getGSAP() {\n  return gsap || typeof window !== \"undefined\" && (gsap = window.gsap) && gsap.registerPlugin && gsap;\n},\n    _round = function _round(value) {\n  return Math.round(value * 10000) / 10000;\n},\n    _bonusValidated = 1,\n    //<name>PhysicsPropsPlugin</name>\n_initCore = function _initCore(core) {\n  gsap = core || _getGSAP();\n\n  if (!_coreInitted) {\n    _getUnit = gsap.utils.getUnit;\n    _coreInitted = 1;\n  }\n};\n\nvar PhysicsProp = function PhysicsProp(target, p, velocity, acceleration, friction, stepsPerTimeUnit) {\n  var cache = target._gsap,\n      curVal = cache.get(target, p);\n  this.p = p;\n  this.set = cache.set(target, p); //setter\n\n  this.s = this.val = parseFloat(curVal);\n  this.u = _getUnit(curVal) || 0;\n  this.vel = velocity || 0;\n  this.v = this.vel / stepsPerTimeUnit;\n\n  if (acceleration || acceleration === 0) {\n    this.acc = acceleration;\n    this.a = this.acc / (stepsPerTimeUnit * stepsPerTimeUnit);\n  } else {\n    this.acc = this.a = 0;\n  }\n\n  this.fr = 1 - (friction || 0);\n};\n\nexport var PhysicsPropsPlugin = {\n  version: \"3.2.6\",\n  name: \"physicsProps\",\n  register: _initCore,\n  init: function init(target, value, tween) {\n    if (!_coreInitted) {\n      _initCore();\n    }\n\n    var data = this,\n        p;\n    data.target = target;\n    data.tween = tween;\n    data.step = 0;\n    data.sps = 30; //steps per second\n\n    data.vProps = [];\n\n    for (p in value) {\n      var _value$p = value[p],\n          velocity = _value$p.velocity,\n          acceleration = _value$p.acceleration,\n          friction = _value$p.friction;\n\n      if (velocity || acceleration) {\n        data.vProps.push(new PhysicsProp(target, p, velocity, acceleration, friction, data.sps));\n\n        data._props.push(p);\n\n        if (friction) {\n          data.hasFr = 1;\n        }\n      }\n    }\n  },\n  render: function render(ratio, data) {\n    var vProps = data.vProps,\n        tween = data.tween,\n        target = data.target,\n        step = data.step,\n        hasFr = data.hasFr,\n        sps = data.sps,\n        i = vProps.length,\n        time = tween._from ? tween._dur - tween._time : tween._time,\n        curProp,\n        steps,\n        remainder,\n        j,\n        tt;\n\n    if (hasFr) {\n      time *= sps;\n      steps = (time | 0) - step;\n      remainder = time % 1;\n\n      if (steps >= 0) {\n        //going forward\n        while (i--) {\n          curProp = vProps[i];\n          j = steps;\n\n          while (j--) {\n            curProp.v += curProp.a;\n            curProp.v *= curProp.fr;\n            curProp.val += curProp.v;\n          }\n\n          curProp.set(target, curProp.p, _round(curProp.val + curProp.v * remainder) + curProp.u);\n        }\n      } else {\n        //going backwards\n        while (i--) {\n          curProp = vProps[i];\n          j = -steps;\n\n          while (j--) {\n            curProp.val -= curProp.v;\n            curProp.v /= curProp.fr;\n            curProp.v -= curProp.a;\n          }\n\n          curProp.set(target, curProp.p, _round(curProp.val + curProp.v * remainder) + curProp.u);\n        }\n      }\n\n      data.step += steps;\n    } else {\n      tt = time * time * 0.5;\n\n      while (i--) {\n        curProp = vProps[i];\n        curProp.set(target, curProp.p, _round(curProp.s + curProp.vel * time + curProp.acc * tt) + curProp.u);\n      }\n    }\n  },\n  kill: function kill(property) {\n    var vProps = this.vProps,\n        i = vProps.length;\n\n    while (i--) {\n      if (vProps[i].p === property) {\n        vProps.splice(i, 1);\n      }\n    }\n  }\n};\n_getGSAP() && gsap.registerPlugin(PhysicsPropsPlugin);\nexport { PhysicsPropsPlugin as default };"]},"metadata":{},"sourceType":"module"}