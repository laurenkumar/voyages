{"ast":null,"code":"/**!\n* tippy.js v4.3.5\n* (c) 2017-2019 atomiks\n* MIT License\n*/\nimport Popper from 'popper.js';\nvar css = \".tippy-iOS{cursor:pointer!important;-webkit-tap-highlight-color:transparent}.tippy-popper{transition-timing-function:cubic-bezier(.165,.84,.44,1);max-width:calc(100% - 8px);pointer-events:none;outline:0}.tippy-popper[x-placement^=top] .tippy-backdrop{border-radius:40% 40% 0 0}.tippy-popper[x-placement^=top] .tippy-roundarrow{bottom:-7px;bottom:-6.5px;-webkit-transform-origin:50% 0;transform-origin:50% 0;margin:0 3px}.tippy-popper[x-placement^=top] .tippy-roundarrow svg{position:absolute;left:0;-webkit-transform:rotate(180deg);transform:rotate(180deg)}.tippy-popper[x-placement^=top] .tippy-arrow{border-top:8px solid #333;border-right:8px solid transparent;border-left:8px solid transparent;bottom:-7px;margin:0 3px;-webkit-transform-origin:50% 0;transform-origin:50% 0}.tippy-popper[x-placement^=top] .tippy-backdrop{-webkit-transform-origin:0 25%;transform-origin:0 25%}.tippy-popper[x-placement^=top] .tippy-backdrop[data-state=visible]{-webkit-transform:scale(1) translate(-50%,-55%);transform:scale(1) translate(-50%,-55%)}.tippy-popper[x-placement^=top] .tippy-backdrop[data-state=hidden]{-webkit-transform:scale(.2) translate(-50%,-45%);transform:scale(.2) translate(-50%,-45%);opacity:0}.tippy-popper[x-placement^=top] [data-animation=shift-toward][data-state=visible]{-webkit-transform:translateY(-10px);transform:translateY(-10px)}.tippy-popper[x-placement^=top] [data-animation=shift-toward][data-state=hidden]{opacity:0;-webkit-transform:translateY(-20px);transform:translateY(-20px)}.tippy-popper[x-placement^=top] [data-animation=perspective]{-webkit-transform-origin:bottom;transform-origin:bottom}.tippy-popper[x-placement^=top] [data-animation=perspective][data-state=visible]{-webkit-transform:perspective(700px) translateY(-10px);transform:perspective(700px) translateY(-10px)}.tippy-popper[x-placement^=top] [data-animation=perspective][data-state=hidden]{opacity:0;-webkit-transform:perspective(700px) rotateX(60deg);transform:perspective(700px) rotateX(60deg)}.tippy-popper[x-placement^=top] [data-animation=fade][data-state=visible]{-webkit-transform:translateY(-10px);transform:translateY(-10px)}.tippy-popper[x-placement^=top] [data-animation=fade][data-state=hidden]{opacity:0;-webkit-transform:translateY(-10px);transform:translateY(-10px)}.tippy-popper[x-placement^=top] [data-animation=shift-away][data-state=visible]{-webkit-transform:translateY(-10px);transform:translateY(-10px)}.tippy-popper[x-placement^=top] [data-animation=shift-away][data-state=hidden]{opacity:0}.tippy-popper[x-placement^=top] [data-animation=scale]{-webkit-transform-origin:bottom;transform-origin:bottom}.tippy-popper[x-placement^=top] [data-animation=scale][data-state=visible]{-webkit-transform:translateY(-10px);transform:translateY(-10px)}.tippy-popper[x-placement^=top] [data-animation=scale][data-state=hidden]{opacity:0;-webkit-transform:translateY(-10px) scale(.5);transform:translateY(-10px) scale(.5)}.tippy-popper[x-placement^=bottom] .tippy-backdrop{border-radius:0 0 30% 30%}.tippy-popper[x-placement^=bottom] .tippy-roundarrow{top:-7px;-webkit-transform-origin:50% 100%;transform-origin:50% 100%;margin:0 3px}.tippy-popper[x-placement^=bottom] .tippy-roundarrow svg{position:absolute;left:0}.tippy-popper[x-placement^=bottom] .tippy-arrow{border-bottom:8px solid #333;border-right:8px solid transparent;border-left:8px solid transparent;top:-7px;margin:0 3px;-webkit-transform-origin:50% 100%;transform-origin:50% 100%}.tippy-popper[x-placement^=bottom] .tippy-backdrop{-webkit-transform-origin:0 -50%;transform-origin:0 -50%}.tippy-popper[x-placement^=bottom] .tippy-backdrop[data-state=visible]{-webkit-transform:scale(1) translate(-50%,-45%);transform:scale(1) translate(-50%,-45%)}.tippy-popper[x-placement^=bottom] .tippy-backdrop[data-state=hidden]{-webkit-transform:scale(.2) translate(-50%);transform:scale(.2) translate(-50%);opacity:0}.tippy-popper[x-placement^=bottom] [data-animation=shift-toward][data-state=visible]{-webkit-transform:translateY(10px);transform:translateY(10px)}.tippy-popper[x-placement^=bottom] [data-animation=shift-toward][data-state=hidden]{opacity:0;-webkit-transform:translateY(20px);transform:translateY(20px)}.tippy-popper[x-placement^=bottom] [data-animation=perspective]{-webkit-transform-origin:top;transform-origin:top}.tippy-popper[x-placement^=bottom] [data-animation=perspective][data-state=visible]{-webkit-transform:perspective(700px) translateY(10px);transform:perspective(700px) translateY(10px)}.tippy-popper[x-placement^=bottom] [data-animation=perspective][data-state=hidden]{opacity:0;-webkit-transform:perspective(700px) rotateX(-60deg);transform:perspective(700px) rotateX(-60deg)}.tippy-popper[x-placement^=bottom] [data-animation=fade][data-state=visible]{-webkit-transform:translateY(10px);transform:translateY(10px)}.tippy-popper[x-placement^=bottom] [data-animation=fade][data-state=hidden]{opacity:0;-webkit-transform:translateY(10px);transform:translateY(10px)}.tippy-popper[x-placement^=bottom] [data-animation=shift-away][data-state=visible]{-webkit-transform:translateY(10px);transform:translateY(10px)}.tippy-popper[x-placement^=bottom] [data-animation=shift-away][data-state=hidden]{opacity:0}.tippy-popper[x-placement^=bottom] [data-animation=scale]{-webkit-transform-origin:top;transform-origin:top}.tippy-popper[x-placement^=bottom] [data-animation=scale][data-state=visible]{-webkit-transform:translateY(10px);transform:translateY(10px)}.tippy-popper[x-placement^=bottom] [data-animation=scale][data-state=hidden]{opacity:0;-webkit-transform:translateY(10px) scale(.5);transform:translateY(10px) scale(.5)}.tippy-popper[x-placement^=left] .tippy-backdrop{border-radius:50% 0 0 50%}.tippy-popper[x-placement^=left] .tippy-roundarrow{right:-12px;-webkit-transform-origin:33.33333333% 50%;transform-origin:33.33333333% 50%;margin:3px 0}.tippy-popper[x-placement^=left] .tippy-roundarrow svg{position:absolute;left:0;-webkit-transform:rotate(90deg);transform:rotate(90deg)}.tippy-popper[x-placement^=left] .tippy-arrow{border-left:8px solid #333;border-top:8px solid transparent;border-bottom:8px solid transparent;right:-7px;margin:3px 0;-webkit-transform-origin:0 50%;transform-origin:0 50%}.tippy-popper[x-placement^=left] .tippy-backdrop{-webkit-transform-origin:50% 0;transform-origin:50% 0}.tippy-popper[x-placement^=left] .tippy-backdrop[data-state=visible]{-webkit-transform:scale(1) translate(-50%,-50%);transform:scale(1) translate(-50%,-50%)}.tippy-popper[x-placement^=left] .tippy-backdrop[data-state=hidden]{-webkit-transform:scale(.2) translate(-75%,-50%);transform:scale(.2) translate(-75%,-50%);opacity:0}.tippy-popper[x-placement^=left] [data-animation=shift-toward][data-state=visible]{-webkit-transform:translateX(-10px);transform:translateX(-10px)}.tippy-popper[x-placement^=left] [data-animation=shift-toward][data-state=hidden]{opacity:0;-webkit-transform:translateX(-20px);transform:translateX(-20px)}.tippy-popper[x-placement^=left] [data-animation=perspective]{-webkit-transform-origin:right;transform-origin:right}.tippy-popper[x-placement^=left] [data-animation=perspective][data-state=visible]{-webkit-transform:perspective(700px) translateX(-10px);transform:perspective(700px) translateX(-10px)}.tippy-popper[x-placement^=left] [data-animation=perspective][data-state=hidden]{opacity:0;-webkit-transform:perspective(700px) rotateY(-60deg);transform:perspective(700px) rotateY(-60deg)}.tippy-popper[x-placement^=left] [data-animation=fade][data-state=visible]{-webkit-transform:translateX(-10px);transform:translateX(-10px)}.tippy-popper[x-placement^=left] [data-animation=fade][data-state=hidden]{opacity:0;-webkit-transform:translateX(-10px);transform:translateX(-10px)}.tippy-popper[x-placement^=left] [data-animation=shift-away][data-state=visible]{-webkit-transform:translateX(-10px);transform:translateX(-10px)}.tippy-popper[x-placement^=left] [data-animation=shift-away][data-state=hidden]{opacity:0}.tippy-popper[x-placement^=left] [data-animation=scale]{-webkit-transform-origin:right;transform-origin:right}.tippy-popper[x-placement^=left] [data-animation=scale][data-state=visible]{-webkit-transform:translateX(-10px);transform:translateX(-10px)}.tippy-popper[x-placement^=left] [data-animation=scale][data-state=hidden]{opacity:0;-webkit-transform:translateX(-10px) scale(.5);transform:translateX(-10px) scale(.5)}.tippy-popper[x-placement^=right] .tippy-backdrop{border-radius:0 50% 50% 0}.tippy-popper[x-placement^=right] .tippy-roundarrow{left:-12px;-webkit-transform-origin:66.66666666% 50%;transform-origin:66.66666666% 50%;margin:3px 0}.tippy-popper[x-placement^=right] .tippy-roundarrow svg{position:absolute;left:0;-webkit-transform:rotate(-90deg);transform:rotate(-90deg)}.tippy-popper[x-placement^=right] .tippy-arrow{border-right:8px solid #333;border-top:8px solid transparent;border-bottom:8px solid transparent;left:-7px;margin:3px 0;-webkit-transform-origin:100% 50%;transform-origin:100% 50%}.tippy-popper[x-placement^=right] .tippy-backdrop{-webkit-transform-origin:-50% 0;transform-origin:-50% 0}.tippy-popper[x-placement^=right] .tippy-backdrop[data-state=visible]{-webkit-transform:scale(1) translate(-50%,-50%);transform:scale(1) translate(-50%,-50%)}.tippy-popper[x-placement^=right] .tippy-backdrop[data-state=hidden]{-webkit-transform:scale(.2) translate(-25%,-50%);transform:scale(.2) translate(-25%,-50%);opacity:0}.tippy-popper[x-placement^=right] [data-animation=shift-toward][data-state=visible]{-webkit-transform:translateX(10px);transform:translateX(10px)}.tippy-popper[x-placement^=right] [data-animation=shift-toward][data-state=hidden]{opacity:0;-webkit-transform:translateX(20px);transform:translateX(20px)}.tippy-popper[x-placement^=right] [data-animation=perspective]{-webkit-transform-origin:left;transform-origin:left}.tippy-popper[x-placement^=right] [data-animation=perspective][data-state=visible]{-webkit-transform:perspective(700px) translateX(10px);transform:perspective(700px) translateX(10px)}.tippy-popper[x-placement^=right] [data-animation=perspective][data-state=hidden]{opacity:0;-webkit-transform:perspective(700px) rotateY(60deg);transform:perspective(700px) rotateY(60deg)}.tippy-popper[x-placement^=right] [data-animation=fade][data-state=visible]{-webkit-transform:translateX(10px);transform:translateX(10px)}.tippy-popper[x-placement^=right] [data-animation=fade][data-state=hidden]{opacity:0;-webkit-transform:translateX(10px);transform:translateX(10px)}.tippy-popper[x-placement^=right] [data-animation=shift-away][data-state=visible]{-webkit-transform:translateX(10px);transform:translateX(10px)}.tippy-popper[x-placement^=right] [data-animation=shift-away][data-state=hidden]{opacity:0}.tippy-popper[x-placement^=right] [data-animation=scale]{-webkit-transform-origin:left;transform-origin:left}.tippy-popper[x-placement^=right] [data-animation=scale][data-state=visible]{-webkit-transform:translateX(10px);transform:translateX(10px)}.tippy-popper[x-placement^=right] [data-animation=scale][data-state=hidden]{opacity:0;-webkit-transform:translateX(10px) scale(.5);transform:translateX(10px) scale(.5)}.tippy-tooltip{position:relative;color:#fff;border-radius:.25rem;font-size:.875rem;padding:.3125rem .5625rem;line-height:1.4;text-align:center;background-color:#333}.tippy-tooltip[data-size=small]{padding:.1875rem .375rem;font-size:.75rem}.tippy-tooltip[data-size=large]{padding:.375rem .75rem;font-size:1rem}.tippy-tooltip[data-animatefill]{overflow:hidden;background-color:initial}.tippy-tooltip[data-interactive],.tippy-tooltip[data-interactive] .tippy-roundarrow path{pointer-events:auto}.tippy-tooltip[data-inertia][data-state=visible]{transition-timing-function:cubic-bezier(.54,1.5,.38,1.11)}.tippy-tooltip[data-inertia][data-state=hidden]{transition-timing-function:ease}.tippy-arrow,.tippy-roundarrow{position:absolute;width:0;height:0}.tippy-roundarrow{width:18px;height:7px;fill:#333;pointer-events:none}.tippy-backdrop{position:absolute;background-color:#333;border-radius:50%;width:calc(110% + 2rem);left:50%;top:50%;z-index:-1;transition:all cubic-bezier(.46,.1,.52,.98);-webkit-backface-visibility:hidden;backface-visibility:hidden}.tippy-backdrop:after{content:\\\"\\\";float:left;padding-top:100%}.tippy-backdrop+.tippy-content{transition-property:opacity;will-change:opacity}.tippy-backdrop+.tippy-content[data-state=hidden]{opacity:0}\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar version = \"4.3.5\";\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined';\nvar ua = isBrowser ? navigator.userAgent : '';\nvar isIE = /MSIE |Trident\\//.test(ua);\nvar isUCBrowser = /UCBrowser\\//.test(ua);\nvar isIOS = isBrowser && /iPhone|iPad|iPod/.test(navigator.platform) && !window.MSStream;\nvar defaultProps = {\n  a11y: true,\n  allowHTML: true,\n  animateFill: true,\n  animation: 'shift-away',\n  appendTo: function appendTo() {\n    return document.body;\n  },\n  aria: 'describedby',\n  arrow: false,\n  arrowType: 'sharp',\n  boundary: 'scrollParent',\n  content: '',\n  delay: 0,\n  distance: 10,\n  duration: [325, 275],\n  flip: true,\n  flipBehavior: 'flip',\n  flipOnUpdate: false,\n  followCursor: false,\n  hideOnClick: true,\n  ignoreAttributes: false,\n  inertia: false,\n  interactive: false,\n  interactiveBorder: 2,\n  interactiveDebounce: 0,\n  lazy: true,\n  maxWidth: 350,\n  multiple: false,\n  offset: 0,\n  onHidden: function onHidden() {},\n  onHide: function onHide() {},\n  onMount: function onMount() {},\n  onShow: function onShow() {},\n  onShown: function onShown() {},\n  onTrigger: function onTrigger() {},\n  placement: 'top',\n  popperOptions: {},\n  role: 'tooltip',\n  showOnInit: false,\n  size: 'regular',\n  sticky: false,\n  target: '',\n  theme: 'dark',\n  touch: true,\n  touchHold: false,\n  trigger: 'mouseenter focus',\n  triggerTarget: null,\n  updateDuration: 0,\n  wait: null,\n  zIndex: 9999\n  /**\n   * If the set() method encounters one of these, the popperInstance must be\n   * recreated\n   */\n\n};\nvar POPPER_INSTANCE_DEPENDENCIES = ['arrow', 'arrowType', 'boundary', 'distance', 'flip', 'flipBehavior', 'flipOnUpdate', 'offset', 'placement', 'popperOptions'];\nvar elementProto = isBrowser ? Element.prototype : {};\nvar matches = elementProto.matches || elementProto.matchesSelector || elementProto.webkitMatchesSelector || elementProto.mozMatchesSelector || elementProto.msMatchesSelector;\n/**\n * Ponyfill for Array.from - converts iterable values to an array\n */\n\nfunction arrayFrom(value) {\n  return [].slice.call(value);\n}\n/**\n * Ponyfill for Element.prototype.closest\n */\n\n\nfunction closest(element, selector) {\n  return closestCallback(element, function (el) {\n    return matches.call(el, selector);\n  });\n}\n/**\n * Works like Element.prototype.closest, but uses a callback instead\n */\n\n\nfunction closestCallback(element, callback) {\n  while (element) {\n    if (callback(element)) {\n      return element;\n    }\n\n    element = element.parentElement;\n  }\n\n  return null;\n} // Passive event listener config\n\n\nvar PASSIVE = {\n  passive: true // Popper `preventOverflow` padding\n\n};\nvar PADDING = 4; // Popper attributes\n// In Popper v2 these will be `data-*` instead of `x-*` to adhere to HTML5 spec\n\nvar PLACEMENT_ATTRIBUTE = 'x-placement';\nvar OUT_OF_BOUNDARIES_ATTRIBUTE = 'x-out-of-boundaries'; // Classes\n\nvar IOS_CLASS = \"tippy-iOS\";\nvar ACTIVE_CLASS = \"tippy-active\";\nvar POPPER_CLASS = \"tippy-popper\";\nvar TOOLTIP_CLASS = \"tippy-tooltip\";\nvar CONTENT_CLASS = \"tippy-content\";\nvar BACKDROP_CLASS = \"tippy-backdrop\";\nvar ARROW_CLASS = \"tippy-arrow\";\nvar ROUND_ARROW_CLASS = \"tippy-roundarrow\"; // Selectors\n\nvar POPPER_SELECTOR = \".\".concat(POPPER_CLASS);\nvar TOOLTIP_SELECTOR = \".\".concat(TOOLTIP_CLASS);\nvar CONTENT_SELECTOR = \".\".concat(CONTENT_CLASS);\nvar BACKDROP_SELECTOR = \".\".concat(BACKDROP_CLASS);\nvar ARROW_SELECTOR = \".\".concat(ARROW_CLASS);\nvar ROUND_ARROW_SELECTOR = \".\".concat(ROUND_ARROW_CLASS);\nvar isUsingTouch = false;\n\nfunction onDocumentTouch() {\n  if (isUsingTouch) {\n    return;\n  }\n\n  isUsingTouch = true;\n\n  if (isIOS) {\n    document.body.classList.add(IOS_CLASS);\n  }\n\n  if (window.performance) {\n    document.addEventListener('mousemove', onDocumentMouseMove);\n  }\n}\n\nvar lastMouseMoveTime = 0;\n\nfunction onDocumentMouseMove() {\n  var now = performance.now(); // Chrome 60+ is 1 mousemove per animation frame, use 20ms time difference\n\n  if (now - lastMouseMoveTime < 20) {\n    isUsingTouch = false;\n    document.removeEventListener('mousemove', onDocumentMouseMove);\n\n    if (!isIOS) {\n      document.body.classList.remove(IOS_CLASS);\n    }\n  }\n\n  lastMouseMoveTime = now;\n}\n\nfunction onWindowBlur() {\n  var _document = document,\n      activeElement = _document.activeElement;\n\n  if (activeElement && activeElement.blur && activeElement._tippy) {\n    activeElement.blur();\n  }\n}\n/**\n * Adds the needed global event listeners\n */\n\n\nfunction bindGlobalEventListeners() {\n  document.addEventListener('touchstart', onDocumentTouch, PASSIVE);\n  window.addEventListener('blur', onWindowBlur);\n}\n\nvar keys = Object.keys(defaultProps);\n/**\n * Returns an object of optional props from data-tippy-* attributes\n */\n\nfunction getDataAttributeOptions(reference) {\n  return keys.reduce(function (acc, key) {\n    var valueAsString = (reference.getAttribute(\"data-tippy-\".concat(key)) || '').trim();\n\n    if (!valueAsString) {\n      return acc;\n    }\n\n    if (key === 'content') {\n      acc[key] = valueAsString;\n    } else {\n      try {\n        acc[key] = JSON.parse(valueAsString);\n      } catch (e) {\n        acc[key] = valueAsString;\n      }\n    }\n\n    return acc;\n  }, {});\n}\n/**\n * Polyfills the virtual reference (plain object) with Element.prototype props\n * Mutating because DOM elements are mutated, adds `_tippy` property\n */\n\n\nfunction polyfillElementPrototypeProperties(virtualReference) {\n  var polyfills = {\n    isVirtual: true,\n    attributes: virtualReference.attributes || {},\n    contains: function contains() {},\n    setAttribute: function setAttribute(key, value) {\n      virtualReference.attributes[key] = value;\n    },\n    getAttribute: function getAttribute(key) {\n      return virtualReference.attributes[key];\n    },\n    removeAttribute: function removeAttribute(key) {\n      delete virtualReference.attributes[key];\n    },\n    hasAttribute: function hasAttribute(key) {\n      return key in virtualReference.attributes;\n    },\n    addEventListener: function addEventListener() {},\n    removeEventListener: function removeEventListener() {},\n    classList: {\n      classNames: {},\n      add: function add(key) {\n        virtualReference.classList.classNames[key] = true;\n      },\n      remove: function remove(key) {\n        delete virtualReference.classList.classNames[key];\n      },\n      contains: function contains(key) {\n        return key in virtualReference.classList.classNames;\n      }\n    }\n  };\n\n  for (var key in polyfills) {\n    virtualReference[key] = polyfills[key];\n  }\n}\n/**\n * Determines if a value is a \"bare\" virtual element (before mutations done\n * by `polyfillElementPrototypeProperties()`). JSDOM elements show up as\n * [object Object], we can check if the value is \"element-like\" if it has\n * `addEventListener`\n */\n\n\nfunction isBareVirtualElement(value) {\n  return {}.toString.call(value) === '[object Object]' && !value.addEventListener;\n}\n/**\n * Determines if the value is a reference element\n */\n\n\nfunction isReferenceElement(value) {\n  return !!value._tippy && !matches.call(value, POPPER_SELECTOR);\n}\n/**\n * Safe .hasOwnProperty check, for prototype-less objects\n */\n\n\nfunction hasOwnProperty(obj, key) {\n  return {}.hasOwnProperty.call(obj, key);\n}\n/**\n * Returns an array of elements based on the value\n */\n\n\nfunction getArrayOfElements(value) {\n  if (isSingular(value)) {\n    // TODO: VirtualReference is not compatible to type Element\n    return [value];\n  }\n\n  if (value instanceof NodeList) {\n    return arrayFrom(value);\n  }\n\n  if (Array.isArray(value)) {\n    return value;\n  }\n\n  try {\n    return arrayFrom(document.querySelectorAll(value));\n  } catch (e) {\n    return [];\n  }\n}\n/**\n * Returns a value at a given index depending on if it's an array or number\n */\n\n\nfunction getValue(value, index, defaultValue) {\n  if (Array.isArray(value)) {\n    var v = value[index];\n    return v == null ? defaultValue : v;\n  }\n\n  return value;\n}\n/**\n * Debounce utility. To avoid bloating bundle size, we're only passing 1\n * argument here, a more generic function would pass all arguments. Only\n * `onMouseMove` uses this which takes the event object for now.\n */\n\n\nfunction debounce(fn, ms) {\n  // Avoid wrapping in `setTimeout` if ms is 0 anyway\n  if (ms === 0) {\n    return fn;\n  }\n\n  var timeout;\n  return function (arg) {\n    clearTimeout(timeout);\n    timeout = setTimeout(function () {\n      fn(arg);\n    }, ms);\n  };\n}\n/**\n * Prevents errors from being thrown while accessing nested modifier objects\n * in `popperOptions`\n */\n\n\nfunction getModifier(obj, key) {\n  return obj && obj.modifiers && obj.modifiers[key];\n}\n/**\n * Determines if an array or string includes a value\n */\n\n\nfunction includes(a, b) {\n  return a.indexOf(b) > -1;\n}\n/**\n * Determines if the value is a real element\n */\n\n\nfunction isRealElement(value) {\n  return value instanceof Element;\n}\n/**\n * Determines if the value is singular-like\n */\n\n\nfunction isSingular(value) {\n  return !!(value && hasOwnProperty(value, 'isVirtual')) || isRealElement(value);\n}\n/**\n * Firefox extensions don't allow setting .innerHTML directly, this will trick it\n */\n\n\nfunction innerHTML() {\n  return 'innerHTML';\n}\n/**\n * Evaluates a function if one, or returns the value\n */\n\n\nfunction invokeWithArgsOrReturn(value, args) {\n  return typeof value === 'function' ? value.apply(null, args) : value;\n}\n/**\n * Sets a popperInstance `flip` modifier's enabled state\n */\n\n\nfunction setFlipModifierEnabled(modifiers, value) {\n  modifiers.filter(function (m) {\n    return m.name === 'flip';\n  })[0].enabled = value;\n}\n/**\n * Determines if an element can receive focus\n * Always returns true for virtual objects\n */\n\n\nfunction canReceiveFocus(element) {\n  return isRealElement(element) ? matches.call(element, 'a[href],area[href],button,details,input,textarea,select,iframe,[tabindex]') && !element.hasAttribute('disabled') : true;\n}\n/**\n * Returns a new `div` element\n */\n\n\nfunction div() {\n  return document.createElement('div');\n}\n/**\n * Applies a transition duration to a list of elements\n */\n\n\nfunction setTransitionDuration(els, value) {\n  els.forEach(function (el) {\n    if (el) {\n      el.style.transitionDuration = \"\".concat(value, \"ms\");\n    }\n  });\n}\n/**\n * Sets the visibility state to elements so they can begin to transition\n */\n\n\nfunction setVisibilityState(els, state) {\n  els.forEach(function (el) {\n    if (el) {\n      el.setAttribute('data-state', state);\n    }\n  });\n}\n/**\n * Evaluates the props object by merging data attributes and\n * disabling conflicting options where necessary\n */\n\n\nfunction evaluateProps(reference, props) {\n  var out = _extends({}, props, {\n    content: invokeWithArgsOrReturn(props.content, [reference])\n  }, props.ignoreAttributes ? {} : getDataAttributeOptions(reference));\n\n  if (out.arrow || isUCBrowser) {\n    out.animateFill = false;\n  }\n\n  return out;\n}\n/**\n * Validates an object of options with the valid default props object\n */\n\n\nfunction validateOptions(options, defaultProps) {\n  Object.keys(options).forEach(function (option) {\n    if (!hasOwnProperty(defaultProps, option)) {\n      throw new Error(\"[tippy]: `\".concat(option, \"` is not a valid option\"));\n    }\n  });\n}\n/**\n * Sets the innerHTML of an element\n */\n\n\nfunction setInnerHTML(element, html) {\n  element[innerHTML()] = isRealElement(html) ? html[innerHTML()] : html;\n}\n/**\n * Sets the content of a tooltip\n */\n\n\nfunction setContent(contentEl, props) {\n  if (isRealElement(props.content)) {\n    setInnerHTML(contentEl, '');\n    contentEl.appendChild(props.content);\n  } else if (typeof props.content !== 'function') {\n    var key = props.allowHTML ? 'innerHTML' : 'textContent';\n    contentEl[key] = props.content;\n  }\n}\n/**\n * Returns the child elements of a popper element\n */\n\n\nfunction getChildren(popper) {\n  return {\n    tooltip: popper.querySelector(TOOLTIP_SELECTOR),\n    backdrop: popper.querySelector(BACKDROP_SELECTOR),\n    content: popper.querySelector(CONTENT_SELECTOR),\n    arrow: popper.querySelector(ARROW_SELECTOR) || popper.querySelector(ROUND_ARROW_SELECTOR)\n  };\n}\n/**\n * Adds `data-inertia` attribute\n */\n\n\nfunction addInertia(tooltip) {\n  tooltip.setAttribute('data-inertia', '');\n}\n/**\n * Removes `data-inertia` attribute\n */\n\n\nfunction removeInertia(tooltip) {\n  tooltip.removeAttribute('data-inertia');\n}\n/**\n * Creates an arrow element and returns it\n */\n\n\nfunction createArrowElement(arrowType) {\n  var arrow = div();\n\n  if (arrowType === 'round') {\n    arrow.className = ROUND_ARROW_CLASS;\n    setInnerHTML(arrow, '<svg viewBox=\"0 0 18 7\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 7s2.021-.015 5.253-4.218C6.584 1.051 7.797.007 9 0c1.203-.007 2.416 1.035 3.761 2.782C16.012 7.005 18 7 18 7H0z\"/></svg>');\n  } else {\n    arrow.className = ARROW_CLASS;\n  }\n\n  return arrow;\n}\n/**\n * Creates a backdrop element and returns it\n */\n\n\nfunction createBackdropElement() {\n  var backdrop = div();\n  backdrop.className = BACKDROP_CLASS;\n  backdrop.setAttribute('data-state', 'hidden');\n  return backdrop;\n}\n/**\n * Adds interactive-related attributes\n */\n\n\nfunction addInteractive(popper, tooltip) {\n  popper.setAttribute('tabindex', '-1');\n  tooltip.setAttribute('data-interactive', '');\n}\n/**\n * Removes interactive-related attributes\n */\n\n\nfunction removeInteractive(popper, tooltip) {\n  popper.removeAttribute('tabindex');\n  tooltip.removeAttribute('data-interactive');\n}\n/**\n * Add/remove transitionend listener from tooltip\n */\n\n\nfunction updateTransitionEndListener(tooltip, action, listener) {\n  // UC Browser hasn't adopted the `transitionend` event despite supporting\n  // unprefixed transitions...\n  var eventName = isUCBrowser && document.body.style.webkitTransition !== undefined ? 'webkitTransitionEnd' : 'transitionend';\n  tooltip[action + 'EventListener'](eventName, listener);\n}\n/**\n * Returns the popper's placement, ignoring shifting (top-start, etc)\n */\n\n\nfunction getBasicPlacement(popper) {\n  var fullPlacement = popper.getAttribute(PLACEMENT_ATTRIBUTE);\n  return fullPlacement ? fullPlacement.split('-')[0] : '';\n}\n/**\n * Triggers reflow\n */\n\n\nfunction reflow(popper) {\n  void popper.offsetHeight;\n}\n/**\n * Adds/removes theme from tooltip's classList\n */\n\n\nfunction updateTheme(tooltip, action, theme) {\n  theme.split(' ').forEach(function (themeName) {\n    tooltip.classList[action](themeName + '-theme');\n  });\n}\n/**\n * Constructs the popper element and returns it\n */\n\n\nfunction createPopperElement(id, props) {\n  var popper = div();\n  popper.className = POPPER_CLASS;\n  popper.id = \"tippy-\".concat(id);\n  popper.style.zIndex = '' + props.zIndex;\n  popper.style.position = 'absolute';\n  popper.style.top = '0';\n  popper.style.left = '0';\n\n  if (props.role) {\n    popper.setAttribute('role', props.role);\n  }\n\n  var tooltip = div();\n  tooltip.className = TOOLTIP_CLASS;\n  tooltip.style.maxWidth = props.maxWidth + (typeof props.maxWidth === 'number' ? 'px' : '');\n  tooltip.setAttribute('data-size', props.size);\n  tooltip.setAttribute('data-animation', props.animation);\n  tooltip.setAttribute('data-state', 'hidden');\n  updateTheme(tooltip, 'add', props.theme);\n  var content = div();\n  content.className = CONTENT_CLASS;\n  content.setAttribute('data-state', 'hidden');\n\n  if (props.interactive) {\n    addInteractive(popper, tooltip);\n  }\n\n  if (props.arrow) {\n    tooltip.appendChild(createArrowElement(props.arrowType));\n  }\n\n  if (props.animateFill) {\n    tooltip.appendChild(createBackdropElement());\n    tooltip.setAttribute('data-animatefill', '');\n  }\n\n  if (props.inertia) {\n    addInertia(tooltip);\n  }\n\n  setContent(content, props);\n  tooltip.appendChild(content);\n  popper.appendChild(tooltip);\n  return popper;\n}\n/**\n * Updates the popper element based on the new props\n */\n\n\nfunction updatePopperElement(popper, prevProps, nextProps) {\n  var _getChildren = getChildren(popper),\n      tooltip = _getChildren.tooltip,\n      content = _getChildren.content,\n      backdrop = _getChildren.backdrop,\n      arrow = _getChildren.arrow;\n\n  popper.style.zIndex = '' + nextProps.zIndex;\n  tooltip.setAttribute('data-size', nextProps.size);\n  tooltip.setAttribute('data-animation', nextProps.animation);\n  tooltip.style.maxWidth = nextProps.maxWidth + (typeof nextProps.maxWidth === 'number' ? 'px' : '');\n\n  if (nextProps.role) {\n    popper.setAttribute('role', nextProps.role);\n  } else {\n    popper.removeAttribute('role');\n  }\n\n  if (prevProps.content !== nextProps.content) {\n    setContent(content, nextProps);\n  } // animateFill\n\n\n  if (!prevProps.animateFill && nextProps.animateFill) {\n    tooltip.appendChild(createBackdropElement());\n    tooltip.setAttribute('data-animatefill', '');\n  } else if (prevProps.animateFill && !nextProps.animateFill) {\n    tooltip.removeChild(backdrop);\n    tooltip.removeAttribute('data-animatefill');\n  } // arrow\n\n\n  if (!prevProps.arrow && nextProps.arrow) {\n    tooltip.appendChild(createArrowElement(nextProps.arrowType));\n  } else if (prevProps.arrow && !nextProps.arrow) {\n    tooltip.removeChild(arrow);\n  } // arrowType\n\n\n  if (prevProps.arrow && nextProps.arrow && prevProps.arrowType !== nextProps.arrowType) {\n    tooltip.replaceChild(createArrowElement(nextProps.arrowType), arrow);\n  } // interactive\n\n\n  if (!prevProps.interactive && nextProps.interactive) {\n    addInteractive(popper, tooltip);\n  } else if (prevProps.interactive && !nextProps.interactive) {\n    removeInteractive(popper, tooltip);\n  } // inertia\n\n\n  if (!prevProps.inertia && nextProps.inertia) {\n    addInertia(tooltip);\n  } else if (prevProps.inertia && !nextProps.inertia) {\n    removeInertia(tooltip);\n  } // theme\n\n\n  if (prevProps.theme !== nextProps.theme) {\n    updateTheme(tooltip, 'remove', prevProps.theme);\n    updateTheme(tooltip, 'add', nextProps.theme);\n  }\n}\n/**\n * Hides all visible poppers on the document\n */\n\n\nfunction hideAll() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      excludedReferenceOrInstance = _ref.exclude,\n      duration = _ref.duration;\n\n  arrayFrom(document.querySelectorAll(POPPER_SELECTOR)).forEach(function (popper) {\n    var instance = popper._tippy;\n\n    if (instance) {\n      var isExcluded = false;\n\n      if (excludedReferenceOrInstance) {\n        isExcluded = isReferenceElement(excludedReferenceOrInstance) ? instance.reference === excludedReferenceOrInstance : popper === excludedReferenceOrInstance.popper;\n      }\n\n      if (!isExcluded) {\n        instance.hide(duration);\n      }\n    }\n  });\n}\n/**\n * Determines if the mouse cursor is outside of the popper's interactive border\n * region\n */\n\n\nfunction isCursorOutsideInteractiveBorder(popperPlacement, popperRect, event, props) {\n  if (!popperPlacement) {\n    return true;\n  }\n\n  var x = event.clientX,\n      y = event.clientY;\n  var interactiveBorder = props.interactiveBorder,\n      distance = props.distance;\n  var exceedsTop = popperRect.top - y > (popperPlacement === 'top' ? interactiveBorder + distance : interactiveBorder);\n  var exceedsBottom = y - popperRect.bottom > (popperPlacement === 'bottom' ? interactiveBorder + distance : interactiveBorder);\n  var exceedsLeft = popperRect.left - x > (popperPlacement === 'left' ? interactiveBorder + distance : interactiveBorder);\n  var exceedsRight = x - popperRect.right > (popperPlacement === 'right' ? interactiveBorder + distance : interactiveBorder);\n  return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight;\n}\n/**\n * Returns the distance offset, taking into account the default offset due to\n * the transform: translate() rule (10px) in CSS\n */\n\n\nfunction getOffsetDistanceInPx(distance) {\n  return -(distance - 10) + 'px';\n}\n\nvar idCounter = 1; // Workaround for IE11's lack of new MouseEvent constructor\n\nvar mouseMoveListeners = [];\n/**\n * Creates and returns a Tippy object. We're using a closure pattern instead of\n * a class so that the exposed object API is clean without private members\n * prefixed with `_`.\n */\n\nfunction createTippy(reference, collectionProps) {\n  var props = evaluateProps(reference, collectionProps); // If the reference shouldn't have multiple tippys, return null early\n\n  if (!props.multiple && reference._tippy) {\n    return null;\n  }\n  /* ======================= 🔒 Private members 🔒 ======================= */\n\n\n  var lastTriggerEventType;\n  var lastMouseMoveEvent;\n  var showTimeoutId;\n  var hideTimeoutId;\n  var scheduleHideAnimationFrameId;\n  var isScheduledToShow = false;\n  var isBeingDestroyed = false;\n  var previousPlacement;\n  var wasVisibleDuringPreviousUpdate = false;\n  var hasMountCallbackRun = false;\n  var currentMountCallback;\n  var currentTransitionEndListener;\n  var listeners = [];\n  var currentComputedPadding;\n  var debouncedOnMouseMove = debounce(onMouseMove, props.interactiveDebounce);\n  /* ======================= 🔑 Public members 🔑 ======================= */\n\n  var id = idCounter++;\n  var popper = createPopperElement(id, props);\n  var popperChildren = getChildren(popper);\n  var popperInstance = null;\n  var state = {\n    // Is the instance currently enabled?\n    isEnabled: true,\n    // Is the tippy currently showing and not transitioning out?\n    isVisible: false,\n    // Has the instance been destroyed?\n    isDestroyed: false,\n    // Is the tippy currently mounted to the DOM?\n    isMounted: false,\n    // Has the tippy finished transitioning in?\n    isShown: false\n  };\n  var instance = {\n    // properties\n    id: id,\n    reference: reference,\n    popper: popper,\n    popperChildren: popperChildren,\n    popperInstance: popperInstance,\n    props: props,\n    state: state,\n    // methods\n    clearDelayTimeouts: clearDelayTimeouts,\n    set: set,\n    setContent: setContent,\n    show: show,\n    hide: hide,\n    enable: enable,\n    disable: disable,\n    destroy: destroy\n    /* ==================== Initial instance mutations =================== */\n\n  };\n  reference._tippy = instance;\n  popper._tippy = instance;\n  addTriggersToReference();\n\n  if (!props.lazy) {\n    createPopperInstance();\n  }\n\n  if (props.showOnInit) {\n    scheduleShow();\n  } // Ensure the event listeners target can receive focus\n\n\n  if (props.a11y && !props.target && !canReceiveFocus(getEventListenersTarget())) {\n    getEventListenersTarget().setAttribute('tabindex', '0');\n  } // Prevent a tippy with a delay from hiding if the cursor left then returned\n  // before it started hiding\n\n\n  popper.addEventListener('mouseenter', function (event) {\n    if (instance.props.interactive && instance.state.isVisible && lastTriggerEventType === 'mouseenter') {\n      // We don't want props.onTrigger() to be called here, since the `event`\n      // object is not related to the reference element\n      scheduleShow(event, true);\n    }\n  });\n  popper.addEventListener('mouseleave', function () {\n    if (instance.props.interactive && lastTriggerEventType === 'mouseenter') {\n      document.addEventListener('mousemove', debouncedOnMouseMove);\n    }\n  });\n  return instance;\n  /* ======================= 🔒 Private methods 🔒 ======================= */\n\n  /**\n   * Removes the follow cursor listener\n   */\n\n  function removeFollowCursorListener() {\n    document.removeEventListener('mousemove', positionVirtualReferenceNearCursor);\n  }\n  /**\n   * Cleans up interactive mouse listeners\n   */\n\n\n  function cleanupInteractiveMouseListeners() {\n    document.body.removeEventListener('mouseleave', scheduleHide);\n    document.removeEventListener('mousemove', debouncedOnMouseMove);\n    mouseMoveListeners = mouseMoveListeners.filter(function (listener) {\n      return listener !== debouncedOnMouseMove;\n    });\n  }\n  /**\n   * Returns correct target used for event listeners\n   */\n\n\n  function getEventListenersTarget() {\n    return instance.props.triggerTarget || reference;\n  }\n  /**\n   * Adds the document click event listener for the instance\n   */\n\n\n  function addDocumentClickListener() {\n    document.addEventListener('click', onDocumentClick, true);\n  }\n  /**\n   * Removes the document click event listener for the instance\n   */\n\n\n  function removeDocumentClickListener() {\n    document.removeEventListener('click', onDocumentClick, true);\n  }\n  /**\n   * Returns transitionable inner elements used in show/hide methods\n   */\n\n\n  function getTransitionableElements() {\n    return [instance.popperChildren.tooltip, instance.popperChildren.backdrop, instance.popperChildren.content];\n  }\n  /**\n   * Determines if the instance is in `followCursor` mode.\n   * NOTE: in v5, touch devices will use `initial` behavior no matter the value.\n   */\n\n\n  function getIsInLooseFollowCursorMode() {\n    var followCursor = instance.props.followCursor;\n    return followCursor && lastTriggerEventType !== 'focus' || isUsingTouch && followCursor === 'initial';\n  }\n  /**\n   * Updates the tooltip's position on each animation frame\n   */\n\n\n  function makeSticky() {\n    setTransitionDuration([popper], isIE ? 0 : instance.props.updateDuration);\n    var prevRefRect = reference.getBoundingClientRect();\n\n    function updatePosition() {\n      var currentRefRect = reference.getBoundingClientRect(); // Only schedule an update if the reference rect has changed\n\n      if (prevRefRect.top !== currentRefRect.top || prevRefRect.right !== currentRefRect.right || prevRefRect.bottom !== currentRefRect.bottom || prevRefRect.left !== currentRefRect.left) {\n        instance.popperInstance.scheduleUpdate();\n      }\n\n      prevRefRect = currentRefRect;\n\n      if (instance.state.isMounted) {\n        requestAnimationFrame(updatePosition);\n      }\n    }\n\n    updatePosition();\n  }\n  /**\n   * Invokes a callback once the tooltip has fully transitioned out\n   */\n\n\n  function onTransitionedOut(duration, callback) {\n    onTransitionEnd(duration, function () {\n      if (!instance.state.isVisible && popper.parentNode && popper.parentNode.contains(popper)) {\n        callback();\n      }\n    });\n  }\n  /**\n   * Invokes a callback once the tooltip has fully transitioned in\n   */\n\n\n  function onTransitionedIn(duration, callback) {\n    onTransitionEnd(duration, callback);\n  }\n  /**\n   * Invokes a callback once the tooltip's CSS transition ends\n   */\n\n\n  function onTransitionEnd(duration, callback) {\n    var tooltip = instance.popperChildren.tooltip;\n    /**\n     * Listener added as the `transitionend` handler\n     */\n\n    function listener(event) {\n      if (event.target === tooltip) {\n        updateTransitionEndListener(tooltip, 'remove', listener);\n        callback();\n      }\n    } // Make callback synchronous if duration is 0\n    // `transitionend` won't fire otherwise\n\n\n    if (duration === 0) {\n      return callback();\n    }\n\n    updateTransitionEndListener(tooltip, 'remove', currentTransitionEndListener);\n    updateTransitionEndListener(tooltip, 'add', listener);\n    currentTransitionEndListener = listener;\n  }\n  /**\n   * Adds an event listener to the reference and stores it in `listeners`\n   */\n\n\n  function on(eventType, handler) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    getEventListenersTarget().addEventListener(eventType, handler, options);\n    listeners.push({\n      eventType: eventType,\n      handler: handler,\n      options: options\n    });\n  }\n  /**\n   * Adds event listeners to the reference based on the `trigger` prop\n   */\n\n\n  function addTriggersToReference() {\n    if (instance.props.touchHold && !instance.props.target) {\n      on('touchstart', onTrigger, PASSIVE);\n      on('touchend', onMouseLeave, PASSIVE);\n    }\n\n    instance.props.trigger.trim().split(' ').forEach(function (eventType) {\n      if (eventType === 'manual') {\n        return;\n      } // Non-delegates\n\n\n      if (!instance.props.target) {\n        on(eventType, onTrigger);\n\n        switch (eventType) {\n          case 'mouseenter':\n            on('mouseleave', onMouseLeave);\n            break;\n\n          case 'focus':\n            on(isIE ? 'focusout' : 'blur', onBlur);\n            break;\n        }\n      } else {\n        // Delegates\n        switch (eventType) {\n          case 'mouseenter':\n            on('mouseover', onDelegateShow);\n            on('mouseout', onDelegateHide);\n            break;\n\n          case 'focus':\n            on('focusin', onDelegateShow);\n            on('focusout', onDelegateHide);\n            break;\n\n          case 'click':\n            on(eventType, onDelegateShow);\n            break;\n        }\n      }\n    });\n  }\n  /**\n   * Removes event listeners from the reference\n   */\n\n\n  function removeTriggersFromReference() {\n    listeners.forEach(function (_ref) {\n      var eventType = _ref.eventType,\n          handler = _ref.handler,\n          options = _ref.options;\n      getEventListenersTarget().removeEventListener(eventType, handler, options);\n    });\n    listeners = [];\n  }\n  /**\n   * Positions the virtual reference near the cursor\n   */\n\n\n  function positionVirtualReferenceNearCursor(event) {\n    var _lastMouseMoveEvent = lastMouseMoveEvent = event,\n        x = _lastMouseMoveEvent.clientX,\n        y = _lastMouseMoveEvent.clientY; // Gets set once popperInstance `onCreate` has been called\n\n\n    if (!currentComputedPadding) {\n      return;\n    } // If the instance is interactive, avoid updating the position unless it's\n    // over the reference element\n\n\n    var isCursorOverReference = closestCallback(event.target, function (el) {\n      return el === reference;\n    });\n    var rect = reference.getBoundingClientRect();\n    var followCursor = instance.props.followCursor;\n    var isHorizontal = followCursor === 'horizontal';\n    var isVertical = followCursor === 'vertical'; // The virtual reference needs some size to prevent itself from overflowing\n\n    var isVerticalPlacement = includes(['top', 'bottom'], getBasicPlacement(popper));\n    var fullPlacement = popper.getAttribute(PLACEMENT_ATTRIBUTE);\n    var isVariation = fullPlacement ? !!fullPlacement.split('-')[1] : false;\n    var size = isVerticalPlacement ? popper.offsetWidth : popper.offsetHeight;\n    var halfSize = size / 2;\n    var verticalIncrease = isVerticalPlacement ? 0 : isVariation ? size : halfSize;\n    var horizontalIncrease = isVerticalPlacement ? isVariation ? size : halfSize : 0;\n\n    if (isCursorOverReference || !instance.props.interactive) {\n      instance.popperInstance.reference = _extends({}, instance.popperInstance.reference, {\n        // This will exist in next Popper.js feature release to fix #532\n        // @ts-ignore\n        referenceNode: reference,\n        // These `client` values don't get used by Popper.js if they are 0\n        clientWidth: 0,\n        clientHeight: 0,\n        getBoundingClientRect: function getBoundingClientRect() {\n          return {\n            width: isVerticalPlacement ? size : 0,\n            height: isVerticalPlacement ? 0 : size,\n            top: (isHorizontal ? rect.top : y) - verticalIncrease,\n            bottom: (isHorizontal ? rect.bottom : y) + verticalIncrease,\n            left: (isVertical ? rect.left : x) - horizontalIncrease,\n            right: (isVertical ? rect.right : x) + horizontalIncrease\n          };\n        }\n      });\n      instance.popperInstance.update();\n    }\n\n    if (followCursor === 'initial' && instance.state.isVisible) {\n      removeFollowCursorListener();\n    }\n  }\n  /**\n   * Creates the tippy instance for a delegate when it's been triggered\n   */\n\n\n  function createDelegateChildTippy(event) {\n    if (event) {\n      var targetEl = closest(event.target, instance.props.target);\n\n      if (targetEl && !targetEl._tippy) {\n        createTippy(targetEl, _extends({}, instance.props, {\n          content: invokeWithArgsOrReturn(collectionProps.content, [targetEl]),\n          appendTo: collectionProps.appendTo,\n          target: '',\n          showOnInit: true\n        }));\n      }\n    }\n  }\n  /**\n   * Event listener invoked upon trigger\n   */\n\n\n  function onTrigger(event) {\n    if (!instance.state.isEnabled || isEventListenerStopped(event)) {\n      return;\n    }\n\n    if (!instance.state.isVisible) {\n      lastTriggerEventType = event.type;\n\n      if (event instanceof MouseEvent) {\n        lastMouseMoveEvent = event; // If scrolling, `mouseenter` events can be fired if the cursor lands\n        // over a new target, but `mousemove` events don't get fired. This\n        // causes interactive tooltips to get stuck open until the cursor is\n        // moved\n\n        mouseMoveListeners.forEach(function (listener) {\n          return listener(event);\n        });\n      }\n    } // Toggle show/hide when clicking click-triggered tooltips\n\n\n    if (event.type === 'click' && instance.props.hideOnClick !== false && instance.state.isVisible) {\n      scheduleHide();\n    } else {\n      scheduleShow(event);\n    }\n  }\n  /**\n   * Event listener used for interactive tooltips to detect when they should\n   * hide\n   */\n\n\n  function onMouseMove(event) {\n    var isCursorOverPopper = closest(event.target, POPPER_SELECTOR) === popper;\n    var isCursorOverReference = closestCallback(event.target, function (el) {\n      return el === reference;\n    });\n\n    if (isCursorOverPopper || isCursorOverReference) {\n      return;\n    }\n\n    if (isCursorOutsideInteractiveBorder(getBasicPlacement(popper), popper.getBoundingClientRect(), event, instance.props)) {\n      cleanupInteractiveMouseListeners();\n      scheduleHide();\n    }\n  }\n  /**\n   * Event listener invoked upon mouseleave\n   */\n\n\n  function onMouseLeave(event) {\n    if (isEventListenerStopped(event)) {\n      return;\n    }\n\n    if (instance.props.interactive) {\n      document.body.addEventListener('mouseleave', scheduleHide);\n      document.addEventListener('mousemove', debouncedOnMouseMove);\n      mouseMoveListeners.push(debouncedOnMouseMove);\n      return;\n    }\n\n    scheduleHide();\n  }\n  /**\n   * Event listener invoked upon blur\n   */\n\n\n  function onBlur(event) {\n    if (event.target !== getEventListenersTarget()) {\n      return;\n    }\n\n    if (instance.props.interactive && event.relatedTarget && popper.contains(event.relatedTarget)) {\n      return;\n    }\n\n    scheduleHide();\n  }\n  /**\n   * Event listener invoked when a child target is triggered\n   */\n\n\n  function onDelegateShow(event) {\n    if (closest(event.target, instance.props.target)) {\n      scheduleShow(event);\n    }\n  }\n  /**\n   * Event listener invoked when a child target should hide\n   */\n\n\n  function onDelegateHide(event) {\n    if (closest(event.target, instance.props.target)) {\n      scheduleHide();\n    }\n  }\n  /**\n   * Determines if an event listener should stop further execution due to the\n   * `touchHold` option\n   */\n\n\n  function isEventListenerStopped(event) {\n    var supportsTouch = 'ontouchstart' in window;\n    var isTouchEvent = includes(event.type, 'touch');\n    var touchHold = instance.props.touchHold;\n    return supportsTouch && isUsingTouch && touchHold && !isTouchEvent || isUsingTouch && !touchHold && isTouchEvent;\n  }\n  /**\n   * Runs the mount callback\n   */\n\n\n  function runMountCallback() {\n    if (!hasMountCallbackRun && currentMountCallback) {\n      hasMountCallbackRun = true;\n      reflow(popper);\n      currentMountCallback();\n    }\n  }\n  /**\n   * Creates the popper instance for the instance\n   */\n\n\n  function createPopperInstance() {\n    var popperOptions = instance.props.popperOptions;\n    var _instance$popperChild = instance.popperChildren,\n        tooltip = _instance$popperChild.tooltip,\n        arrow = _instance$popperChild.arrow;\n    var preventOverflowModifier = getModifier(popperOptions, 'preventOverflow');\n\n    function applyMutations(data) {\n      if (instance.props.flip && !instance.props.flipOnUpdate) {\n        if (data.flipped) {\n          instance.popperInstance.options.placement = data.placement;\n        }\n\n        setFlipModifierEnabled(instance.popperInstance.modifiers, false);\n      } // Apply all of the popper's attributes to the tootip node as well.\n      // Allows users to avoid using the .tippy-popper selector for themes.\n\n\n      tooltip.setAttribute(PLACEMENT_ATTRIBUTE, data.placement);\n\n      if (data.attributes[OUT_OF_BOUNDARIES_ATTRIBUTE] !== false) {\n        tooltip.setAttribute(OUT_OF_BOUNDARIES_ATTRIBUTE, '');\n      } else {\n        tooltip.removeAttribute(OUT_OF_BOUNDARIES_ATTRIBUTE);\n      } // Prevents a transition when changing placements (while tippy is visible)\n      // for scroll/resize updates\n\n\n      if (previousPlacement && previousPlacement !== data.placement && wasVisibleDuringPreviousUpdate) {\n        tooltip.style.transition = 'none';\n        requestAnimationFrame(function () {\n          tooltip.style.transition = '';\n        });\n      }\n\n      previousPlacement = data.placement;\n      wasVisibleDuringPreviousUpdate = instance.state.isVisible;\n      var basicPlacement = getBasicPlacement(popper);\n      var styles = tooltip.style; // Account for the `distance` offset\n\n      styles.top = styles.bottom = styles.left = styles.right = '';\n      styles[basicPlacement] = getOffsetDistanceInPx(instance.props.distance);\n      var padding = preventOverflowModifier && preventOverflowModifier.padding !== undefined ? preventOverflowModifier.padding : PADDING;\n      var isPaddingNumber = typeof padding === 'number';\n\n      var computedPadding = _extends({\n        top: isPaddingNumber ? padding : padding.top,\n        bottom: isPaddingNumber ? padding : padding.bottom,\n        left: isPaddingNumber ? padding : padding.left,\n        right: isPaddingNumber ? padding : padding.right\n      }, !isPaddingNumber && padding);\n\n      computedPadding[basicPlacement] = isPaddingNumber ? padding + instance.props.distance : (padding[basicPlacement] || 0) + instance.props.distance;\n      instance.popperInstance.modifiers.filter(function (m) {\n        return m.name === 'preventOverflow';\n      })[0].padding = computedPadding;\n      currentComputedPadding = computedPadding;\n    }\n\n    var config = _extends({\n      eventsEnabled: false,\n      placement: instance.props.placement\n    }, popperOptions, {\n      modifiers: _extends({}, popperOptions ? popperOptions.modifiers : {}, {\n        preventOverflow: _extends({\n          boundariesElement: instance.props.boundary,\n          padding: PADDING\n        }, preventOverflowModifier),\n        arrow: _extends({\n          element: arrow,\n          enabled: !!arrow\n        }, getModifier(popperOptions, 'arrow')),\n        flip: _extends({\n          enabled: instance.props.flip,\n          // The tooltip is offset by 10px from the popper in CSS,\n          // we need to account for its distance\n          padding: instance.props.distance + PADDING,\n          behavior: instance.props.flipBehavior\n        }, getModifier(popperOptions, 'flip')),\n        offset: _extends({\n          offset: instance.props.offset\n        }, getModifier(popperOptions, 'offset'))\n      }),\n      onCreate: function onCreate(data) {\n        applyMutations(data);\n        runMountCallback();\n\n        if (popperOptions && popperOptions.onCreate) {\n          popperOptions.onCreate(data);\n        }\n      },\n      onUpdate: function onUpdate(data) {\n        applyMutations(data);\n        runMountCallback();\n\n        if (popperOptions && popperOptions.onUpdate) {\n          popperOptions.onUpdate(data);\n        }\n      }\n    });\n\n    instance.popperInstance = new Popper(reference, popper, config);\n  }\n  /**\n   * Mounts the tooltip to the DOM\n   */\n\n\n  function mount() {\n    hasMountCallbackRun = false;\n    var isInLooseFollowCursorMode = getIsInLooseFollowCursorMode();\n\n    if (instance.popperInstance) {\n      setFlipModifierEnabled(instance.popperInstance.modifiers, instance.props.flip);\n\n      if (!isInLooseFollowCursorMode) {\n        instance.popperInstance.reference = reference;\n        instance.popperInstance.enableEventListeners();\n      }\n\n      instance.popperInstance.scheduleUpdate();\n    } else {\n      createPopperInstance();\n\n      if (!isInLooseFollowCursorMode) {\n        instance.popperInstance.enableEventListeners();\n      }\n    }\n\n    var appendTo = instance.props.appendTo;\n    var parentNode = appendTo === 'parent' ? reference.parentNode : invokeWithArgsOrReturn(appendTo, [reference]);\n\n    if (!parentNode.contains(popper)) {\n      parentNode.appendChild(popper);\n      instance.props.onMount(instance);\n      instance.state.isMounted = true;\n    }\n  }\n  /**\n   * Setup before show() is invoked (delays, etc.)\n   */\n\n\n  function scheduleShow(event, shouldAvoidCallingOnTrigger) {\n    clearDelayTimeouts();\n\n    if (instance.state.isVisible) {\n      return;\n    } // Is a delegate, create an instance for the child target\n\n\n    if (instance.props.target) {\n      return createDelegateChildTippy(event);\n    }\n\n    isScheduledToShow = true;\n\n    if (event && !shouldAvoidCallingOnTrigger) {\n      instance.props.onTrigger(instance, event);\n    }\n\n    if (instance.props.wait) {\n      return instance.props.wait(instance, event);\n    } // If the tooltip has a delay, we need to be listening to the mousemove as\n    // soon as the trigger event is fired, so that it's in the correct position\n    // upon mount.\n    // Edge case: if the tooltip is still mounted, but then scheduleShow() is\n    // called, it causes a jump.\n\n\n    if (getIsInLooseFollowCursorMode() && !instance.state.isMounted) {\n      if (!instance.popperInstance) {\n        createPopperInstance();\n      }\n\n      document.addEventListener('mousemove', positionVirtualReferenceNearCursor);\n    }\n\n    addDocumentClickListener();\n    var delay = getValue(instance.props.delay, 0, defaultProps.delay);\n\n    if (delay) {\n      showTimeoutId = setTimeout(function () {\n        show();\n      }, delay);\n    } else {\n      show();\n    }\n  }\n  /**\n   * Setup before hide() is invoked (delays, etc.)\n   */\n\n\n  function scheduleHide() {\n    clearDelayTimeouts();\n\n    if (!instance.state.isVisible) {\n      removeFollowCursorListener();\n      removeDocumentClickListener();\n      return;\n    }\n\n    isScheduledToShow = false;\n    var delay = getValue(instance.props.delay, 1, defaultProps.delay);\n\n    if (delay) {\n      hideTimeoutId = setTimeout(function () {\n        if (instance.state.isVisible) {\n          hide();\n        }\n      }, delay);\n    } else {\n      // Fixes a `transitionend` problem when it fires 1 frame too\n      // late sometimes, we don't want hide() to be called.\n      scheduleHideAnimationFrameId = requestAnimationFrame(function () {\n        hide();\n      });\n    }\n  }\n  /**\n   * Listener to handle clicks on the document to determine if the\n   * instance should hide\n   */\n\n\n  function onDocumentClick(event) {\n    // Clicked on interactive popper\n    if (instance.props.interactive && popper.contains(event.target)) {\n      return;\n    } // Clicked on the event listeners target\n\n\n    if (getEventListenersTarget().contains(event.target)) {\n      if (isUsingTouch) {\n        return;\n      }\n\n      if (instance.state.isVisible && includes(instance.props.trigger, 'click')) {\n        return;\n      }\n    }\n\n    if (instance.props.hideOnClick === true) {\n      clearDelayTimeouts();\n      hide();\n    }\n  }\n  /* ======================= 🔑 Public methods 🔑 ======================= */\n\n  /**\n   * Enables the instance to allow it to show or hide\n   */\n\n\n  function enable() {\n    instance.state.isEnabled = true;\n  }\n  /**\n   * Disables the instance to disallow it to show or hide\n   */\n\n\n  function disable() {\n    instance.state.isEnabled = false;\n  }\n  /**\n   * Clears pending timeouts related to the `delay` prop if any\n   */\n\n\n  function clearDelayTimeouts() {\n    clearTimeout(showTimeoutId);\n    clearTimeout(hideTimeoutId);\n    cancelAnimationFrame(scheduleHideAnimationFrameId);\n  }\n  /**\n   * Sets new props for the instance and redraws the tooltip\n   */\n\n\n  function set(options) {\n    // Backwards-compatible after TypeScript change\n    options = options || {};\n    validateOptions(options, defaultProps);\n    removeTriggersFromReference();\n    var prevProps = instance.props;\n    var nextProps = evaluateProps(reference, _extends({}, instance.props, {}, options, {\n      ignoreAttributes: true\n    }));\n    nextProps.ignoreAttributes = hasOwnProperty(options, 'ignoreAttributes') ? options.ignoreAttributes || false : prevProps.ignoreAttributes;\n    instance.props = nextProps;\n    addTriggersToReference();\n    cleanupInteractiveMouseListeners();\n    debouncedOnMouseMove = debounce(onMouseMove, nextProps.interactiveDebounce);\n    updatePopperElement(popper, prevProps, nextProps);\n    instance.popperChildren = getChildren(popper);\n\n    if (instance.popperInstance) {\n      if (POPPER_INSTANCE_DEPENDENCIES.some(function (prop) {\n        return hasOwnProperty(options, prop) && options[prop] !== prevProps[prop];\n      })) {\n        instance.popperInstance.destroy();\n        createPopperInstance();\n\n        if (instance.state.isVisible) {\n          instance.popperInstance.enableEventListeners();\n        }\n\n        if (instance.props.followCursor && lastMouseMoveEvent) {\n          positionVirtualReferenceNearCursor(lastMouseMoveEvent);\n        }\n      } else {\n        instance.popperInstance.update();\n      }\n    }\n  }\n  /**\n   * Shortcut for .set({ content: newContent })\n   */\n\n\n  function setContent(content) {\n    set({\n      content: content\n    });\n  }\n  /**\n   * Shows the tooltip\n   */\n\n\n  function show() {\n    var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getValue(instance.props.duration, 0, defaultProps.duration[1]);\n\n    if (instance.state.isDestroyed || !instance.state.isEnabled || isUsingTouch && !instance.props.touch) {\n      return;\n    } // Standardize `disabled` behavior across browsers.\n    // Firefox allows events on disabled elements, but Chrome doesn't.\n    // Using a wrapper element (i.e. <span>) is recommended.\n\n\n    if (getEventListenersTarget().hasAttribute('disabled')) {\n      return;\n    }\n\n    if (instance.props.onShow(instance) === false) {\n      return;\n    }\n\n    addDocumentClickListener();\n    popper.style.visibility = 'visible';\n    instance.state.isVisible = true;\n\n    if (instance.props.interactive) {\n      getEventListenersTarget().classList.add(ACTIVE_CLASS);\n    } // Prevent a transition if the popper is at the opposite placement\n\n\n    var transitionableElements = getTransitionableElements();\n    setTransitionDuration(transitionableElements.concat(popper), 0);\n\n    currentMountCallback = function currentMountCallback() {\n      if (!instance.state.isVisible) {\n        return;\n      }\n\n      var isInLooseFollowCursorMode = getIsInLooseFollowCursorMode();\n\n      if (isInLooseFollowCursorMode && lastMouseMoveEvent) {\n        positionVirtualReferenceNearCursor(lastMouseMoveEvent);\n      } else if (!isInLooseFollowCursorMode) {\n        // Double update will apply correct mutations\n        instance.popperInstance.update();\n      }\n\n      if (instance.popperChildren.backdrop) {\n        instance.popperChildren.content.style.transitionDelay = Math.round(duration / 12) + 'ms';\n      }\n\n      if (instance.props.sticky) {\n        makeSticky();\n      }\n\n      setTransitionDuration([popper], instance.props.updateDuration);\n      setTransitionDuration(transitionableElements, duration);\n      setVisibilityState(transitionableElements, 'visible');\n      onTransitionedIn(duration, function () {\n        if (instance.props.aria) {\n          getEventListenersTarget().setAttribute(\"aria-\".concat(instance.props.aria), popper.id);\n        }\n\n        instance.props.onShown(instance);\n        instance.state.isShown = true;\n      });\n    };\n\n    mount();\n  }\n  /**\n   * Hides the tooltip\n   */\n\n\n  function hide() {\n    var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getValue(instance.props.duration, 1, defaultProps.duration[1]);\n\n    if (instance.state.isDestroyed || !instance.state.isEnabled && !isBeingDestroyed) {\n      return;\n    }\n\n    if (instance.props.onHide(instance) === false && !isBeingDestroyed) {\n      return;\n    }\n\n    removeDocumentClickListener();\n    popper.style.visibility = 'hidden';\n    instance.state.isVisible = false;\n    instance.state.isShown = false;\n    wasVisibleDuringPreviousUpdate = false;\n\n    if (instance.props.interactive) {\n      getEventListenersTarget().classList.remove(ACTIVE_CLASS);\n    }\n\n    var transitionableElements = getTransitionableElements();\n    setTransitionDuration(transitionableElements, duration);\n    setVisibilityState(transitionableElements, 'hidden');\n    onTransitionedOut(duration, function () {\n      if (!isScheduledToShow) {\n        removeFollowCursorListener();\n      }\n\n      if (instance.props.aria) {\n        getEventListenersTarget().removeAttribute(\"aria-\".concat(instance.props.aria));\n      }\n\n      instance.popperInstance.disableEventListeners();\n      instance.popperInstance.options.placement = instance.props.placement;\n      popper.parentNode.removeChild(popper);\n      instance.props.onHidden(instance);\n      instance.state.isMounted = false;\n    });\n  }\n  /**\n   * Destroys the tooltip\n   */\n\n\n  function destroy(destroyTargetInstances) {\n    if (instance.state.isDestroyed) {\n      return;\n    }\n\n    isBeingDestroyed = true; // If the popper is currently mounted to the DOM, we want to ensure it gets\n    // hidden and unmounted instantly upon destruction\n\n    if (instance.state.isMounted) {\n      hide(0);\n    }\n\n    removeTriggersFromReference();\n    delete reference._tippy;\n    var target = instance.props.target;\n\n    if (target && destroyTargetInstances && isRealElement(reference)) {\n      arrayFrom(reference.querySelectorAll(target)).forEach(function (child) {\n        if (child._tippy) {\n          child._tippy.destroy();\n        }\n      });\n    }\n\n    if (instance.popperInstance) {\n      instance.popperInstance.destroy();\n    }\n\n    isBeingDestroyed = false;\n    instance.state.isDestroyed = true;\n  }\n}\n/**\n * Groups an array of instances by taking control of their props during\n * certain lifecycles.\n */\n\n\nfunction group(instances) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      _ref$delay = _ref.delay,\n      delay = _ref$delay === void 0 ? instances[0].props.delay : _ref$delay,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? 0 : _ref$duration;\n\n  var isAnyTippyOpen = false;\n  instances.forEach(function (instance) {\n    if (instance._originalProps) {\n      instance.set(instance._originalProps);\n    } else {\n      instance._originalProps = _extends({}, instance.props);\n    }\n  });\n\n  function setIsAnyTippyOpen(value) {\n    isAnyTippyOpen = value;\n    updateInstances();\n  }\n\n  function onShow(instance) {\n    instance._originalProps.onShow(instance);\n\n    instances.forEach(function (instance) {\n      instance.set({\n        duration: duration\n      });\n\n      if (instance.state.isVisible) {\n        instance.hide();\n      }\n    });\n    setIsAnyTippyOpen(true);\n  }\n\n  function onHide(instance) {\n    instance._originalProps.onHide(instance);\n\n    setIsAnyTippyOpen(false);\n  }\n\n  function onShown(instance) {\n    instance._originalProps.onShown(instance);\n\n    instance.set({\n      duration: instance._originalProps.duration\n    });\n  }\n\n  function updateInstances() {\n    instances.forEach(function (instance) {\n      instance.set({\n        onShow: onShow,\n        onShown: onShown,\n        onHide: onHide,\n        delay: isAnyTippyOpen ? [0, Array.isArray(delay) ? delay[1] : delay] : delay,\n        duration: isAnyTippyOpen ? duration : instance._originalProps.duration\n      });\n    });\n  }\n\n  updateInstances();\n}\n\nvar globalEventListenersBound = false;\n/**\n * Exported module\n */\n\nfunction tippy(targets, options) {\n  validateOptions(options || {}, defaultProps);\n\n  if (!globalEventListenersBound) {\n    bindGlobalEventListeners();\n    globalEventListenersBound = true;\n  }\n\n  var props = _extends({}, defaultProps, {}, options); // If they are specifying a virtual positioning reference, we need to polyfill\n  // some native DOM props\n\n\n  if (isBareVirtualElement(targets)) {\n    polyfillElementPrototypeProperties(targets);\n  }\n\n  var instances = getArrayOfElements(targets).reduce(function (acc, reference) {\n    var instance = reference && createTippy(reference, props);\n\n    if (instance) {\n      acc.push(instance);\n    }\n\n    return acc;\n  }, []);\n  return isSingular(targets) ? instances[0] : instances;\n}\n/**\n * Static props\n */\n\n\ntippy.version = version;\ntippy.defaults = defaultProps;\n/**\n * Static methods\n */\n\ntippy.setDefaults = function (partialDefaults) {\n  Object.keys(partialDefaults).forEach(function (key) {\n    // @ts-ignore\n    defaultProps[key] = partialDefaults[key];\n  });\n};\n\ntippy.hideAll = hideAll;\ntippy.group = group;\n/**\n * Auto-init tooltips for elements with a `data-tippy=\"...\"` attribute\n */\n\nfunction autoInit() {\n  arrayFrom(document.querySelectorAll('[data-tippy]')).forEach(function (el) {\n    var content = el.getAttribute('data-tippy');\n\n    if (content) {\n      tippy(el, {\n        content: content\n      });\n    }\n  });\n}\n\nif (isBrowser) {\n  setTimeout(autoInit);\n}\n/**\n * Injects a string of CSS styles to a style node in <head>\n */\n\n\nfunction injectCSS(css) {\n  if (isBrowser) {\n    var style = document.createElement('style');\n    style.type = 'text/css';\n    style.textContent = css;\n    style.setAttribute('data-tippy-stylesheet', '');\n    var head = document.head;\n    var firstStyleOrLinkTag = head.querySelector('style,link');\n\n    if (firstStyleOrLinkTag) {\n      head.insertBefore(style, firstStyleOrLinkTag);\n    } else {\n      head.appendChild(style);\n    }\n  }\n}\n\ninjectCSS(css);\nexport default tippy;","map":{"version":3,"sources":["../src/browser.ts","../src/props.ts","../src/ponyfills.ts","../src/constants.ts","../src/bindGlobalEventListeners.ts","../src/reference.ts","../src/utils.ts","../src/popper.ts","../src/createTippy.ts","../src/group.ts","../src/index.ts","../src/css.ts","../build/all.js"],"names":["isBrowser","ua","navigator","isIE","isUCBrowser","isIOS","window","defaultProps","a11y","allowHTML","animateFill","animation","appendTo","document","aria","arrow","arrowType","boundary","content","delay","distance","duration","flip","flipBehavior","flipOnUpdate","followCursor","hideOnClick","ignoreAttributes","inertia","interactive","interactiveBorder","interactiveDebounce","lazy","maxWidth","multiple","offset","onHidden","onHide","onMount","onShow","onShown","onTrigger","placement","popperOptions","role","showOnInit","size","sticky","target","theme","touch","touchHold","trigger","triggerTarget","updateDuration","wait","zIndex","POPPER_INSTANCE_DEPENDENCIES","elementProto","Element","matches","closestCallback","callback","element","PASSIVE","passive","PADDING","PLACEMENT_ATTRIBUTE","OUT_OF_BOUNDARIES_ATTRIBUTE","IOS_CLASS","ACTIVE_CLASS","POPPER_CLASS","TOOLTIP_CLASS","CONTENT_CLASS","BACKDROP_CLASS","ARROW_CLASS","ROUND_ARROW_CLASS","POPPER_SELECTOR","TOOLTIP_SELECTOR","CONTENT_SELECTOR","BACKDROP_SELECTOR","ARROW_SELECTOR","ROUND_ARROW_SELECTOR","isUsingTouch","lastMouseMoveTime","now","performance","activeElement","keys","Object","valueAsString","reference","key","acc","JSON","polyfills","isVirtual","attributes","virtualReference","contains","setAttribute","getAttribute","removeAttribute","hasAttribute","addEventListener","removeEventListener","classList","classNames","add","remove","value","isSingular","arrayFrom","Array","v","ms","clearTimeout","timeout","setTimeout","fn","obj","a","hasOwnProperty","isRealElement","modifiers","m","els","el","out","invokeWithArgsOrReturn","props","getDataAttributeOptions","innerHTML","html","setInnerHTML","contentEl","tooltip","popper","backdrop","div","eventName","action","fullPlacement","themeName","updateTheme","addInteractive","createArrowElement","createBackdropElement","addInertia","setContent","getChildren","nextProps","prevProps","removeInteractive","removeInertia","exclude","excludedReferenceOrInstance","instance","isExcluded","isReferenceElement","x","y","event","exceedsTop","popperRect","popperPlacement","exceedsBottom","exceedsLeft","exceedsRight","idCounter","mouseMoveListeners","evaluateProps","isScheduledToShow","isBeingDestroyed","wasVisibleDuringPreviousUpdate","hasMountCallbackRun","listeners","debouncedOnMouseMove","debounce","id","createPopperElement","popperChildren","popperInstance","state","isEnabled","isVisible","isDestroyed","isMounted","isShown","clearDelayTimeouts","set","show","hide","enable","disable","destroy","addTriggersToReference","createPopperInstance","scheduleShow","canReceiveFocus","getEventListenersTarget","lastTriggerEventType","listener","setTransitionDuration","prevRefRect","currentRefRect","requestAnimationFrame","updatePosition","onTransitionEnd","updateTransitionEndListener","currentTransitionEndListener","options","eventType","handler","on","lastMouseMoveEvent","isCursorOverReference","rect","isHorizontal","isVertical","isVerticalPlacement","includes","getBasicPlacement","isVariation","halfSize","verticalIncrease","horizontalIncrease","referenceNode","clientWidth","clientHeight","getBoundingClientRect","width","height","top","bottom","left","right","removeFollowCursorListener","targetEl","closest","createTippy","collectionProps","isEventListenerStopped","scheduleHide","isCursorOverPopper","isCursorOutsideInteractiveBorder","cleanupInteractiveMouseListeners","supportsTouch","isTouchEvent","reflow","currentMountCallback","preventOverflowModifier","getModifier","data","setFlipModifierEnabled","previousPlacement","basicPlacement","styles","getOffsetDistanceInPx","padding","isPaddingNumber","computedPadding","currentComputedPadding","config","eventsEnabled","preventOverflow","boundariesElement","enabled","behavior","onCreate","applyMutations","runMountCallback","onUpdate","isInLooseFollowCursorMode","getIsInLooseFollowCursorMode","parentNode","createDelegateChildTippy","addDocumentClickListener","getValue","showTimeoutId","removeDocumentClickListener","hideTimeoutId","scheduleHideAnimationFrameId","cancelAnimationFrame","validateOptions","removeTriggersFromReference","updatePopperElement","positionVirtualReferenceNearCursor","transitionableElements","getTransitionableElements","Math","makeSticky","setVisibilityState","onTransitionedIn","mount","onTransitionedOut","child","instances","isAnyTippyOpen","updateInstances","setIsAnyTippyOpen","globalEventListenersBound","bindGlobalEventListeners","isBareVirtualElement","polyfillElementPrototypeProperties","tippy","partialDefaults","style","head","firstStyleOrLinkTag","injectCSS"],"mappings":"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","sourcesContent":["export const isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined'\n\nconst ua = isBrowser ? navigator.userAgent : ''\n\nexport const isIE = /MSIE |Trident\\//.test(ua)\nexport const isUCBrowser = /UCBrowser\\//.test(ua)\nexport const isIOS =\n  isBrowser &&\n  /iPhone|iPad|iPod/.test(navigator.platform) &&\n  !(window as any).MSStream\n","import { Props } from './types'\n\nexport const defaultProps: Props = {\n  a11y: true,\n  allowHTML: true,\n  animateFill: true,\n  animation: 'shift-away',\n  appendTo: () => document.body,\n  aria: 'describedby',\n  arrow: false,\n  arrowType: 'sharp',\n  boundary: 'scrollParent',\n  content: '',\n  delay: 0,\n  distance: 10,\n  duration: [325, 275],\n  flip: true,\n  flipBehavior: 'flip',\n  flipOnUpdate: false,\n  followCursor: false,\n  hideOnClick: true,\n  ignoreAttributes: false,\n  inertia: false,\n  interactive: false,\n  interactiveBorder: 2,\n  interactiveDebounce: 0,\n  lazy: true,\n  maxWidth: 350,\n  multiple: false,\n  offset: 0,\n  onHidden() {},\n  onHide() {},\n  onMount() {},\n  onShow() {},\n  onShown() {},\n  onTrigger() {},\n  placement: 'top',\n  popperOptions: {},\n  role: 'tooltip',\n  showOnInit: false,\n  size: 'regular',\n  sticky: false,\n  target: '',\n  theme: 'dark',\n  touch: true,\n  touchHold: false,\n  trigger: 'mouseenter focus',\n  triggerTarget: null,\n  updateDuration: 0,\n  wait: null,\n  zIndex: 9999,\n}\n\n/**\n * If the set() method encounters one of these, the popperInstance must be\n * recreated\n */\nexport const POPPER_INSTANCE_DEPENDENCIES: Array<keyof Props> = [\n  'arrow',\n  'arrowType',\n  'boundary',\n  'distance',\n  'flip',\n  'flipBehavior',\n  'flipOnUpdate',\n  'offset',\n  'placement',\n  'popperOptions',\n]\n","import { isBrowser } from './browser'\n\nconst elementProto: Record<string, any> = isBrowser ? Element.prototype : {}\n\nexport const matches =\n  elementProto.matches ||\n  elementProto.matchesSelector ||\n  elementProto.webkitMatchesSelector ||\n  elementProto.mozMatchesSelector ||\n  elementProto.msMatchesSelector\n\n/**\n * Ponyfill for Array.from - converts iterable values to an array\n */\nexport function arrayFrom(value: ArrayLike<any>): any[] {\n  return [].slice.call(value)\n}\n\n/**\n * Ponyfill for Element.prototype.closest\n */\nexport function closest(element: Element, selector: string): Element | null {\n  return closestCallback(element, (el: Element) => matches.call(el, selector))\n}\n\n/**\n * Works like Element.prototype.closest, but uses a callback instead\n */\nexport function closestCallback(\n  element: Element | null,\n  callback: Function,\n): Element | null {\n  while (element) {\n    if (callback(element)) {\n      return element\n    }\n\n    element = element.parentElement\n  }\n\n  return null\n}\n","// Passive event listener config\nexport const PASSIVE = { passive: true }\n\n// Popper `preventOverflow` padding\nexport const PADDING = 4\n\n// Popper attributes\n// In Popper v2 these will be `data-*` instead of `x-*` to adhere to HTML5 spec\nexport const PLACEMENT_ATTRIBUTE = 'x-placement'\nexport const OUT_OF_BOUNDARIES_ATTRIBUTE = 'x-out-of-boundaries'\n\n// Classes\nexport const IOS_CLASS = `__NAMESPACE_PREFIX__-iOS`\nexport const ACTIVE_CLASS = `__NAMESPACE_PREFIX__-active`\nexport const POPPER_CLASS = `__NAMESPACE_PREFIX__-popper`\nexport const TOOLTIP_CLASS = `__NAMESPACE_PREFIX__-tooltip`\nexport const CONTENT_CLASS = `__NAMESPACE_PREFIX__-content`\nexport const BACKDROP_CLASS = `__NAMESPACE_PREFIX__-backdrop`\nexport const ARROW_CLASS = `__NAMESPACE_PREFIX__-arrow`\nexport const ROUND_ARROW_CLASS = `__NAMESPACE_PREFIX__-roundarrow`\n\n// Selectors\nexport const POPPER_SELECTOR = `.${POPPER_CLASS}`\nexport const TOOLTIP_SELECTOR = `.${TOOLTIP_CLASS}`\nexport const CONTENT_SELECTOR = `.${CONTENT_CLASS}`\nexport const BACKDROP_SELECTOR = `.${BACKDROP_CLASS}`\nexport const ARROW_SELECTOR = `.${ARROW_CLASS}`\nexport const ROUND_ARROW_SELECTOR = `.${ROUND_ARROW_CLASS}`\n","import { isIOS } from './browser'\nimport { PASSIVE, IOS_CLASS } from './constants'\n\nexport let isUsingTouch = false\n\nexport function onDocumentTouch(): void {\n  if (isUsingTouch) {\n    return\n  }\n\n  isUsingTouch = true\n\n  if (isIOS) {\n    document.body.classList.add(IOS_CLASS)\n  }\n\n  if (window.performance) {\n    document.addEventListener('mousemove', onDocumentMouseMove)\n  }\n}\n\nlet lastMouseMoveTime = 0\nexport function onDocumentMouseMove(): void {\n  const now = performance.now()\n\n  // Chrome 60+ is 1 mousemove per animation frame, use 20ms time difference\n  if (now - lastMouseMoveTime < 20) {\n    isUsingTouch = false\n\n    document.removeEventListener('mousemove', onDocumentMouseMove)\n\n    if (!isIOS) {\n      document.body.classList.remove(IOS_CLASS)\n    }\n  }\n\n  lastMouseMoveTime = now\n}\n\nexport function onWindowBlur(): void {\n  const { activeElement }: { activeElement: any } = document\n\n  if (activeElement && activeElement.blur && activeElement._tippy) {\n    activeElement.blur()\n  }\n}\n\n/**\n * Adds the needed global event listeners\n */\nexport default function bindGlobalEventListeners(): void {\n  document.addEventListener('touchstart', onDocumentTouch, PASSIVE)\n  window.addEventListener('blur', onWindowBlur)\n}\n","import { Props, VirtualReference, ReferenceElement } from './types'\nimport { defaultProps } from './props'\n\nconst keys = Object.keys(defaultProps)\n\n/**\n * Returns an object of optional props from data-tippy-* attributes\n */\nexport function getDataAttributeOptions(\n  reference: ReferenceElement | VirtualReference,\n): Props {\n  return keys.reduce((acc: any, key) => {\n    const valueAsString = (\n      reference.getAttribute(`data-tippy-${key}`) || ''\n    ).trim()\n\n    if (!valueAsString) {\n      return acc\n    }\n\n    if (key === 'content') {\n      acc[key] = valueAsString\n    } else {\n      try {\n        acc[key] = JSON.parse(valueAsString)\n      } catch (e) {\n        acc[key] = valueAsString\n      }\n    }\n\n    return acc\n  }, {})\n}\n\n/**\n * Polyfills the virtual reference (plain object) with Element.prototype props\n * Mutating because DOM elements are mutated, adds `_tippy` property\n */\nexport function polyfillElementPrototypeProperties(\n  virtualReference: VirtualReference & Record<string, any>,\n): void {\n  const polyfills: Record<string, any> = {\n    isVirtual: true,\n    attributes: virtualReference.attributes || {},\n    contains() {},\n    setAttribute(key: string, value: any) {\n      virtualReference.attributes[key] = value\n    },\n    getAttribute(key: string) {\n      return virtualReference.attributes[key]\n    },\n    removeAttribute(key: string) {\n      delete virtualReference.attributes[key]\n    },\n    hasAttribute(key: string) {\n      return key in virtualReference.attributes\n    },\n    addEventListener() {},\n    removeEventListener() {},\n    classList: {\n      classNames: {},\n      add(key: string) {\n        virtualReference.classList.classNames[key] = true\n      },\n      remove(key: string) {\n        delete virtualReference.classList.classNames[key]\n      },\n      contains(key: string) {\n        return key in virtualReference.classList.classNames\n      },\n    },\n  }\n\n  for (const key in polyfills) {\n    virtualReference[key] = polyfills[key]\n  }\n}\n","import {\n  Options,\n  Props,\n  ReferenceElement,\n  Targets,\n  VirtualReference,\n} from './types'\nimport { arrayFrom, matches } from './ponyfills'\nimport { isUCBrowser } from './browser'\nimport { getDataAttributeOptions } from './reference'\nimport { POPPER_SELECTOR } from './constants'\n\n/**\n * Determines if a value is a \"bare\" virtual element (before mutations done\n * by `polyfillElementPrototypeProperties()`). JSDOM elements show up as\n * [object Object], we can check if the value is \"element-like\" if it has\n * `addEventListener`\n */\nexport function isBareVirtualElement(value: any): boolean {\n  return (\n    {}.toString.call(value) === '[object Object]' && !value.addEventListener\n  )\n}\n\n/**\n * Determines if the value is a reference element\n */\nexport function isReferenceElement(value: any): value is ReferenceElement {\n  return !!value._tippy && !matches.call(value, POPPER_SELECTOR)\n}\n\n/**\n * Safe .hasOwnProperty check, for prototype-less objects\n */\nexport function hasOwnProperty(obj: object, key: string): boolean {\n  return {}.hasOwnProperty.call(obj, key)\n}\n\n/**\n * Returns an array of elements based on the value\n */\nexport function getArrayOfElements(value: Targets): Element[] {\n  if (isSingular(value)) {\n    // TODO: VirtualReference is not compatible to type Element\n    return [value as Element]\n  }\n\n  if (value instanceof NodeList) {\n    return arrayFrom(value)\n  }\n\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  try {\n    return arrayFrom(document.querySelectorAll(value))\n  } catch (e) {\n    return []\n  }\n}\n\n/**\n * Returns a value at a given index depending on if it's an array or number\n */\nexport function getValue(value: any, index: number, defaultValue: any): any {\n  if (Array.isArray(value)) {\n    const v = value[index]\n    return v == null ? defaultValue : v\n  }\n\n  return value\n}\n\n/**\n * Debounce utility. To avoid bloating bundle size, we're only passing 1\n * argument here, a more generic function would pass all arguments. Only\n * `onMouseMove` uses this which takes the event object for now.\n */\nexport function debounce<T>(\n  fn: (arg: T) => void,\n  ms: number,\n): (arg: T) => void {\n  // Avoid wrapping in `setTimeout` if ms is 0 anyway\n  if (ms === 0) {\n    return fn\n  }\n\n  let timeout: any\n\n  return (arg): void => {\n    clearTimeout(timeout)\n    timeout = setTimeout((): void => {\n      fn(arg)\n    }, ms)\n  }\n}\n\n/**\n * Prevents errors from being thrown while accessing nested modifier objects\n * in `popperOptions`\n */\nexport function getModifier(obj: any, key: string): any {\n  return obj && obj.modifiers && obj.modifiers[key]\n}\n\n/**\n * Determines if an array or string includes a value\n */\nexport function includes(a: any[] | string, b: any): boolean {\n  return a.indexOf(b) > -1\n}\n\n/**\n * Determines if the value is a real element\n */\nexport function isRealElement(value: any): value is Element {\n  return value instanceof Element\n}\n\n/**\n * Determines if the value is singular-like\n */\nexport function isSingular(value: any): value is VirtualReference | Element {\n  return !!(value && hasOwnProperty(value, 'isVirtual')) || isRealElement(value)\n}\n\n/**\n * Firefox extensions don't allow setting .innerHTML directly, this will trick it\n */\nexport function innerHTML(): 'innerHTML' {\n  return 'innerHTML'\n}\n\n/**\n * Evaluates a function if one, or returns the value\n */\nexport function invokeWithArgsOrReturn(value: any, args: any[]): any {\n  return typeof value === 'function' ? value.apply(null, args) : value\n}\n\n/**\n * Sets a popperInstance `flip` modifier's enabled state\n */\nexport function setFlipModifierEnabled(modifiers: any[], value: any): void {\n  modifiers.filter(m => m.name === 'flip')[0].enabled = value\n}\n\n/**\n * Determines if an element can receive focus\n * Always returns true for virtual objects\n */\nexport function canReceiveFocus(element: Element | VirtualReference): boolean {\n  return isRealElement(element)\n    ? matches.call(\n        element,\n        'a[href],area[href],button,details,input,textarea,select,iframe,[tabindex]',\n      ) && !element.hasAttribute('disabled')\n    : true\n}\n\n/**\n * Returns a new `div` element\n */\nexport function div(): HTMLDivElement {\n  return document.createElement('div')\n}\n\n/**\n * Applies a transition duration to a list of elements\n */\nexport function setTransitionDuration(\n  els: (HTMLDivElement | null)[],\n  value: number,\n): void {\n  els.forEach(el => {\n    if (el) {\n      el.style.transitionDuration = `${value}ms`\n    }\n  })\n}\n\n/**\n * Sets the visibility state to elements so they can begin to transition\n */\nexport function setVisibilityState(\n  els: (HTMLDivElement | null)[],\n  state: 'visible' | 'hidden',\n): void {\n  els.forEach(el => {\n    if (el) {\n      el.setAttribute('data-state', state)\n    }\n  })\n}\n\n/**\n * Evaluates the props object by merging data attributes and\n * disabling conflicting options where necessary\n */\nexport function evaluateProps(\n  reference: ReferenceElement | VirtualReference,\n  props: Props,\n): Props {\n  const out = {\n    ...props,\n    content: invokeWithArgsOrReturn(props.content, [reference]),\n    ...(props.ignoreAttributes ? {} : getDataAttributeOptions(reference)),\n  }\n\n  if (out.arrow || isUCBrowser) {\n    out.animateFill = false\n  }\n\n  return out\n}\n\n/**\n * Validates an object of options with the valid default props object\n */\nexport function validateOptions(options: Options, defaultProps: Props): void {\n  Object.keys(options).forEach(option => {\n    if (!hasOwnProperty(defaultProps, option)) {\n      throw new Error(`[tippy]: \\`${option}\\` is not a valid option`)\n    }\n  })\n}\n","import {\n  PopperElement,\n  Props,\n  PopperChildren,\n  HideAllOptions,\n  BasicPlacement,\n} from './types'\nimport { arrayFrom } from './ponyfills'\nimport { innerHTML, div, isReferenceElement, isRealElement } from './utils'\nimport { isUCBrowser } from './browser'\nimport {\n  POPPER_CLASS,\n  TOOLTIP_CLASS,\n  BACKDROP_CLASS,\n  CONTENT_CLASS,\n  ARROW_CLASS,\n  ROUND_ARROW_CLASS,\n  POPPER_SELECTOR,\n  TOOLTIP_SELECTOR,\n  BACKDROP_SELECTOR,\n  CONTENT_SELECTOR,\n  ARROW_SELECTOR,\n  ROUND_ARROW_SELECTOR,\n  PLACEMENT_ATTRIBUTE,\n} from './constants'\n\n/**\n * Sets the innerHTML of an element\n */\nexport function setInnerHTML(element: Element, html: string | Element): void {\n  element[innerHTML()] = isRealElement(html) ? html[innerHTML()] : html\n}\n\n/**\n * Sets the content of a tooltip\n */\nexport function setContent(\n  contentEl: PopperChildren['content'],\n  props: Props,\n): void {\n  if (isRealElement(props.content)) {\n    setInnerHTML(contentEl, '')\n    contentEl.appendChild(props.content)\n  } else if (typeof props.content !== 'function') {\n    const key: 'innerHTML' | 'textContent' = props.allowHTML\n      ? 'innerHTML'\n      : 'textContent'\n    contentEl[key] = props.content\n  }\n}\n\n/**\n * Returns the child elements of a popper element\n */\nexport function getChildren(popper: PopperElement): PopperChildren {\n  return {\n    tooltip: popper.querySelector(TOOLTIP_SELECTOR) as HTMLDivElement,\n    backdrop: popper.querySelector(BACKDROP_SELECTOR),\n    content: popper.querySelector(CONTENT_SELECTOR) as HTMLDivElement,\n    arrow:\n      popper.querySelector(ARROW_SELECTOR) ||\n      popper.querySelector(ROUND_ARROW_SELECTOR),\n  }\n}\n\n/**\n * Adds `data-inertia` attribute\n */\nexport function addInertia(tooltip: PopperChildren['tooltip']): void {\n  tooltip.setAttribute('data-inertia', '')\n}\n\n/**\n * Removes `data-inertia` attribute\n */\nexport function removeInertia(tooltip: PopperChildren['tooltip']): void {\n  tooltip.removeAttribute('data-inertia')\n}\n\n/**\n * Creates an arrow element and returns it\n */\nexport function createArrowElement(\n  arrowType: Props['arrowType'],\n): HTMLDivElement {\n  const arrow = div()\n  if (arrowType === 'round') {\n    arrow.className = ROUND_ARROW_CLASS\n    setInnerHTML(\n      arrow,\n      '<svg viewBox=\"0 0 18 7\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M0 7s2.021-.015 5.253-4.218C6.584 1.051 7.797.007 9 0c1.203-.007 2.416 1.035 3.761 2.782C16.012 7.005 18 7 18 7H0z\"/></svg>',\n    )\n  } else {\n    arrow.className = ARROW_CLASS\n  }\n  return arrow\n}\n\n/**\n * Creates a backdrop element and returns it\n */\nexport function createBackdropElement(): HTMLDivElement {\n  const backdrop = div()\n  backdrop.className = BACKDROP_CLASS\n  backdrop.setAttribute('data-state', 'hidden')\n  return backdrop\n}\n\n/**\n * Adds interactive-related attributes\n */\nexport function addInteractive(\n  popper: PopperElement,\n  tooltip: PopperChildren['tooltip'],\n): void {\n  popper.setAttribute('tabindex', '-1')\n  tooltip.setAttribute('data-interactive', '')\n}\n\n/**\n * Removes interactive-related attributes\n */\nexport function removeInteractive(\n  popper: PopperElement,\n  tooltip: PopperChildren['tooltip'],\n): void {\n  popper.removeAttribute('tabindex')\n  tooltip.removeAttribute('data-interactive')\n}\n\n/**\n * Add/remove transitionend listener from tooltip\n */\nexport function updateTransitionEndListener(\n  tooltip: PopperChildren['tooltip'],\n  action: 'add' | 'remove',\n  listener: (event: TransitionEvent) => void,\n): void {\n  // UC Browser hasn't adopted the `transitionend` event despite supporting\n  // unprefixed transitions...\n  const eventName =\n    isUCBrowser && document.body.style.webkitTransition !== undefined\n      ? 'webkitTransitionEnd'\n      : 'transitionend'\n  tooltip[\n    (action + 'EventListener') as 'addEventListener' | 'removeEventListener'\n  ](eventName, listener as EventListener)\n}\n\n/**\n * Returns the popper's placement, ignoring shifting (top-start, etc)\n */\nexport function getBasicPlacement(popper: PopperElement): BasicPlacement {\n  const fullPlacement = popper.getAttribute(PLACEMENT_ATTRIBUTE)\n  return (fullPlacement ? fullPlacement.split('-')[0] : '') as BasicPlacement\n}\n\n/**\n * Triggers reflow\n */\nexport function reflow(popper: PopperElement): void {\n  void popper.offsetHeight\n}\n\n/**\n * Adds/removes theme from tooltip's classList\n */\nexport function updateTheme(\n  tooltip: PopperChildren['tooltip'],\n  action: 'add' | 'remove',\n  theme: Props['theme'],\n): void {\n  theme.split(' ').forEach(themeName => {\n    tooltip.classList[action](themeName + '-theme')\n  })\n}\n\n/**\n * Constructs the popper element and returns it\n */\nexport function createPopperElement(id: number, props: Props): PopperElement {\n  const popper = div()\n  popper.className = POPPER_CLASS\n  popper.id = `__NAMESPACE_PREFIX__-${id}`\n  popper.style.zIndex = '' + props.zIndex\n  popper.style.position = 'absolute'\n  popper.style.top = '0'\n  popper.style.left = '0'\n\n  if (props.role) {\n    popper.setAttribute('role', props.role)\n  }\n\n  const tooltip = div()\n  tooltip.className = TOOLTIP_CLASS\n  tooltip.style.maxWidth =\n    props.maxWidth + (typeof props.maxWidth === 'number' ? 'px' : '')\n  tooltip.setAttribute('data-size', props.size)\n  tooltip.setAttribute('data-animation', props.animation)\n  tooltip.setAttribute('data-state', 'hidden')\n  updateTheme(tooltip, 'add', props.theme)\n\n  const content = div()\n  content.className = CONTENT_CLASS\n  content.setAttribute('data-state', 'hidden')\n\n  if (props.interactive) {\n    addInteractive(popper, tooltip)\n  }\n\n  if (props.arrow) {\n    tooltip.appendChild(createArrowElement(props.arrowType))\n  }\n\n  if (props.animateFill) {\n    tooltip.appendChild(createBackdropElement())\n    tooltip.setAttribute('data-animatefill', '')\n  }\n\n  if (props.inertia) {\n    addInertia(tooltip)\n  }\n\n  setContent(content, props)\n\n  tooltip.appendChild(content)\n  popper.appendChild(tooltip)\n\n  return popper\n}\n\n/**\n * Updates the popper element based on the new props\n */\nexport function updatePopperElement(\n  popper: PopperElement,\n  prevProps: Props,\n  nextProps: Props,\n): void {\n  const { tooltip, content, backdrop, arrow } = getChildren(popper)\n\n  popper.style.zIndex = '' + nextProps.zIndex\n  tooltip.setAttribute('data-size', nextProps.size)\n  tooltip.setAttribute('data-animation', nextProps.animation)\n  tooltip.style.maxWidth =\n    nextProps.maxWidth + (typeof nextProps.maxWidth === 'number' ? 'px' : '')\n\n  if (nextProps.role) {\n    popper.setAttribute('role', nextProps.role)\n  } else {\n    popper.removeAttribute('role')\n  }\n\n  if (prevProps.content !== nextProps.content) {\n    setContent(content, nextProps)\n  }\n\n  // animateFill\n  if (!prevProps.animateFill && nextProps.animateFill) {\n    tooltip.appendChild(createBackdropElement())\n    tooltip.setAttribute('data-animatefill', '')\n  } else if (prevProps.animateFill && !nextProps.animateFill) {\n    tooltip.removeChild(backdrop!)\n    tooltip.removeAttribute('data-animatefill')\n  }\n\n  // arrow\n  if (!prevProps.arrow && nextProps.arrow) {\n    tooltip.appendChild(createArrowElement(nextProps.arrowType))\n  } else if (prevProps.arrow && !nextProps.arrow) {\n    tooltip.removeChild(arrow!)\n  }\n\n  // arrowType\n  if (\n    prevProps.arrow &&\n    nextProps.arrow &&\n    prevProps.arrowType !== nextProps.arrowType\n  ) {\n    tooltip.replaceChild(createArrowElement(nextProps.arrowType), arrow!)\n  }\n\n  // interactive\n  if (!prevProps.interactive && nextProps.interactive) {\n    addInteractive(popper, tooltip)\n  } else if (prevProps.interactive && !nextProps.interactive) {\n    removeInteractive(popper, tooltip)\n  }\n\n  // inertia\n  if (!prevProps.inertia && nextProps.inertia) {\n    addInertia(tooltip)\n  } else if (prevProps.inertia && !nextProps.inertia) {\n    removeInertia(tooltip)\n  }\n\n  // theme\n  if (prevProps.theme !== nextProps.theme) {\n    updateTheme(tooltip, 'remove', prevProps.theme)\n    updateTheme(tooltip, 'add', nextProps.theme)\n  }\n}\n\n/**\n * Hides all visible poppers on the document\n */\nexport function hideAll({\n  exclude: excludedReferenceOrInstance,\n  duration,\n}: HideAllOptions = {}): void {\n  arrayFrom(document.querySelectorAll(POPPER_SELECTOR)).forEach(\n    (popper: PopperElement) => {\n      const instance = popper._tippy\n\n      if (instance) {\n        let isExcluded = false\n        if (excludedReferenceOrInstance) {\n          isExcluded = isReferenceElement(excludedReferenceOrInstance)\n            ? instance.reference === excludedReferenceOrInstance\n            : popper === excludedReferenceOrInstance.popper\n        }\n\n        if (!isExcluded) {\n          instance.hide(duration)\n        }\n      }\n    },\n  )\n}\n\n/**\n * Determines if the mouse cursor is outside of the popper's interactive border\n * region\n */\nexport function isCursorOutsideInteractiveBorder(\n  popperPlacement: BasicPlacement,\n  popperRect: ClientRect,\n  event: MouseEvent,\n  props: Props,\n): boolean {\n  if (!popperPlacement) {\n    return true\n  }\n\n  const { clientX: x, clientY: y } = event\n  const { interactiveBorder, distance } = props\n\n  const exceedsTop =\n    popperRect.top - y >\n    (popperPlacement === 'top'\n      ? interactiveBorder + distance\n      : interactiveBorder)\n\n  const exceedsBottom =\n    y - popperRect.bottom >\n    (popperPlacement === 'bottom'\n      ? interactiveBorder + distance\n      : interactiveBorder)\n\n  const exceedsLeft =\n    popperRect.left - x >\n    (popperPlacement === 'left'\n      ? interactiveBorder + distance\n      : interactiveBorder)\n\n  const exceedsRight =\n    x - popperRect.right >\n    (popperPlacement === 'right'\n      ? interactiveBorder + distance\n      : interactiveBorder)\n\n  return exceedsTop || exceedsBottom || exceedsLeft || exceedsRight\n}\n\n/**\n * Returns the distance offset, taking into account the default offset due to\n * the transform: translate() rule (10px) in CSS\n */\nexport function getOffsetDistanceInPx(distance: number): string {\n  return -(distance - 10) + 'px'\n}\n","import Popper from 'popper.js'\nimport {\n  ReferenceElement,\n  PopperInstance,\n  Props,\n  Options,\n  Instance,\n  Content,\n  Listener,\n  VirtualReference,\n} from './types'\nimport { isIE } from './browser'\nimport { closest, closestCallback, arrayFrom } from './ponyfills'\nimport {\n  PASSIVE,\n  PADDING,\n  PLACEMENT_ATTRIBUTE,\n  OUT_OF_BOUNDARIES_ATTRIBUTE,\n  ACTIVE_CLASS,\n  POPPER_SELECTOR,\n} from './constants'\nimport { isUsingTouch } from './bindGlobalEventListeners'\nimport { defaultProps, POPPER_INSTANCE_DEPENDENCIES } from './props'\nimport {\n  createPopperElement,\n  updatePopperElement,\n  getChildren,\n  getBasicPlacement,\n  updateTransitionEndListener,\n  isCursorOutsideInteractiveBorder,\n  getOffsetDistanceInPx,\n  reflow,\n} from './popper'\nimport {\n  hasOwnProperty,\n  debounce,\n  getValue,\n  getModifier,\n  includes,\n  invokeWithArgsOrReturn,\n  setFlipModifierEnabled,\n  canReceiveFocus,\n  validateOptions,\n  evaluateProps,\n  setTransitionDuration,\n  setVisibilityState,\n  isRealElement,\n} from './utils'\n\nlet idCounter = 1\n// Workaround for IE11's lack of new MouseEvent constructor\nlet mouseMoveListeners: ((event: MouseEvent) => void)[] = []\n\n/**\n * Creates and returns a Tippy object. We're using a closure pattern instead of\n * a class so that the exposed object API is clean without private members\n * prefixed with `_`.\n */\nexport default function createTippy(\n  reference: ReferenceElement | VirtualReference,\n  collectionProps: Props,\n): Instance | null {\n  const props = evaluateProps(reference, collectionProps)\n\n  // If the reference shouldn't have multiple tippys, return null early\n  if (!props.multiple && reference._tippy) {\n    return null\n  }\n\n  /* ======================= 🔒 Private members 🔒 ======================= */\n  let lastTriggerEventType: string\n  let lastMouseMoveEvent: MouseEvent\n  let showTimeoutId: number\n  let hideTimeoutId: number\n  let scheduleHideAnimationFrameId: number\n  let isScheduledToShow = false\n  let isBeingDestroyed = false\n  let previousPlacement: string\n  let wasVisibleDuringPreviousUpdate = false\n  let hasMountCallbackRun = false\n  let currentMountCallback: () => void\n  let currentTransitionEndListener: (event: TransitionEvent) => void\n  let listeners: Listener[] = []\n  let currentComputedPadding: {\n    top: number\n    bottom: number\n    left: number\n    right: number\n    [key: string]: number\n  }\n  let debouncedOnMouseMove = debounce(onMouseMove, props.interactiveDebounce)\n\n  /* ======================= 🔑 Public members 🔑 ======================= */\n  const id = idCounter++\n  const popper = createPopperElement(id, props)\n  const popperChildren = getChildren(popper)\n  const popperInstance: PopperInstance | null = null\n\n  const state = {\n    // Is the instance currently enabled?\n    isEnabled: true,\n    // Is the tippy currently showing and not transitioning out?\n    isVisible: false,\n    // Has the instance been destroyed?\n    isDestroyed: false,\n    // Is the tippy currently mounted to the DOM?\n    isMounted: false,\n    // Has the tippy finished transitioning in?\n    isShown: false,\n  }\n\n  const instance: Instance = {\n    // properties\n    id,\n    reference,\n    popper,\n    popperChildren,\n    popperInstance,\n    props,\n    state,\n    // methods\n    clearDelayTimeouts,\n    set,\n    setContent,\n    show,\n    hide,\n    enable,\n    disable,\n    destroy,\n  }\n\n  /* ==================== Initial instance mutations =================== */\n  reference._tippy = instance\n  popper._tippy = instance\n\n  addTriggersToReference()\n\n  if (!props.lazy) {\n    createPopperInstance()\n  }\n\n  if (props.showOnInit) {\n    scheduleShow()\n  }\n\n  // Ensure the event listeners target can receive focus\n  if (\n    props.a11y &&\n    !props.target &&\n    !canReceiveFocus(getEventListenersTarget())\n  ) {\n    getEventListenersTarget().setAttribute('tabindex', '0')\n  }\n\n  // Prevent a tippy with a delay from hiding if the cursor left then returned\n  // before it started hiding\n  popper.addEventListener('mouseenter', (event: MouseEvent) => {\n    if (\n      instance.props.interactive &&\n      instance.state.isVisible &&\n      lastTriggerEventType === 'mouseenter'\n    ) {\n      // We don't want props.onTrigger() to be called here, since the `event`\n      // object is not related to the reference element\n      scheduleShow(event, true)\n    }\n  })\n  popper.addEventListener('mouseleave', () => {\n    if (instance.props.interactive && lastTriggerEventType === 'mouseenter') {\n      document.addEventListener('mousemove', debouncedOnMouseMove)\n    }\n  })\n\n  return instance\n\n  /* ======================= 🔒 Private methods 🔒 ======================= */\n  /**\n   * Removes the follow cursor listener\n   */\n  function removeFollowCursorListener(): void {\n    document.removeEventListener(\n      'mousemove',\n      positionVirtualReferenceNearCursor,\n    )\n  }\n\n  /**\n   * Cleans up interactive mouse listeners\n   */\n  function cleanupInteractiveMouseListeners(): void {\n    document.body.removeEventListener('mouseleave', scheduleHide)\n    document.removeEventListener('mousemove', debouncedOnMouseMove)\n    mouseMoveListeners = mouseMoveListeners.filter(\n      (listener): boolean => listener !== debouncedOnMouseMove,\n    )\n  }\n\n  /**\n   * Returns correct target used for event listeners\n   */\n  function getEventListenersTarget(): ReferenceElement | VirtualReference {\n    return instance.props.triggerTarget || reference\n  }\n\n  /**\n   * Adds the document click event listener for the instance\n   */\n  function addDocumentClickListener(): void {\n    document.addEventListener('click', onDocumentClick, true)\n  }\n\n  /**\n   * Removes the document click event listener for the instance\n   */\n  function removeDocumentClickListener(): void {\n    document.removeEventListener('click', onDocumentClick, true)\n  }\n\n  /**\n   * Returns transitionable inner elements used in show/hide methods\n   */\n  function getTransitionableElements(): (HTMLDivElement | null)[] {\n    return [\n      instance.popperChildren.tooltip,\n      instance.popperChildren.backdrop,\n      instance.popperChildren.content,\n    ]\n  }\n\n  /**\n   * Determines if the instance is in `followCursor` mode.\n   * NOTE: in v5, touch devices will use `initial` behavior no matter the value.\n   */\n  function getIsInLooseFollowCursorMode(): boolean {\n    const { followCursor } = instance.props\n    return (\n      (followCursor && lastTriggerEventType !== 'focus') ||\n      (isUsingTouch && followCursor === 'initial')\n    )\n  }\n\n  /**\n   * Updates the tooltip's position on each animation frame\n   */\n  function makeSticky(): void {\n    setTransitionDuration([popper], isIE ? 0 : instance.props.updateDuration)\n\n    let prevRefRect = reference.getBoundingClientRect()\n\n    function updatePosition(): void {\n      const currentRefRect = reference.getBoundingClientRect()\n\n      // Only schedule an update if the reference rect has changed\n      if (\n        prevRefRect.top !== currentRefRect.top ||\n        prevRefRect.right !== currentRefRect.right ||\n        prevRefRect.bottom !== currentRefRect.bottom ||\n        prevRefRect.left !== currentRefRect.left\n      ) {\n        instance.popperInstance!.scheduleUpdate()\n      }\n\n      prevRefRect = currentRefRect\n\n      if (instance.state.isMounted) {\n        requestAnimationFrame(updatePosition)\n      }\n    }\n\n    updatePosition()\n  }\n\n  /**\n   * Invokes a callback once the tooltip has fully transitioned out\n   */\n  function onTransitionedOut(duration: number, callback: () => void): void {\n    onTransitionEnd(duration, () => {\n      if (\n        !instance.state.isVisible &&\n        popper.parentNode &&\n        popper.parentNode.contains(popper)\n      ) {\n        callback()\n      }\n    })\n  }\n\n  /**\n   * Invokes a callback once the tooltip has fully transitioned in\n   */\n  function onTransitionedIn(duration: number, callback: () => void): void {\n    onTransitionEnd(duration, callback)\n  }\n\n  /**\n   * Invokes a callback once the tooltip's CSS transition ends\n   */\n  function onTransitionEnd(duration: number, callback: () => void): void {\n    const { tooltip } = instance.popperChildren\n\n    /**\n     * Listener added as the `transitionend` handler\n     */\n    function listener(event: TransitionEvent): void {\n      if (event.target === tooltip) {\n        updateTransitionEndListener(tooltip, 'remove', listener)\n        callback()\n      }\n    }\n\n    // Make callback synchronous if duration is 0\n    // `transitionend` won't fire otherwise\n    if (duration === 0) {\n      return callback()\n    }\n\n    updateTransitionEndListener(tooltip, 'remove', currentTransitionEndListener)\n    updateTransitionEndListener(tooltip, 'add', listener)\n\n    currentTransitionEndListener = listener\n  }\n\n  /**\n   * Adds an event listener to the reference and stores it in `listeners`\n   */\n  function on(\n    eventType: string,\n    handler: EventListener,\n    options: boolean | object = false,\n  ): void {\n    getEventListenersTarget().addEventListener(eventType, handler, options)\n    listeners.push({ eventType, handler, options })\n  }\n\n  /**\n   * Adds event listeners to the reference based on the `trigger` prop\n   */\n  function addTriggersToReference(): void {\n    if (instance.props.touchHold && !instance.props.target) {\n      on('touchstart', onTrigger, PASSIVE)\n      on('touchend', onMouseLeave as EventListener, PASSIVE)\n    }\n\n    instance.props.trigger\n      .trim()\n      .split(' ')\n      .forEach(eventType => {\n        if (eventType === 'manual') {\n          return\n        }\n\n        // Non-delegates\n        if (!instance.props.target) {\n          on(eventType, onTrigger)\n          switch (eventType) {\n            case 'mouseenter':\n              on('mouseleave', onMouseLeave as EventListener)\n              break\n            case 'focus':\n              on(isIE ? 'focusout' : 'blur', onBlur as EventListener)\n              break\n          }\n        } else {\n          // Delegates\n          switch (eventType) {\n            case 'mouseenter':\n              on('mouseover', onDelegateShow)\n              on('mouseout', onDelegateHide)\n              break\n            case 'focus':\n              on('focusin', onDelegateShow)\n              on('focusout', onDelegateHide)\n              break\n            case 'click':\n              on(eventType, onDelegateShow)\n              break\n          }\n        }\n      })\n  }\n\n  /**\n   * Removes event listeners from the reference\n   */\n  function removeTriggersFromReference(): void {\n    listeners.forEach(({ eventType, handler, options }: Listener) => {\n      getEventListenersTarget().removeEventListener(eventType, handler, options)\n    })\n    listeners = []\n  }\n\n  /**\n   * Positions the virtual reference near the cursor\n   */\n  function positionVirtualReferenceNearCursor(event: MouseEvent): void {\n    const { clientX: x, clientY: y } = (lastMouseMoveEvent = event)\n\n    // Gets set once popperInstance `onCreate` has been called\n    if (!currentComputedPadding) {\n      return\n    }\n\n    // If the instance is interactive, avoid updating the position unless it's\n    // over the reference element\n    const isCursorOverReference = closestCallback(\n      event.target as Element,\n      (el: Element): boolean => el === reference,\n    )\n\n    const rect = reference.getBoundingClientRect()\n    const { followCursor } = instance.props\n    const isHorizontal = followCursor === 'horizontal'\n    const isVertical = followCursor === 'vertical'\n\n    // The virtual reference needs some size to prevent itself from overflowing\n    const isVerticalPlacement = includes(\n      ['top', 'bottom'],\n      getBasicPlacement(popper),\n    )\n    const fullPlacement = popper.getAttribute(PLACEMENT_ATTRIBUTE)\n    const isVariation = fullPlacement ? !!fullPlacement.split('-')[1] : false\n    const size = isVerticalPlacement ? popper.offsetWidth : popper.offsetHeight\n    const halfSize = size / 2\n    const verticalIncrease = isVerticalPlacement\n      ? 0\n      : isVariation\n      ? size\n      : halfSize\n    const horizontalIncrease = isVerticalPlacement\n      ? isVariation\n        ? size\n        : halfSize\n      : 0\n\n    if (isCursorOverReference || !instance.props.interactive) {\n      instance.popperInstance!.reference = {\n        ...instance.popperInstance!.reference,\n        // This will exist in next Popper.js feature release to fix #532\n        // @ts-ignore\n        referenceNode: reference,\n        // These `client` values don't get used by Popper.js if they are 0\n        clientWidth: 0,\n        clientHeight: 0,\n        getBoundingClientRect: (): DOMRect | ClientRect => ({\n          width: isVerticalPlacement ? size : 0,\n          height: isVerticalPlacement ? 0 : size,\n          top: (isHorizontal ? rect.top : y) - verticalIncrease,\n          bottom: (isHorizontal ? rect.bottom : y) + verticalIncrease,\n          left: (isVertical ? rect.left : x) - horizontalIncrease,\n          right: (isVertical ? rect.right : x) + horizontalIncrease,\n        }),\n      }\n\n      instance.popperInstance!.update()\n    }\n\n    if (followCursor === 'initial' && instance.state.isVisible) {\n      removeFollowCursorListener()\n    }\n  }\n\n  /**\n   * Creates the tippy instance for a delegate when it's been triggered\n   */\n  function createDelegateChildTippy(event?: Event): void {\n    if (event) {\n      const targetEl: ReferenceElement | null = closest(\n        event.target as Element,\n        instance.props.target,\n      )\n\n      if (targetEl && !targetEl._tippy) {\n        createTippy(targetEl, {\n          ...instance.props,\n          content: invokeWithArgsOrReturn(collectionProps.content, [targetEl]),\n          appendTo: collectionProps.appendTo,\n          target: '',\n          showOnInit: true,\n        })\n      }\n    }\n  }\n\n  /**\n   * Event listener invoked upon trigger\n   */\n  function onTrigger(event: Event): void {\n    if (!instance.state.isEnabled || isEventListenerStopped(event)) {\n      return\n    }\n\n    if (!instance.state.isVisible) {\n      lastTriggerEventType = event.type\n\n      if (event instanceof MouseEvent) {\n        lastMouseMoveEvent = event\n\n        // If scrolling, `mouseenter` events can be fired if the cursor lands\n        // over a new target, but `mousemove` events don't get fired. This\n        // causes interactive tooltips to get stuck open until the cursor is\n        // moved\n        mouseMoveListeners.forEach((listener): void => listener(event))\n      }\n    }\n\n    // Toggle show/hide when clicking click-triggered tooltips\n    if (\n      event.type === 'click' &&\n      instance.props.hideOnClick !== false &&\n      instance.state.isVisible\n    ) {\n      scheduleHide()\n    } else {\n      scheduleShow(event)\n    }\n  }\n\n  /**\n   * Event listener used for interactive tooltips to detect when they should\n   * hide\n   */\n  function onMouseMove(event: MouseEvent): void {\n    const isCursorOverPopper =\n      closest(event.target as Element, POPPER_SELECTOR) === popper\n    const isCursorOverReference = closestCallback(\n      event.target as Element,\n      (el: Element) => el === reference,\n    )\n\n    if (isCursorOverPopper || isCursorOverReference) {\n      return\n    }\n\n    if (\n      isCursorOutsideInteractiveBorder(\n        getBasicPlacement(popper),\n        popper.getBoundingClientRect(),\n        event,\n        instance.props,\n      )\n    ) {\n      cleanupInteractiveMouseListeners()\n      scheduleHide()\n    }\n  }\n\n  /**\n   * Event listener invoked upon mouseleave\n   */\n  function onMouseLeave(event: MouseEvent): void {\n    if (isEventListenerStopped(event)) {\n      return\n    }\n\n    if (instance.props.interactive) {\n      document.body.addEventListener('mouseleave', scheduleHide)\n      document.addEventListener('mousemove', debouncedOnMouseMove)\n      mouseMoveListeners.push(debouncedOnMouseMove)\n\n      return\n    }\n\n    scheduleHide()\n  }\n\n  /**\n   * Event listener invoked upon blur\n   */\n  function onBlur(event: FocusEvent): void {\n    if (event.target !== getEventListenersTarget()) {\n      return\n    }\n\n    if (\n      instance.props.interactive &&\n      event.relatedTarget &&\n      popper.contains(event.relatedTarget as Element)\n    ) {\n      return\n    }\n\n    scheduleHide()\n  }\n\n  /**\n   * Event listener invoked when a child target is triggered\n   */\n  function onDelegateShow(event: Event): void {\n    if (closest(event.target as Element, instance.props.target)) {\n      scheduleShow(event)\n    }\n  }\n\n  /**\n   * Event listener invoked when a child target should hide\n   */\n  function onDelegateHide(event: Event): void {\n    if (closest(event.target as Element, instance.props.target)) {\n      scheduleHide()\n    }\n  }\n\n  /**\n   * Determines if an event listener should stop further execution due to the\n   * `touchHold` option\n   */\n  function isEventListenerStopped(event: Event): boolean {\n    const supportsTouch = 'ontouchstart' in window\n    const isTouchEvent = includes(event.type, 'touch')\n    const { touchHold } = instance.props\n\n    return (\n      (supportsTouch && isUsingTouch && touchHold && !isTouchEvent) ||\n      (isUsingTouch && !touchHold && isTouchEvent)\n    )\n  }\n\n  /**\n   * Runs the mount callback\n   */\n  function runMountCallback(): void {\n    if (!hasMountCallbackRun && currentMountCallback) {\n      hasMountCallbackRun = true\n      reflow(popper)\n      currentMountCallback()\n    }\n  }\n\n  /**\n   * Creates the popper instance for the instance\n   */\n  function createPopperInstance(): void {\n    const { popperOptions } = instance.props\n    const { tooltip, arrow } = instance.popperChildren\n    const preventOverflowModifier = getModifier(\n      popperOptions,\n      'preventOverflow',\n    )\n\n    function applyMutations(data: Popper.Data): void {\n      if (instance.props.flip && !instance.props.flipOnUpdate) {\n        if (data.flipped) {\n          instance.popperInstance!.options.placement = data.placement\n        }\n\n        setFlipModifierEnabled(instance.popperInstance!.modifiers, false)\n      }\n\n      // Apply all of the popper's attributes to the tootip node as well.\n      // Allows users to avoid using the .tippy-popper selector for themes.\n      tooltip.setAttribute(PLACEMENT_ATTRIBUTE, data.placement)\n\n      if (data.attributes[OUT_OF_BOUNDARIES_ATTRIBUTE] !== false) {\n        tooltip.setAttribute(OUT_OF_BOUNDARIES_ATTRIBUTE, '')\n      } else {\n        tooltip.removeAttribute(OUT_OF_BOUNDARIES_ATTRIBUTE)\n      }\n\n      // Prevents a transition when changing placements (while tippy is visible)\n      // for scroll/resize updates\n      if (\n        previousPlacement &&\n        previousPlacement !== data.placement &&\n        wasVisibleDuringPreviousUpdate\n      ) {\n        tooltip.style.transition = 'none'\n        requestAnimationFrame(() => {\n          tooltip.style.transition = ''\n        })\n      }\n      previousPlacement = data.placement\n      wasVisibleDuringPreviousUpdate = instance.state.isVisible\n\n      const basicPlacement = getBasicPlacement(popper)\n      const styles = tooltip.style\n\n      // Account for the `distance` offset\n      styles.top = styles.bottom = styles.left = styles.right = ''\n      styles[basicPlacement] = getOffsetDistanceInPx(instance.props.distance)\n\n      const padding =\n        preventOverflowModifier && preventOverflowModifier.padding !== undefined\n          ? preventOverflowModifier.padding\n          : PADDING\n      const isPaddingNumber = typeof padding === 'number'\n\n      const computedPadding = {\n        top: isPaddingNumber ? padding : padding.top,\n        bottom: isPaddingNumber ? padding : padding.bottom,\n        left: isPaddingNumber ? padding : padding.left,\n        right: isPaddingNumber ? padding : padding.right,\n        ...(!isPaddingNumber && padding),\n      }\n\n      computedPadding[basicPlacement] = isPaddingNumber\n        ? padding + instance.props.distance\n        : (padding[basicPlacement] || 0) + instance.props.distance\n\n      instance.popperInstance!.modifiers.filter(\n        m => m.name === 'preventOverflow',\n      )[0].padding = computedPadding\n\n      currentComputedPadding = computedPadding\n    }\n\n    const config = {\n      eventsEnabled: false,\n      placement: instance.props.placement,\n      ...popperOptions,\n      modifiers: {\n        ...(popperOptions ? popperOptions.modifiers : {}),\n        preventOverflow: {\n          boundariesElement: instance.props.boundary,\n          padding: PADDING,\n          ...preventOverflowModifier,\n        },\n        arrow: {\n          element: arrow,\n          enabled: !!arrow,\n          ...getModifier(popperOptions, 'arrow'),\n        },\n        flip: {\n          enabled: instance.props.flip,\n          // The tooltip is offset by 10px from the popper in CSS,\n          // we need to account for its distance\n          padding: instance.props.distance + PADDING,\n          behavior: instance.props.flipBehavior,\n          ...getModifier(popperOptions, 'flip'),\n        },\n        offset: {\n          offset: instance.props.offset,\n          ...getModifier(popperOptions, 'offset'),\n        },\n      },\n      onCreate(data: Popper.Data) {\n        applyMutations(data)\n        runMountCallback()\n\n        if (popperOptions && popperOptions.onCreate) {\n          popperOptions.onCreate(data)\n        }\n      },\n      onUpdate(data: Popper.Data) {\n        applyMutations(data)\n        runMountCallback()\n\n        if (popperOptions && popperOptions.onUpdate) {\n          popperOptions.onUpdate(data)\n        }\n      },\n    }\n\n    instance.popperInstance = new Popper(\n      reference,\n      popper,\n      config,\n    ) as PopperInstance\n  }\n\n  /**\n   * Mounts the tooltip to the DOM\n   */\n  function mount(): void {\n    hasMountCallbackRun = false\n\n    const isInLooseFollowCursorMode = getIsInLooseFollowCursorMode()\n\n    if (instance.popperInstance) {\n      setFlipModifierEnabled(\n        instance.popperInstance.modifiers,\n        instance.props.flip,\n      )\n\n      if (!isInLooseFollowCursorMode) {\n        instance.popperInstance.reference = reference\n        instance.popperInstance.enableEventListeners()\n      }\n\n      instance.popperInstance.scheduleUpdate()\n    } else {\n      createPopperInstance()\n\n      if (!isInLooseFollowCursorMode) {\n        instance.popperInstance!.enableEventListeners()\n      }\n    }\n\n    const { appendTo } = instance.props\n    const parentNode =\n      appendTo === 'parent'\n        ? reference.parentNode\n        : invokeWithArgsOrReturn(appendTo, [reference])\n\n    if (!parentNode.contains(popper)) {\n      parentNode.appendChild(popper)\n      instance.props.onMount(instance)\n      instance.state.isMounted = true\n    }\n  }\n\n  /**\n   * Setup before show() is invoked (delays, etc.)\n   */\n  function scheduleShow(\n    event?: Event,\n    shouldAvoidCallingOnTrigger?: boolean,\n  ): void {\n    clearDelayTimeouts()\n\n    if (instance.state.isVisible) {\n      return\n    }\n\n    // Is a delegate, create an instance for the child target\n    if (instance.props.target) {\n      return createDelegateChildTippy(event)\n    }\n\n    isScheduledToShow = true\n\n    if (event && !shouldAvoidCallingOnTrigger) {\n      instance.props.onTrigger(instance, event)\n    }\n\n    if (instance.props.wait) {\n      return instance.props.wait(instance, event)\n    }\n\n    // If the tooltip has a delay, we need to be listening to the mousemove as\n    // soon as the trigger event is fired, so that it's in the correct position\n    // upon mount.\n    // Edge case: if the tooltip is still mounted, but then scheduleShow() is\n    // called, it causes a jump.\n    if (getIsInLooseFollowCursorMode() && !instance.state.isMounted) {\n      if (!instance.popperInstance) {\n        createPopperInstance()\n      }\n\n      document.addEventListener('mousemove', positionVirtualReferenceNearCursor)\n    }\n\n    addDocumentClickListener()\n\n    const delay = getValue(instance.props.delay, 0, defaultProps.delay)\n\n    if (delay) {\n      showTimeoutId = setTimeout(() => {\n        show()\n      }, delay)\n    } else {\n      show()\n    }\n  }\n\n  /**\n   * Setup before hide() is invoked (delays, etc.)\n   */\n  function scheduleHide(): void {\n    clearDelayTimeouts()\n\n    if (!instance.state.isVisible) {\n      removeFollowCursorListener()\n      removeDocumentClickListener()\n      return\n    }\n\n    isScheduledToShow = false\n\n    const delay = getValue(instance.props.delay, 1, defaultProps.delay)\n\n    if (delay) {\n      hideTimeoutId = setTimeout(() => {\n        if (instance.state.isVisible) {\n          hide()\n        }\n      }, delay)\n    } else {\n      // Fixes a `transitionend` problem when it fires 1 frame too\n      // late sometimes, we don't want hide() to be called.\n      scheduleHideAnimationFrameId = requestAnimationFrame(() => {\n        hide()\n      })\n    }\n  }\n\n  /**\n   * Listener to handle clicks on the document to determine if the\n   * instance should hide\n   */\n  function onDocumentClick(event: MouseEvent): void {\n    // Clicked on interactive popper\n    if (\n      instance.props.interactive &&\n      popper.contains(event.target as Element)\n    ) {\n      return\n    }\n\n    // Clicked on the event listeners target\n    if (getEventListenersTarget().contains(event.target as Element)) {\n      if (isUsingTouch) {\n        return\n      }\n\n      if (\n        instance.state.isVisible &&\n        includes(instance.props.trigger, 'click')\n      ) {\n        return\n      }\n    }\n\n    if (instance.props.hideOnClick === true) {\n      clearDelayTimeouts()\n      hide()\n    }\n  }\n\n  /* ======================= 🔑 Public methods 🔑 ======================= */\n  /**\n   * Enables the instance to allow it to show or hide\n   */\n  function enable(): void {\n    instance.state.isEnabled = true\n  }\n\n  /**\n   * Disables the instance to disallow it to show or hide\n   */\n  function disable(): void {\n    instance.state.isEnabled = false\n  }\n\n  /**\n   * Clears pending timeouts related to the `delay` prop if any\n   */\n  function clearDelayTimeouts(): void {\n    clearTimeout(showTimeoutId)\n    clearTimeout(hideTimeoutId)\n    cancelAnimationFrame(scheduleHideAnimationFrameId)\n  }\n\n  /**\n   * Sets new props for the instance and redraws the tooltip\n   */\n  function set(options: Options): void {\n    // Backwards-compatible after TypeScript change\n    options = options || {}\n\n    validateOptions(options, defaultProps)\n\n    removeTriggersFromReference()\n\n    const prevProps = instance.props\n    const nextProps = evaluateProps(reference, {\n      ...instance.props,\n      ...options,\n      ignoreAttributes: true,\n    })\n    nextProps.ignoreAttributes = hasOwnProperty(options, 'ignoreAttributes')\n      ? options.ignoreAttributes || false\n      : prevProps.ignoreAttributes\n    instance.props = nextProps\n\n    addTriggersToReference()\n\n    cleanupInteractiveMouseListeners()\n    debouncedOnMouseMove = debounce(onMouseMove, nextProps.interactiveDebounce)\n\n    updatePopperElement(popper, prevProps, nextProps)\n    instance.popperChildren = getChildren(popper)\n\n    if (instance.popperInstance) {\n      if (\n        POPPER_INSTANCE_DEPENDENCIES.some(prop => {\n          return (\n            hasOwnProperty(options, prop) && options[prop] !== prevProps[prop]\n          )\n        })\n      ) {\n        instance.popperInstance.destroy()\n        createPopperInstance()\n\n        if (instance.state.isVisible) {\n          instance.popperInstance.enableEventListeners()\n        }\n\n        if (instance.props.followCursor && lastMouseMoveEvent) {\n          positionVirtualReferenceNearCursor(lastMouseMoveEvent)\n        }\n      } else {\n        instance.popperInstance.update()\n      }\n    }\n  }\n\n  /**\n   * Shortcut for .set({ content: newContent })\n   */\n  function setContent(content: Content): void {\n    set({ content })\n  }\n\n  /**\n   * Shows the tooltip\n   */\n  function show(\n    duration: number = getValue(\n      instance.props.duration,\n      0,\n      (defaultProps.duration as [number, number])[1],\n    ),\n  ): void {\n    if (\n      instance.state.isDestroyed ||\n      !instance.state.isEnabled ||\n      (isUsingTouch && !instance.props.touch)\n    ) {\n      return\n    }\n\n    // Standardize `disabled` behavior across browsers.\n    // Firefox allows events on disabled elements, but Chrome doesn't.\n    // Using a wrapper element (i.e. <span>) is recommended.\n    if (getEventListenersTarget().hasAttribute('disabled')) {\n      return\n    }\n\n    if (instance.props.onShow(instance) === false) {\n      return\n    }\n\n    addDocumentClickListener()\n\n    popper.style.visibility = 'visible'\n    instance.state.isVisible = true\n\n    if (instance.props.interactive) {\n      getEventListenersTarget().classList.add(ACTIVE_CLASS)\n    }\n\n    // Prevent a transition if the popper is at the opposite placement\n    const transitionableElements = getTransitionableElements()\n    setTransitionDuration(transitionableElements.concat(popper), 0)\n\n    currentMountCallback = (): void => {\n      if (!instance.state.isVisible) {\n        return\n      }\n\n      const isInLooseFollowCursorMode = getIsInLooseFollowCursorMode()\n\n      if (isInLooseFollowCursorMode && lastMouseMoveEvent) {\n        positionVirtualReferenceNearCursor(lastMouseMoveEvent)\n      } else if (!isInLooseFollowCursorMode) {\n        // Double update will apply correct mutations\n        instance.popperInstance!.update()\n      }\n\n      if (instance.popperChildren.backdrop) {\n        instance.popperChildren.content.style.transitionDelay =\n          Math.round(duration / 12) + 'ms'\n      }\n\n      if (instance.props.sticky) {\n        makeSticky()\n      }\n\n      setTransitionDuration([popper], instance.props.updateDuration)\n      setTransitionDuration(transitionableElements, duration)\n      setVisibilityState(transitionableElements, 'visible')\n\n      onTransitionedIn(\n        duration,\n        (): void => {\n          if (instance.props.aria) {\n            getEventListenersTarget().setAttribute(\n              `aria-${instance.props.aria}`,\n              popper.id,\n            )\n          }\n\n          instance.props.onShown(instance)\n          instance.state.isShown = true\n        },\n      )\n    }\n\n    mount()\n  }\n\n  /**\n   * Hides the tooltip\n   */\n  function hide(\n    duration: number = getValue(\n      instance.props.duration,\n      1,\n      (defaultProps.duration as [number, number])[1],\n    ),\n  ): void {\n    if (\n      instance.state.isDestroyed ||\n      (!instance.state.isEnabled && !isBeingDestroyed)\n    ) {\n      return\n    }\n\n    if (instance.props.onHide(instance) === false && !isBeingDestroyed) {\n      return\n    }\n\n    removeDocumentClickListener()\n\n    popper.style.visibility = 'hidden'\n    instance.state.isVisible = false\n    instance.state.isShown = false\n    wasVisibleDuringPreviousUpdate = false\n\n    if (instance.props.interactive) {\n      getEventListenersTarget().classList.remove(ACTIVE_CLASS)\n    }\n\n    const transitionableElements = getTransitionableElements()\n    setTransitionDuration(transitionableElements, duration)\n    setVisibilityState(transitionableElements, 'hidden')\n\n    onTransitionedOut(duration, () => {\n      if (!isScheduledToShow) {\n        removeFollowCursorListener()\n      }\n\n      if (instance.props.aria) {\n        getEventListenersTarget().removeAttribute(`aria-${instance.props.aria}`)\n      }\n\n      instance.popperInstance!.disableEventListeners()\n      instance.popperInstance!.options.placement = instance.props.placement\n\n      popper.parentNode!.removeChild(popper)\n      instance.props.onHidden(instance)\n      instance.state.isMounted = false\n    })\n  }\n\n  /**\n   * Destroys the tooltip\n   */\n  function destroy(destroyTargetInstances?: boolean): void {\n    if (instance.state.isDestroyed) {\n      return\n    }\n\n    isBeingDestroyed = true\n\n    // If the popper is currently mounted to the DOM, we want to ensure it gets\n    // hidden and unmounted instantly upon destruction\n    if (instance.state.isMounted) {\n      hide(0)\n    }\n\n    removeTriggersFromReference()\n\n    delete reference._tippy\n\n    const { target } = instance.props\n    if (target && destroyTargetInstances && isRealElement(reference)) {\n      arrayFrom(reference.querySelectorAll(target)).forEach(\n        (child: ReferenceElement) => {\n          if (child._tippy) {\n            child._tippy.destroy()\n          }\n        },\n      )\n    }\n\n    if (instance.popperInstance) {\n      instance.popperInstance.destroy()\n    }\n\n    isBeingDestroyed = false\n    instance.state.isDestroyed = true\n  }\n}\n","import { GroupedInstance, GroupOptions } from './types'\n\n/**\n * Groups an array of instances by taking control of their props during\n * certain lifecycles.\n */\nexport default function group(\n  instances: GroupedInstance[],\n  { delay = instances[0].props.delay, duration = 0 }: GroupOptions = {},\n): void {\n  let isAnyTippyOpen = false\n\n  instances.forEach(instance => {\n    if (instance._originalProps) {\n      instance.set(instance._originalProps)\n    } else {\n      instance._originalProps = { ...instance.props }\n    }\n  })\n\n  function setIsAnyTippyOpen(value: boolean): void {\n    isAnyTippyOpen = value\n    updateInstances()\n  }\n\n  function onShow(instance: GroupedInstance): void {\n    instance._originalProps.onShow(instance)\n\n    instances.forEach(instance => {\n      instance.set({ duration })\n\n      if (instance.state.isVisible) {\n        instance.hide()\n      }\n    })\n\n    setIsAnyTippyOpen(true)\n  }\n\n  function onHide(instance: GroupedInstance): void {\n    instance._originalProps.onHide(instance)\n    setIsAnyTippyOpen(false)\n  }\n\n  function onShown(instance: GroupedInstance): void {\n    instance._originalProps.onShown(instance)\n    instance.set({ duration: instance._originalProps.duration })\n  }\n\n  function updateInstances(): void {\n    instances.forEach(instance => {\n      instance.set({\n        onShow,\n        onShown,\n        onHide,\n        delay: isAnyTippyOpen\n          ? [0, Array.isArray(delay) ? delay[1] : delay]\n          : delay,\n        duration: isAnyTippyOpen ? duration : instance._originalProps.duration,\n      })\n    })\n  }\n\n  updateInstances()\n}\n","import { version } from '../package.json'\nimport { isBrowser } from './browser'\nimport { defaultProps } from './props'\nimport createTippy from './createTippy'\nimport bindGlobalEventListeners from './bindGlobalEventListeners'\nimport group from './group'\nimport { polyfillElementPrototypeProperties } from './reference'\nimport { arrayFrom } from './ponyfills'\nimport { hideAll } from './popper'\nimport {\n  isSingular,\n  isBareVirtualElement,\n  getArrayOfElements,\n  validateOptions,\n} from './utils'\nimport { Options, Props, Instance, Targets, VirtualReference } from './types'\n\nlet globalEventListenersBound = false\n\n/**\n * Exported module\n */\nfunction tippy(targets: Targets, options?: Options): Instance | Instance[] {\n  validateOptions(options || {}, defaultProps)\n\n  if (!globalEventListenersBound) {\n    bindGlobalEventListeners()\n    globalEventListenersBound = true\n  }\n\n  const props: Props = { ...defaultProps, ...options }\n\n  // If they are specifying a virtual positioning reference, we need to polyfill\n  // some native DOM props\n  if (isBareVirtualElement(targets)) {\n    polyfillElementPrototypeProperties(targets as VirtualReference)\n  }\n\n  const instances = getArrayOfElements(targets).reduce<Instance[]>(\n    (acc, reference) => {\n      const instance = reference && createTippy(reference, props)\n\n      if (instance) {\n        acc.push(instance)\n      }\n\n      return acc\n    },\n    [],\n  )\n\n  return isSingular(targets) ? instances[0] : instances\n}\n\n/**\n * Static props\n */\ntippy.version = version\ntippy.defaults = defaultProps\n\n/**\n * Static methods\n */\ntippy.setDefaults = (partialDefaults: Options) => {\n  Object.keys(partialDefaults).forEach(key => {\n    // @ts-ignore\n    defaultProps[key] = partialDefaults[key]\n  })\n}\ntippy.hideAll = hideAll\ntippy.group = group\n\n/**\n * Auto-init tooltips for elements with a `data-tippy=\"...\"` attribute\n */\nexport function autoInit(): void {\n  arrayFrom(document.querySelectorAll('[data-tippy]')).forEach(el => {\n    const content = el.getAttribute('data-tippy')\n\n    if (content) {\n      tippy(el, { content })\n    }\n  })\n}\n\nif (isBrowser) {\n  setTimeout(autoInit)\n}\n\nexport default tippy\n","import { isBrowser } from './browser'\n\n/**\n * Injects a string of CSS styles to a style node in <head>\n */\nexport function injectCSS(css: string): void {\n  if (isBrowser) {\n    const style = document.createElement('style')\n    style.type = 'text/css'\n    style.textContent = css\n    style.setAttribute('data-__NAMESPACE_PREFIX__-stylesheet', '')\n    const head = document.head\n    const firstStyleOrLinkTag = head.querySelector('style,link')\n\n    if (firstStyleOrLinkTag) {\n      head.insertBefore(style, firstStyleOrLinkTag)\n    } else {\n      head.appendChild(style)\n    }\n  }\n}\n","import css from '../index.css'\nimport tippy from '../src/index.ts'\nimport { injectCSS } from '../src/css'\n\ninjectCSS(css)\n\nexport default tippy\n"]},"metadata":{},"sourceType":"module"}