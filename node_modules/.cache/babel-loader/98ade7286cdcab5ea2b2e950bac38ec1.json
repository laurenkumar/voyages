{"ast":null,"code":"var _jsxFileName = \"/Users/uthaya/ourjourneys/src/components/ProjectList/ProjectList.js\";\nimport React, { Component, useState } from \"react\";\nimport { TweenLite, gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport { InertiaPlugin } from \"gsap/InertiaPlugin\";\nimport ReactGlobe from 'react-globe';\nimport globe from './map.jpg';\nimport image1 from \"./image-1.jpg\";\nimport image2 from \"./image-2.jpg\";\nimport image3 from \"./image-3.jpg\";\nimport image4 from \"./image-4.jpg\";\nimport \"./ProjectList.scss\";\ngsap.registerPlugin(Draggable, InertiaPlugin);\nconst containerId = \"imageContainer\";\nconst containerSelector = \"#\" + containerId;\nconst rowClass = \"row\";\nconst rowSelector = \".\" + rowClass;\nconst imageClass = \"sliderImage\";\nconst imageSelector = \".\" + imageClass;\nconst imgURLArray = [{\n  src: image1,\n  class: \"irlande\",\n  titre: \"The temple bar\"\n}, {\n  src: image2,\n  class: \"irlande\",\n  titre: \"Pont East / West side\"\n}, {\n  src: image3,\n  class: \"italie\",\n  titre: \"Le colisÃ©\"\n}, {\n  src: image4,\n  class: \"italie\",\n  titre: \"Florence\"\n}];\nconst imgURLArrayLength = imgURLArray ? imgURLArray.length : -1;\nconst rowNum = 4;\nconst imgNum = 6;\nconst useInertia = true;\nconst useCenterGrid = true;\nlet rows, imgMidIndex, rowMidIndex;\nconst rowArray = [];\nconst imgRep = [];\nlet boxWidth, boxHeight, gutter, horizSpacing, vertSpacing, horizOffset, vertOffset, winMidX, winMidY, lastCenteredElem;\nconst background = globe;\n\nclass projectList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onFilterChange = newFilter => {\n      if (newFilter === '*') {\n        this.setStyles();\n      } else {\n        this.setStyles(newFilter);\n      }\n\n      this.resize();\n    };\n\n    this.centerGrid = () => {\n      let bcr = lastCenteredElem.getBoundingClientRect();\n      let midX = bcr.x + bcr.width / 2;\n      let midY = bcr.y + bcr.height / 2;\n      let x = winMidX - midX;\n      let y = winMidY - midY;\n      gsap.to(containerSelector, {\n        ease: \"sine.inOut\",\n        duration: 0.7,\n        x: \"+=\" + x,\n        y: \"+=\" + y\n      });\n    };\n\n    this.updateCenterElem = () => {\n      let elems = document.elementsFromPoint(winMidX, winMidY);\n      elems.forEach(elem => {\n        if (elem.matches(imageSelector) && !lastCenteredElem.isSameNode(elem)) {\n          lastCenteredElem = elem;\n          this.checkPositions(lastCenteredElem);\n        }\n      });\n    };\n\n    this.mouseMove = e => {\n      TweenLite.to(this.myRef.current, 0.5, {\n        css: {\n          left: e.pageX,\n          top: e.pageY\n        },\n        delay: 0.03\n      });\n    };\n\n    this.handleMouseEnter = () => {\n      TweenLite.to(this.myRef.current, 0, {\n        css: {\n          opacity: \"1\"\n        }\n      });\n    };\n\n    this.handleMouseLeave = () => {\n      TweenLite.to(this.myRef.current, 0, {\n        css: {\n          opacity: \"0\"\n        }\n      });\n    };\n\n    this.onHover = e => {\n      if (e.target.className === \"lib__item\") {\n        TweenLite.to(this.myRef.current, 0, {\n          css: {\n            \"background-image\": \"url(\" + image1 + \")\"\n          }\n        });\n      }\n\n      if (e.target.className === \"project p-2\") {\n        TweenLite.to(this.myRef.current, 0, {\n          css: {\n            \"background-image\": \"url(\" + image2 + \")\"\n          }\n        });\n      }\n\n      if (e.target.className === \"project p-3\") {\n        TweenLite.to(this.myRef.current, 0, {\n          css: {\n            \"background-image\": \"url(\" + image3 + \")\"\n          }\n        });\n      }\n\n      if (e.target.className === \"project p-4\") {\n        TweenLite.to(this.myRef.current, 0, {\n          css: {\n            \"background-image\": \"url(\" + image4 + \")\"\n          }\n        });\n      }\n    };\n\n    this.myRef = React.createRef();\n    this.onFilterChange = this.onFilterChange.bind(this);\n    this.state = {\n      show: false\n    };\n  }\n\n  componentDidMount() {\n    this.init();\n  }\n\n  init() {\n    gsap.set(containerSelector, {\n      willChange: \"transform\"\n    });\n    this.createImageGrid();\n    this.createMask();\n    lastCenteredElem = document.querySelectorAll(imageSelector)[(rowMidIndex - 1) * imgNum + imgMidIndex];\n    this.createDraggable();\n    this.setStyles();\n    this.resize();\n    window.addEventListener(\"resize\", this.resize);\n  }\n\n  moveArrayIndex(array, oldIndex, newIndex) {\n    if (newIndex >= array.length) {\n      newIndex = array.length - 1;\n    }\n\n    array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n    return array;\n  }\n\n  checkPositions(elem) {\n    // Find the location in our array of the element\n    let rowIndex = -1,\n        imgIndex = -1;\n    imgRep.forEach((row, i) => {\n      row.forEach((img, j) => {\n        if (elem.isSameNode(img)) {\n          rowIndex = i;\n          imgIndex = j;\n        }\n      });\n    }); // Element not found, return\n\n    if (rowIndex === -1) return; // Reposition elements as necessary so that our element is in the center\n    // Reposition the rows as necessary\n\n    if (rowIndex < rowMidIndex) {\n      for (let i = rowIndex; i < rowMidIndex; i++) {\n        // Update the row's actual position\n        let rowY = gsap.getProperty(rowArray[0], \"y\");\n\n        if (rowArray.length % 2 === 1) {\n          // Odd number of rows means we have to handle offset\n          let row = rowArray[rowArray.length - 1];\n\n          if (row.dataset.offset === \"true\") {\n            gsap.set(row, {\n              y: rowY - gutter - boxHeight,\n              x: \"+=\" + boxWidth / 2\n            });\n            row.dataset.offset = \"false\";\n          } else {\n            gsap.set(row, {\n              y: rowY - gutter - boxHeight,\n              x: \"-=\" + boxWidth / 2\n            });\n            row.dataset.offset = \"true\";\n          }\n        } else {\n          // Equal number of rows; don't have to handle offset\n          gsap.set(rowArray[rowArray.length - 1], {\n            y: rowY - gutter - boxHeight\n          });\n        } // Update our representations\n\n\n        this.moveArrayIndex(imgRep, imgRep.length - 1, 0);\n        this.moveArrayIndex(rowArray, rowArray.length - 1, 0);\n      }\n    } else if (rowIndex > rowMidIndex) {\n      for (let i = rowMidIndex; i < rowIndex; i++) {\n        // Update the row's actual position\n        let rowY = gsap.getProperty(rowArray[rowArray.length - 1], \"y\");\n\n        if (rowArray.length % 2 === 1) {\n          // Odd number of rows means we have to handle offset\n          let row = rowArray[0];\n\n          if (row.dataset.offset === \"true\") {\n            gsap.set(row, {\n              y: rowY + gutter + boxHeight,\n              x: \"-=\" + boxWidth / 2\n            });\n            row.dataset.offset = \"false\";\n          } else {\n            gsap.set(row, {\n              y: rowY + gutter + boxHeight,\n              x: \"+=\" + boxWidth / 2\n            });\n            row.dataset.offset = \"true\";\n          }\n        } else {\n          // Equal number of rows; don't have to handle offset\n          gsap.set(rowArray[0], {\n            y: rowY + gutter + boxHeight\n          });\n        } // Update our representations\n\n\n        this.moveArrayIndex(imgRep, 0, imgRep.length - 1);\n        this.moveArrayIndex(rowArray, 0, rowArray.length - 1);\n      }\n    } // Reposition the images as necessary\n\n\n    if (imgIndex < imgMidIndex) {\n      for (let rowNum = 0; rowNum < rows.length; rowNum++) {\n        // Do it for every row\n        let row = imgRep[rowNum];\n\n        for (let i = imgIndex; i < imgMidIndex; i++) {\n          // Update the images's actual position\n          let imgX = gsap.getProperty(row[0], \"x\");\n          gsap.set(row[row.length - 1], {\n            x: imgX - gutter - boxWidth\n          }); // Update our representation\n\n          this.moveArrayIndex(row, row.length - 1, 0);\n        }\n      }\n    } else if (imgIndex > imgMidIndex) {\n      for (let rowNum = 0; rowNum < rows.length; rowNum++) {\n        // Do it for every row\n        let row = imgRep[rowNum];\n\n        for (let i = imgMidIndex; i < imgIndex; i++) {\n          // Update the images's actual position\n          let imgX = gsap.getProperty(row[imgNum - 1], \"x\");\n          gsap.set(row[0], {\n            x: imgX + gutter + boxWidth\n          }); // Update our representation\n\n          this.moveArrayIndex(row, 0, row.length - 1);\n        }\n      }\n    }\n  }\n\n  getCenterCoords(endX, endY) {\n    return {\n      x: winMidX - endX,\n      y: winMidY - endY\n    };\n  }\n\n  createImageGrid() {\n    for (let y = 0; y < rowNum; y++) {\n      let row = document.createElement(\"div\");\n      row.className = rowClass;\n\n      for (let x = 0; x < imgNum; x++) {\n        let image = document.createElement(\"div\");\n        let link = document.createElement(\"a\");\n        let legend = document.createElement(\"div\");\n        legend.className = \"Thumb__title\";\n        link.className = \"filter-item styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-small Thumb__layout-horizontal\";\n        image.className = imageClass;\n        row.appendChild(link);\n        link.appendChild(image);\n        image.appendChild(legend);\n      }\n\n      document.querySelector(containerSelector).appendChild(row); // Add the images to our representation\n\n      imgRep.push(gsap.utils.toArray(row.querySelectorAll(imageSelector)));\n    }\n\n    rows = document.querySelectorAll(rowSelector);\n    imgMidIndex = Math.floor(imgNum / 2);\n    rowMidIndex = Math.floor(rowNum / 2);\n  }\n\n  createMask() {\n    let mask = document.createElement(\"div\");\n    mask.className = \"mask\";\n    document.body.appendChild(mask);\n    gsap.set(mask, {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100vw\",\n      height: \"100vh\",\n      zIndex: 9 // backgroundColor: \"green\",\n      // opacity: \"0.2\",\n\n    });\n  }\n\n  resize() {\n    winMidX = window.innerWidth / 2;\n    winMidY = window.innerHeight / 2;\n    boxWidth = window.innerWidth * 0.40;\n    boxHeight = window.innerHeight * 0.25;\n    gutter = window.innerWidth * 0.05;\n    horizSpacing = boxWidth + gutter * 1.5;\n    vertSpacing = boxHeight + gutter;\n    horizOffset = -(imgMidIndex * horizSpacing + boxWidth / 2) + winMidX;\n    vertOffset = -(rowMidIndex * vertSpacing + boxHeight / 2) + winMidY; // Reset our container and rows\n\n    gsap.set(containerSelector, {\n      x: 0,\n      y: 0\n    });\n    rows.forEach(function (row, i) {\n      gsap.set(row, {\n        attr: {\n          \"data-offset\": function () {\n            if (i % 2 === 0) return false;else return true;\n          }\n        },\n        x: function () {\n          if (i % 2 === 0) return horizOffset;else return horizOffset - boxWidth / 2;\n        },\n        y: function () {\n          return i * vertSpacing + vertOffset;\n        }\n      });\n      gsap.set(row.querySelectorAll(imageSelector), {\n        width: boxWidth * 0.5,\n        height: boxHeight,\n        x: function (index) {\n          return index * horizSpacing;\n        }\n      });\n      const tl = gsap.timeline();\n      tl.from(row.querySelectorAll(imageSelector), {\n        scale: 0.2,\n        duration: Math.floor(Math.random() * 4) + 1,\n        ease: \"sine.inOut\",\n        opacity: 0\n      }); // Update our representation of the rows\n\n      rowArray[i] = row;\n    });\n  }\n\n  setStyles(param) {\n    gsap.set(\"body\", {\n      margin: 0,\n      overflow: \"hidden\"\n    });\n    const randImgSize = Math.floor(Math.max(window.innerWidth, window.innerHeight) / 3);\n    gsap.set(imageSelector, {\n      backgroundImage: function (index) {\n        if (param) {\n          const newImages = imgURLArray.filter(element => element.class === param);\n          const newImagesArrayLength = newImages ? newImages.length : -1;\n          return `url(` + newImages[index % newImagesArrayLength].src + `)`;\n        } else {\n          return `url(` + imgURLArray[index % imgURLArrayLength].src + `)`;\n        }\n      },\n      position: \"absolute\",\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\",\n      border: \"5px solid #FFF\",\n      outline: \"5px solid #000\",\n      top: 0,\n      left: 0\n    });\n    let legend = document.querySelectorAll(imageSelector);\n\n    for (let x = 0; x < legend.length; x++) {\n      legend[x].addEventListener(\"mouseenter\", function () {\n        console.log(\"enter\");\n      });\n      legend[x].addEventListener(\"mouseleave\", function () {\n        console.log(\"leave\");\n      });\n\n      if (param) {\n        const newImages = imgURLArray.filter(element => element.class === param);\n        const newImagesArrayLength = newImages ? newImages.length : -1;\n        legend[x].children[0].innerHTML = newImages[x % newImagesArrayLength].titre;\n      } else {\n        legend[x].children[0].innerHTML = imgURLArray[x % imgURLArrayLength].titre;\n      }\n    }\n\n    gsap.set(rowSelector, {\n      position: \"absolute\"\n    });\n  }\n\n  createDraggable() {\n    let options = {\n      trigger: \".mask\",\n      dragResistance: 0.4,\n      resistance: 400,\n      onDrag: this.updateCenterElem,\n      onHover: e => {\n        // Get the elements underneath the click\n        const clicked = document.elementsFromPoint(e.pageX, e.pageY);\n        clicked.forEach(elem => {\n          // If the one(s) you want are clicked, do stuff\n          if (elem.matches(\".sliderImage\")) {\n            console.log(\"to\", elem);\n          }\n        });\n      },\n      onClick: e => {\n        // Get the elements underneath the click\n        const clicked = document.elementsFromPoint(e.pageX, e.pageY);\n        clicked.forEach(elem => {\n          // If the one(s) you want are clicked, do stuff\n          if (elem.matches(\".sliderImage\")) {\n            console.log(\"to\", elem);\n          }\n        });\n      }\n    };\n\n    if (useInertia) {\n      options.inertia = true;\n      options.onThrowUpdate = this.updateCenterElem;\n\n      if (useCenterGrid) {\n        options.onThrowComplete = this.centerGrid;\n      }\n    } else if (useCenterGrid) {\n      // No inertia\n      options.onDragEnd = this.centerGrid;\n    }\n\n    document.querySelector(\".mask\").addEventListener(\"mousemove\", e => {\n      const hover = document.elementsFromPoint(e.pageX, e.pageY);\n      hover.forEach(elem => {\n        // If the one(s) you want are clicked, do stuff\n        if (elem.matches(\".sliderImage\")) {\n          document.querySelector(\".mask\").style.cursor = \"pointer\";\n          console.log(\"toto\");\n        } else {\n          document.querySelector(\".mask\").style.cursor = \"grab\";\n          console.log(\"toto\");\n        }\n      });\n    }, {\n      once: false\n    });\n    return Draggable.create(containerSelector, options);\n  }\n\n  changeBackground(e) {\n    e.target.style.background = 'red';\n  }\n\n  render() {\n    const dragInfo = {\n      position: 'absolute',\n      bottom: '20%'\n    };\n    const initialCoordinates = [48.8566, 2.3522];\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487\n      },\n      __self: this\n    }, this.state.show ? React.createElement(\"aside\", {\n      className: \"navAside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"contentAside\",\n      style: {\n        transform: \"translate3d(0px, 0%, 0px)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 491\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 492\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      className: \"\",\n      viewBox: \"0 0 12 12\",\n      onClick: () => {\n        this.setState({\n          show: !this.state.show\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(\"path\", {\n      fillRule: \"evenodd\",\n      clipRule: \"evenodd\",\n      fill: \"black\",\n      d: \"M10.6666 11.9988L11.9999 10.6655L7.33363 5.99922L11.9998 1.33307L10.6665 -0.000240447L6.00032 4.66591L1.33343 -0.000976562L0.000117558 1.33233L4.66701 5.99922L0 10.6662L1.33331 11.9995L6.00032 7.33253L10.6666 11.9988Z\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    })))), React.createElement(\"nav\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      className: \"listAside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      \"data-title\": \"all\",\n      style: {\n        opacity: \"1\"\n      },\n      onClick: () => {\n        this.onFilterChange(\"*\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505\n      },\n      __self: this\n    }, \"le monde\"))), React.createElement(\"li\", {\n      className: \"listAside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 509\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      \"data-title\": \"irlande\",\n      style: {\n        opacity: \"1\"\n      },\n      onClick: () => {\n        this.onFilterChange(\"irlande\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 510\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, \"Irlande\"))), React.createElement(\"li\", {\n      className: \"listAside\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 515\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      \"data-title\": \"italie\",\n      style: {\n        opacity: \"1\"\n      },\n      onClick: () => {\n        this.onFilterChange(\"italie\");\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 516\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517\n      },\n      __self: this\n    }, \"Italie\")))))))) : null, React.createElement(\"div\", {\n      style: {\n        position: \"absolute\",\n        right: \"-12vw\",\n        zIndex: \"0\",\n        top: \"-15vw\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 527\n      },\n      __self: this\n    }, React.createElement(ReactGlobe, {\n      cameraOptions: {\n        autoRotateSpeed: 1,\n        enableAutoRotate: true,\n        enableRotate: true,\n        rotateSpeed: 0.5\n      },\n      size: [600, 600],\n      initialCoordinates: initialCoordinates,\n      globeOptions: {\n        enableClouds: false,\n        enableGlow: true,\n        enableBackground: false,\n        texture: globe\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533\n      },\n      __self: this\n    })), React.createElement(\"nav\", {\n      className: \"navFiltre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/nous\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"0.5s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552\n      },\n      __self: this\n    }, \"Nous\")), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"0.6s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554\n      },\n      __self: this\n    }, \" \"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"0.65s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, \"a\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"0.7s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, \"v\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"0.75s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, \"o\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"0.8s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, \"n\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"0.85s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }, \"s\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"0.9s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, \" \"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"0.95s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, \"v\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562\n      },\n      __self: this\n    }, \"o\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.05s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563\n      },\n      __self: this\n    }, \"y\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.1s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, \"a\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.15s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, \"g\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.2s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, \"\\xE9\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.25s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, \" \"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.3s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568\n      },\n      __self: this\n    }, \"d\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.35s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }, \"a\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.35s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570\n      },\n      __self: this\n    }, \"n\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.35s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 571\n      },\n      __self: this\n    }, \"s\"), React.createElement(\"button\", {\n      onClick: () => {\n        this.setState({\n          show: !this.state.show\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 573\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.4s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575\n      },\n      __self: this\n    }, \"l\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.4s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, \"e\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.4s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577\n      },\n      __self: this\n    }, \" \"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.4s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    }, \"m\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.45s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579\n      },\n      __self: this\n    }, \"o\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.5s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580\n      },\n      __self: this\n    }, \"n\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.55s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581\n      },\n      __self: this\n    }, \"d\"), React.createElement(\"span\", {\n      style: {\n        transitionDelay: \"1.6s\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582\n      },\n      __self: this\n    }, \"e\"))), React.createElement(\"div\", {\n      className: \"Container__wrapper Container__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        zIndex: \"1\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Intro__wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"Heading__wrapper styles__font-size-xl styles__font-family-serif-bold Intro__title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 588\n      },\n      __self: this\n    }, \"Nos voyages\\uD83C\\uDFDD\"), React.createElement(\"div\", {\n      className: \"Heading__wrapper styles__font-size-sm Intro__desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, \"Retrouvez ici toutes les villes que nous avons visit\\xE9.\"))), React.createElement(\"div\", {\n      className: \"Container__wrapper Container__absolute Container__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"Container__wrapper Container__absolute Container__center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"Heading__wrapper styles__font-size-xs\",\n      style: dragInfo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }, \"DRAG POUR EXPLORER\"), React.createElement(\"div\", {\n      id: \"imageContainer\",\n      className: \"filter-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 596\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default projectList;","map":{"version":3,"sources":["/Users/uthaya/ourjourneys/src/components/ProjectList/ProjectList.js"],"names":["React","Component","useState","TweenLite","gsap","Draggable","InertiaPlugin","ReactGlobe","globe","image1","image2","image3","image4","registerPlugin","containerId","containerSelector","rowClass","rowSelector","imageClass","imageSelector","imgURLArray","src","class","titre","imgURLArrayLength","length","rowNum","imgNum","useInertia","useCenterGrid","rows","imgMidIndex","rowMidIndex","rowArray","imgRep","boxWidth","boxHeight","gutter","horizSpacing","vertSpacing","horizOffset","vertOffset","winMidX","winMidY","lastCenteredElem","background","projectList","constructor","props","onFilterChange","newFilter","setStyles","resize","centerGrid","bcr","getBoundingClientRect","midX","x","width","midY","y","height","to","ease","duration","updateCenterElem","elems","document","elementsFromPoint","forEach","elem","matches","isSameNode","checkPositions","mouseMove","e","myRef","current","css","left","pageX","top","pageY","delay","handleMouseEnter","opacity","handleMouseLeave","onHover","target","className","createRef","bind","state","show","componentDidMount","init","set","willChange","createImageGrid","createMask","querySelectorAll","createDraggable","window","addEventListener","moveArrayIndex","array","oldIndex","newIndex","splice","rowIndex","imgIndex","row","i","img","j","rowY","getProperty","dataset","offset","imgX","getCenterCoords","endX","endY","createElement","image","link","legend","appendChild","querySelector","push","utils","toArray","Math","floor","mask","body","position","zIndex","innerWidth","innerHeight","attr","index","tl","timeline","from","scale","random","param","margin","overflow","randImgSize","max","backgroundImage","newImages","filter","element","newImagesArrayLength","backgroundSize","backgroundPosition","border","outline","console","log","children","innerHTML","options","trigger","dragResistance","resistance","onDrag","clicked","onClick","inertia","onThrowUpdate","onThrowComplete","onDragEnd","hover","style","cursor","once","create","changeBackground","render","dragInfo","bottom","initialCoordinates","transform","setState","right","autoRotateSpeed","enableAutoRotate","enableRotate","rotateSpeed","enableClouds","enableGlow","enableBackground","texture","transitionDelay"],"mappings":"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","sourcesContent":["import React, { Component, useState } from \"react\";\nimport { TweenLite, gsap } from \"gsap\";\nimport { Draggable } from \"gsap/Draggable\";\nimport { InertiaPlugin } from \"gsap/InertiaPlugin\";\nimport ReactGlobe from 'react-globe';\nimport globe from './map.jpg';\nimport image1 from \"./image-1.jpg\";\nimport image2 from \"./image-2.jpg\";\nimport image3 from \"./image-3.jpg\";\nimport image4 from \"./image-4.jpg\";\n\nimport \"./ProjectList.scss\";\n\ngsap.registerPlugin(Draggable, InertiaPlugin);\nconst containerId = \"imageContainer\";\nconst containerSelector = \"#\" + containerId;\nconst rowClass = \"row\"\nconst rowSelector = \".\" + rowClass;\nconst imageClass = \"sliderImage\";\nconst imageSelector = \".\" + imageClass;\nconst imgURLArray = [{src: image1, class: \"irlande\", titre: \"The temple bar\"}, {src: image2, class: \"irlande\", titre: \"Pont East / West side\"}, {src: image3, class: \"italie\", titre: \"Le colisÃ©\"}, {src: image4, class: \"italie\", titre: \"Florence\"}];\nconst imgURLArrayLength = imgURLArray ? imgURLArray.length : -1;\nconst rowNum = 4;\nconst imgNum = 6;\n\nconst useInertia = true;\nconst useCenterGrid = true;\n\nlet rows,\nimgMidIndex,\nrowMidIndex;\nconst rowArray = [];\nconst imgRep = [];\n\nlet boxWidth,\nboxHeight,\ngutter,\nhorizSpacing,\nvertSpacing,\nhorizOffset,\nvertOffset,\nwinMidX,\nwinMidY,\nlastCenteredElem;\nconst background = globe;\n\nclass projectList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.myRef = React.createRef();\n    this.onFilterChange = this.onFilterChange.bind(this);\n    this.state={ show:false }\n  }\n\n  componentDidMount() {\n    this.init();\n  };\n\n  init() {\n    gsap.set(containerSelector, {willChange: \"transform\"});\n\n    this.createImageGrid();\n    this.createMask();\n    lastCenteredElem = document.querySelectorAll(imageSelector)[(rowMidIndex - 1) * imgNum + imgMidIndex];\n\nthis.createDraggable();\n\nthis.setStyles();\n\nthis.resize();\nwindow.addEventListener(\"resize\", this.resize);\n}\n\nonFilterChange = (newFilter) => {\n  if(newFilter === '*') {\n    this.setStyles();\n  } else {\n    this.setStyles(newFilter);\n  }\n  this.resize();\n}\n\nmoveArrayIndex(array, oldIndex, newIndex) {\n  if (newIndex >= array.length) {\n    newIndex = array.length - 1;\n  }\n  array.splice(newIndex, 0, array.splice(oldIndex, 1)[0]);\n  return array;\n}\n\n\ncheckPositions(elem) {\n// Find the location in our array of the element\nlet rowIndex = -1,\nimgIndex = -1;\nimgRep.forEach((row, i) => {\n  row.forEach((img, j) => {\n    if(elem.isSameNode(img)) {\n      rowIndex = i;\n      imgIndex = j;\n    }\n  });\n});\n\n// Element not found, return\nif(rowIndex === -1)\n  return;\n\n// Reposition elements as necessary so that our element is in the center\n// Reposition the rows as necessary\nif(rowIndex < rowMidIndex) {\n  for(let i = rowIndex; i < rowMidIndex; i++) {\n// Update the row's actual position\nlet rowY = gsap.getProperty(rowArray[0], \"y\");\n\nif(rowArray.length % 2 === 1) { // Odd number of rows means we have to handle offset\n  let row = rowArray[rowArray.length - 1];\nif(row.dataset.offset === \"true\") {\ngsap.set(row, {y: rowY - gutter - boxHeight, x: \"+=\" + boxWidth / 2});\nrow.dataset.offset = \"false\";\n} else {\ngsap.set(row, {y: rowY - gutter - boxHeight, x: \"-=\" + boxWidth / 2});\nrow.dataset.offset = \"true\";\n}\n} else { // Equal number of rows; don't have to handle offset\ngsap.set(rowArray[rowArray.length - 1], {y: rowY - gutter - boxHeight});\n}\n\n// Update our representations\nthis.moveArrayIndex(imgRep, imgRep.length - 1, 0);\nthis.moveArrayIndex(rowArray, rowArray.length - 1, 0);\n}\n} else if(rowIndex > rowMidIndex) {\n  for(let i = rowMidIndex; i < rowIndex; i++) {\n// Update the row's actual position\nlet rowY = gsap.getProperty(rowArray[rowArray.length - 1], \"y\");\n\nif(rowArray.length % 2 === 1) { // Odd number of rows means we have to handle offset\n  let row = rowArray[0];\nif(row.dataset.offset === \"true\") {\ngsap.set(row, {y: rowY + gutter + boxHeight, x: \"-=\" + boxWidth / 2});\nrow.dataset.offset = \"false\";\n} else {\ngsap.set(row, {y: rowY + gutter + boxHeight, x: \"+=\" + boxWidth / 2});\nrow.dataset.offset = \"true\";\n}\n} else { // Equal number of rows; don't have to handle offset\ngsap.set(rowArray[0], {y: rowY + gutter + boxHeight});\n}\n\n// Update our representations\nthis.moveArrayIndex(imgRep, 0, imgRep.length - 1);\nthis.moveArrayIndex(rowArray, 0, rowArray.length - 1);\n}\n}\n\n\n// Reposition the images as necessary\nif(imgIndex < imgMidIndex) {\nfor(let rowNum = 0; rowNum < rows.length; rowNum++) { // Do it for every row\n  let row = imgRep[rowNum];\n\n  for(let i = imgIndex; i < imgMidIndex; i++) {\n// Update the images's actual position\nlet imgX = gsap.getProperty(row[0], \"x\");\n\ngsap.set(row[row.length - 1], {x: imgX - gutter - boxWidth});\n\n// Update our representation\nthis.moveArrayIndex(row, row.length - 1, 0);\n}\n}\n} else if(imgIndex > imgMidIndex) {\nfor(let rowNum = 0; rowNum < rows.length; rowNum++) { // Do it for every row\n  let row = imgRep[rowNum];\n\n  for(let i = imgMidIndex; i < imgIndex; i++) {\n// Update the images's actual position\nlet imgX = gsap.getProperty(row[imgNum - 1], \"x\");\n\ngsap.set(row[0], {x: imgX + gutter + boxWidth});\n\n// Update our representation\nthis.moveArrayIndex(row, 0, row.length - 1);\n}\n}\n}\n}\n\n\ncenterGrid = () => {\n  let bcr = lastCenteredElem.getBoundingClientRect();\n  let midX = bcr.x + bcr.width / 2;\n  let midY = bcr.y + bcr.height / 2;\n\n  let x = winMidX - midX;\n  let y = winMidY - midY;\n  gsap.to(containerSelector, {\n    ease: \"sine.inOut\",\n    duration: 0.7,\n    x: \"+=\" + x,\n    y: \"+=\" + y\n  });\n}\n\ngetCenterCoords(endX, endY) {\n  return {x: winMidX - endX, y: winMidY - endY}\n}\n\nupdateCenterElem = () => {\n  let elems = document.elementsFromPoint(winMidX, winMidY);\n\n  elems.forEach(elem => {\n    if(elem.matches(imageSelector) && !lastCenteredElem.isSameNode(elem)) {\n      lastCenteredElem = elem; \n\n      this.checkPositions(lastCenteredElem);\n    }\n  });\n}\n\ncreateImageGrid() {\n  for(let y = 0; y < rowNum; y++) {\n    let row = document.createElement(\"div\");\n    row.className = rowClass;\n    for(let x = 0; x < imgNum; x++) {\n      let image = document.createElement(\"div\");\n      let link = document.createElement(\"a\");\n      let legend = document.createElement(\"div\");\n      legend.className = \"Thumb__title\";\n      link.className = \"filter-item styles__font-size-xs styles__font-family-sans-serif styles__double-border Thumb__wrapper Thumb__size-small Thumb__layout-horizontal\";\n      image.className = imageClass;\n      row.appendChild(link);\n      link.appendChild(image);\n      image.appendChild(legend);\n    }\n    document.querySelector(containerSelector).appendChild(row);\n\n// Add the images to our representation\nimgRep.push(gsap.utils.toArray(row.querySelectorAll(imageSelector)));\n}\n\nrows = document.querySelectorAll(rowSelector);\nimgMidIndex = Math.floor(imgNum / 2);\nrowMidIndex = Math.floor(rowNum / 2);\n}\n\ncreateMask() {\n  let mask = document.createElement(\"div\");\n  mask.className = \"mask\";\n  document.body.appendChild(mask);\n\n  gsap.set(mask, {\n    position: \"absolute\",\n    top: 0,\n    left: 0,\n    width: \"100vw\",\n    height: \"100vh\",\n    zIndex: 9,\n// backgroundColor: \"green\",\n// opacity: \"0.2\",\n});\n}\n\nresize() {\n  winMidX = window.innerWidth / 2;\n  winMidY = window.innerHeight / 2;\n  boxWidth = window.innerWidth * 0.40;\n  boxHeight = window.innerHeight * 0.25;\n  gutter = window.innerWidth * 0.05;\n  horizSpacing = boxWidth + gutter * 1.5;\n  vertSpacing = boxHeight + gutter;\n  horizOffset = -(imgMidIndex * horizSpacing + boxWidth / 2) + winMidX;\nvertOffset = -(rowMidIndex * vertSpacing + boxHeight / 2) + winMidY;\n\n// Reset our container and rows\ngsap.set(containerSelector, {x: 0, y: 0});\n\nrows.forEach(function(row, i) {\n  gsap.set(row, {\n    attr: { \n\"data-offset\": function() {\nif(i % 2 === 0) return false;\nelse return true;\n}\n},\nx: function() {\n  if(i % 2 === 0)\n    return horizOffset;\n  else\n    return horizOffset - boxWidth / 2;\n},\ny: function() {\n  return i * vertSpacing + vertOffset;\n},\n});\n\n  gsap.set(row.querySelectorAll(imageSelector), {\n    width: boxWidth * 0.5,\n    height: boxHeight,\n    x: function(index) {\n      return index * horizSpacing;\n    }\n  });\n\n  const tl = gsap.timeline();\n\n  tl.from(row.querySelectorAll(imageSelector), {\n    scale: 0.2,\n    duration: Math.floor(Math.random() * 4) + 1,\n    ease: \"sine.inOut\",\n    opacity: 0\n  });\n\n// Update our representation of the rows\nrowArray[i] = row;\n});\n}\n\nsetStyles(param) {\n  gsap.set(\"body\", {\n    margin: 0,\n    overflow: \"hidden\"\n  });\n\n  const randImgSize = Math.floor( Math.max(window.innerWidth, window.innerHeight) / 3);\n  gsap.set(imageSelector, {\n    backgroundImage: function(index) {\n      if (param) {\n        const newImages = imgURLArray.filter(element => element.class === param);\n        const newImagesArrayLength = newImages ? newImages.length : -1;\n        return `url(` + newImages[index % newImagesArrayLength].src + `)`;\n      } else {\n        return `url(` + imgURLArray[index % imgURLArrayLength].src + `)`;\n      }\n    },\n    position: \"absolute\",\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n    border: \"5px solid #FFF\",\n    outline: \"5px solid #000\",\n    top: 0,\n    left: 0\n  });\n\n    let legend = document.querySelectorAll(imageSelector);\n    for(let x = 0; x < legend.length; x++) {\n      legend[x].addEventListener(\"mouseenter\", function() {\n        console.log(\"enter\")\n      });\n      \n      legend[x].addEventListener(\"mouseleave\", function() {\n        console.log(\"leave\")\n      });\n      if (param) {\n        const newImages = imgURLArray.filter(element => element.class === param);\n          const newImagesArrayLength = newImages ? newImages.length : -1;\n          legend[x].children[0].innerHTML = newImages[x % newImagesArrayLength].titre;\n        } else {\n          legend[x].children[0].innerHTML = imgURLArray[x % imgURLArrayLength].titre;\n        }\n      }\n\n      gsap.set(rowSelector, {\n        position: \"absolute\"\n      });\n    }\n\n    createDraggable() {\n      let options = {\n        trigger: \".mask\",\n        dragResistance: 0.4,\n        resistance: 400,\n        onDrag: this.updateCenterElem,\n        onHover: e => {\n          // Get the elements underneath the click\n          const clicked = document.elementsFromPoint(e.pageX, e.pageY);\n\n          clicked.forEach(elem => {\n            // If the one(s) you want are clicked, do stuff\n            if(elem.matches(\".sliderImage\")) {\n              console.log(\"to\", elem)\n            }\n          });\n        },\n        onClick: e => {\n          // Get the elements underneath the click\n          const clicked = document.elementsFromPoint(e.pageX, e.pageY);\n\n          clicked.forEach(elem => {\n            // If the one(s) you want are clicked, do stuff\n            if(elem.matches(\".sliderImage\")) {\n              console.log(\"to\", elem)\n            }\n          });\n        },\n      }\n\n      if(useInertia) {\n        options.inertia = true;\n        options.onThrowUpdate = this.updateCenterElem;\n\n        if(useCenterGrid) {\n          options.onThrowComplete = this.centerGrid;\n        }\n} else if(useCenterGrid) { // No inertia\n  options.onDragEnd = this.centerGrid;\n}\n  document.querySelector(\".mask\").addEventListener(\"mousemove\", (e) => {\n    const hover = document.elementsFromPoint(e.pageX, e.pageY);\n\n    hover.forEach(elem => {\n              // If the one(s) you want are clicked, do stuff\n              if(elem.matches(\".sliderImage\")) {\n                document.querySelector(\".mask\").style.cursor = \"pointer\";\n                console.log(\"toto\")\n              } else {\n                document.querySelector(\".mask\").style.cursor = \"grab\";\n                console.log(\"toto\")\n              }\n    });\n  }, {once : false});\nreturn Draggable.create(containerSelector, options);\n}\n\nmouseMove = e => {\n  TweenLite.to(this.myRef.current, 0.5, {\n    css: {\n      left: e.pageX,\n      top: e.pageY\n    },\n    delay: 0.03\n  });\n};\n\nchangeBackground(e) {\n  e.target.style.background = 'red';\n}\n\nhandleMouseEnter = () => {\n  TweenLite.to(this.myRef.current, 0, {\n    css: {\n      opacity: \"1\"\n    }\n  });\n};\n\nhandleMouseLeave = () => {\n  TweenLite.to(this.myRef.current, 0, {\n    css: {\n      opacity: \"0\"\n    }\n  });\n};\n\nonHover = e => {\n  if (e.target.className === \"lib__item\") {\n    TweenLite.to(this.myRef.current, 0, {\n      css: { \"background-image\": \"url(\" + image1 + \")\" }\n    });\n  }\n  if (e.target.className === \"project p-2\") {\n    TweenLite.to(this.myRef.current, 0, {\n      css: { \"background-image\": \"url(\" + image2 + \")\" }\n    });\n  }\n  if (e.target.className === \"project p-3\") {\n    TweenLite.to(this.myRef.current, 0, {\n      css: { \"background-image\": \"url(\" + image3 + \")\" }\n    });\n  }\n  if (e.target.className === \"project p-4\") {\n    TweenLite.to(this.myRef.current, 0, {\n      css: { \"background-image\": \"url(\" + image4 + \")\" }\n    });\n  }\n};\n\nrender() {\n  const dragInfo = {\n    position: 'absolute', \n    bottom: '20%',\n  };\n  const initialCoordinates = [48.8566, 2.3522];\n  return (\n  <React.Fragment>\n  {\n    this.state.show? \n    <aside className=\"navAside\">\n    <div className=\"contentAside\" style={{transform: \"translate3d(0px, 0%, 0px)\"}}>\n    <div>\n    <div className=\"delete\">\n    <div>\n    <svg className=\"\" viewBox=\"0 0 12 12\" onClick={() => {this.setState({show:!this.state.show})}}>\n    <path fillRule=\"evenodd\" clipRule=\"evenodd\" fill=\"black\" d=\"M10.6666 11.9988L11.9999 10.6655L7.33363 5.99922L11.9998 1.33307L10.6665 -0.000240447L6.00032 4.66591L1.33343 -0.000976562L0.000117558 1.33233L4.66701 5.99922L0 10.6662L1.33331 11.9995L6.00032 7.33253L10.6666 11.9988Z\">\n    </path>\n    </svg>\n    </div>\n    </div>\n    <nav>\n    <ul>\n    <li className=\"listAside\">\n    <a data-title=\"all\" style={{opacity: \"1\"}} onClick={() => {this.onFilterChange(\"*\")}}>\n    <div>le monde\n    </div>\n    </a>\n    </li>\n    <li className=\"listAside\">\n    <a data-title=\"irlande\" style={{opacity: \"1\"}} onClick={() => {this.onFilterChange(\"irlande\")}}>\n      <div>Irlande\n      </div>\n      </a>\n      </li>\n      <li className=\"listAside\">\n      <a data-title=\"italie\" style={{opacity: \"1\"}} onClick={() => {this.onFilterChange(\"italie\")}}>\n      <div>Italie\n      </div>\n      </a>\n      </li>\n      </ul>\n      </nav>\n      </div>\n      </div>\n      </aside> : null\n    }\n    <div style={{\n      position: \"absolute\",\n      right: \"-12vw\",\n      zIndex: \"0\",\n      top: \"-15vw\",\n    }} >\n    <ReactGlobe\n    cameraOptions={{\n      autoRotateSpeed: 1,\n      enableAutoRotate: true,\n      enableRotate: true,\n      rotateSpeed: 0.5,\n    }}\n    size={[600, 600]}\n    initialCoordinates={initialCoordinates}\n    globeOptions={{\n      enableClouds: false,\n      enableGlow: true,\n      enableBackground: false,\n      texture: globe,\n    }}\n    />\n    </div>\n    <nav className=\"navFiltre\">\n    <a href=\"/nous\">\n    <span style={{transitionDelay: \"0.5s\"}}>Nous</span>\n    </a>\n    <span style={{transitionDelay: \"0.6s\"}}> </span>\n    <span style={{transitionDelay: \"0.65s\"}}>a</span>\n    <span style={{transitionDelay: \"0.7s\"}}>v</span>\n    <span style={{transitionDelay: \"0.75s\"}}>o</span>\n    <span style={{transitionDelay: \"0.8s\"}}>n</span>\n    <span style={{transitionDelay: \"0.85s\"}}>s</span>\n    <span style={{transitionDelay: \"0.9s\"}}> </span>\n    <span style={{transitionDelay: \"0.95s\"}}>v</span>\n    <span style={{transitionDelay: \"1s\"}}>o</span>\n    <span style={{transitionDelay: \"1.05s\"}}>y</span>\n    <span style={{transitionDelay: \"1.1s\"}}>a</span>\n    <span style={{transitionDelay: \"1.15s\"}}>g</span>\n    <span style={{transitionDelay: \"1.2s\"}}>Ã©</span>\n    <span style={{transitionDelay: \"1.25s\"}}> </span>\n    <span style={{transitionDelay: \"1.3s\"}}>d</span>\n    <span style={{transitionDelay: \"1.35s\"}}>a</span>\n    <span style={{transitionDelay: \"1.35s\"}}>n</span>\n    <span style={{transitionDelay: \"1.35s\"}}>s</span>\n    <button onClick={() => {this.setState({show:!this.state.show})}}>\n    <div>\n    </div>\n    <span style={{transitionDelay: \"1.4s\"}}>l</span>\n    <span style={{transitionDelay: \"1.4s\"}}>e</span>\n    <span style={{transitionDelay: \"1.4s\"}}> </span>\n    <span style={{transitionDelay: \"1.4s\"}}>m</span>\n    <span style={{transitionDelay: \"1.45s\"}}>o</span>\n    <span style={{transitionDelay: \"1.5s\"}}>n</span>\n    <span style={{transitionDelay: \"1.55s\"}}>d</span>\n    <span style={{transitionDelay: \"1.6s\"}}>e</span>\n    </button>\n    </nav>\n    <div className=\"Container__wrapper Container__center\">\n    <div style={{zIndex: \"1\"}}>\n    <div className=\"Intro__wrapper\">\n    <h1 className=\"Heading__wrapper styles__font-size-xl styles__font-family-serif-bold Intro__title\">Nos voyagesð</h1>\n    <div className=\"Heading__wrapper styles__font-size-sm Intro__desc\">Retrouvez ici toutes les villes que nous avons visitÃ©.</div>\n    </div>\n    </div>\n    <div className=\"Container__wrapper Container__absolute Container__center\">\n    </div>\n    <div className=\"Container__wrapper Container__absolute Container__center\">\n    <div className=\"Heading__wrapper styles__font-size-xs\" style={dragInfo}>DRAG POUR EXPLORER</div>\n    <div id=\"imageContainer\" className=\"filter-container\">\n    </div>\n    </div>\n    </div>\n    </React.Fragment>\n    );\n  }\n}\n\nexport default projectList;\n"]},"metadata":{},"sourceType":"module"}