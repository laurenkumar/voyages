{"ast":null,"code":"import React, { useState, useEffect, useRef } from 'react';\nimport { scaleLinear } from 'd3-scale';\nimport { Tween, Easing, update } from 'es6-tween';\nimport { TextureLoader, SphereGeometry, MeshLambertMaterial, MeshBasicMaterial, BackSide, Color, Mesh, BoxGeometry, Vector3, WebGLRenderer, PerspectiveCamera, AmbientLight, PointLight, Group, Scene } from 'three';\nimport { createGlowMesh } from 'three-glow-mesh';\nimport OrbitControls from 'three-orbitcontrols';\nimport { Interaction } from 'three.interaction';\nimport tippy from 'tippy.js';\nimport ResizeObserver from 'resize-observer-polyfill';\nvar ObjectName;\n\n(function (ObjectName) {\n  ObjectName[\"Camera\"] = \"CAMERA\";\n  ObjectName[\"CameraAmbientLight\"] = \"CAMERA_AMBIENT_LIGHT\";\n  ObjectName[\"CameraPointLight\"] = \"CAMERA_POINT_LIGHT\";\n  ObjectName[\"Globe\"] = \"GLOBE\";\n  ObjectName[\"GlobeBackground\"] = \"GLOBE_BACKGROUND\";\n  ObjectName[\"GlobeClouds\"] = \"GLOBE_CLOUDS\";\n  ObjectName[\"GlobeGlow\"] = \"GLOBE_GLOW\";\n  ObjectName[\"GlobeSphere\"] = \"GLOBE_SPHERE\";\n  ObjectName[\"MarkerObjects\"] = \"MARKER_OBJECTS\";\n  ObjectName[\"Scene\"] = \"SCENE\";\n})(ObjectName || (ObjectName = {}));\n\nvar MarkerType;\n\n(function (MarkerType) {\n  MarkerType[\"Bar\"] = \"bar\";\n  MarkerType[\"Dot\"] = \"dot\";\n})(MarkerType || (MarkerType = {})); // hardcoded constants that can eventually be exposed via options\n\n\nvar RADIUS = 300;\nvar BACKGROUND_RADIUS_SCALE = 10;\nvar CAMERA_FAR = RADIUS * 100;\nvar CAMERA_FOV = 45;\nvar CAMERA_NEAR = 1;\nvar CAMERA_DAMPING_FACTOR = 0.1;\nvar CAMERA_MAX_POLAR_ANGLE = Math.PI;\nvar CAMERA_MIN_POLAR_ANGLE = 0;\nvar CAMERA_MIN_DISTANCE_RADIUS_SCALE = 1.1;\nvar CLOUDS_RADIUS_OFFSET = 1;\nvar GLOBE_SEGMENTS = 50;\nvar INITIAL_COORDINATES = [37.773972, -122.431297];\nvar MARKER_DEFAULT_COLOR = 'gold';\nvar MARKER_SEGMENTS = 10;\nvar MARKER_UNIT_RADIUS_SCALE = 0.01;\nvar MARKER_ACTIVE_ANIMATION_DURATION = 100;\nvar MARKER_ACTIVE_ANIMATION_EASING_FUNCTION = ['Cubic', 'In'];\nvar defaultCameraOptions = {\n  autoRotateSpeed: 0.1,\n  distanceRadiusScale: 3,\n  enableAutoRotate: true,\n  enableRotate: true,\n  enableZoom: true,\n  maxDistanceRadiusScale: 4,\n  maxPolarAngle: CAMERA_MAX_POLAR_ANGLE,\n  minPolarAngle: CAMERA_MIN_POLAR_ANGLE,\n  rotateSpeed: 0.2,\n  zoomSpeed: 1\n};\nvar defaultFocusOptions = {\n  animationDuration: 1000,\n  distanceRadiusScale: 1.5,\n  easingFunction: ['Cubic', 'Out'],\n  enableDefocus: true\n};\nvar defaultGlobeOptions = {\n  backgroundTexture: 'https://raw.githubusercontent.com/chrisrzhou/react-globe/master/textures/background.png',\n  cloudsOpacity: 0.3,\n  cloudsTexture: 'https://raw.githubusercontent.com/chrisrzhou/react-globe/master/textures/clouds.png',\n  enableBackground: true,\n  enableClouds: true,\n  enableGlow: true,\n  glowCoefficient: 0.1,\n  glowColor: '#d1d1d1',\n  glowPower: 3,\n  glowRadiusScale: 0.2,\n  texture: 'https://raw.githubusercontent.com/chrisrzhou/react-globe/master/textures/globe.jpg'\n};\nvar defaultLightOptions = {\n  ambientLightColor: 'white',\n  ambientLightIntensity: 0.8,\n  pointLightColor: 'white',\n  pointLightIntensity: 1,\n  pointLightPositionRadiusScales: [-2, 1, -1]\n};\nvar defaultDotMarkerOptions = {\n  activeScale: 1.3,\n  enableGlow: true,\n  enableTooltip: true,\n  enterAnimationDuration: 1000,\n  enterEasingFunction: ['Linear', 'None'],\n  exitAnimationDuration: 500,\n  exitEasingFunction: ['Cubic', 'Out'],\n  getTooltipContent: function (marker) {\n    return JSON.stringify(marker.coordinates);\n  },\n  glowCoefficient: 0,\n  glowPower: 3,\n  glowRadiusScale: 2,\n  radiusScaleRange: [0.005, 0.02],\n  type: MarkerType.Dot\n};\nvar defaultBarMarkerOptions = {\n  activeScale: 1.02,\n  enableGlow: false,\n  enableTooltip: true,\n  enterAnimationDuration: 2000,\n  enterEasingFunction: ['Linear', 'None'],\n  exitAnimationDuration: 1000,\n  exitEasingFunction: ['Cubic', 'Out'],\n  getTooltipContent: function (marker) {\n    return JSON.stringify(marker.coordinates);\n  },\n  glowCoefficient: 0,\n  glowPower: 3,\n  glowRadiusScale: 2,\n  offsetRadiusScale: 0,\n  radiusScaleRange: [0.2, defaultFocusOptions.distanceRadiusScale - 1],\n  type: MarkerType.Bar\n};\nvar defaultMarkerOptions = defaultDotMarkerOptions;\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n\n  for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];\n\n  return r;\n}\n\nvar TOOLTIP_OFFSET = 10;\n\nvar Tooltip =\n/** @class */\nfunction () {\n  function Tooltip(div) {\n    this.div = div;\n    this.instance = tippy(this.div, {\n      animation: 'scale'\n    });\n  }\n\n  Tooltip.prototype.destroy = function () {\n    this.instance.destroy();\n  };\n\n  Tooltip.prototype.hide = function () {\n    document.body.style.cursor = 'inherit';\n    this.div.style.position = 'fixed';\n    this.div.style.left = '0';\n    this.div.style.top = '0';\n    this.instance.hide();\n  };\n\n  Tooltip.prototype.show = function (clientX, clientY, content) {\n    document.body.style.cursor = 'pointer';\n    this.div.style.position = 'fixed';\n    this.div.style.left = clientX + TOOLTIP_OFFSET + \"px\";\n    this.div.style.top = clientY + TOOLTIP_OFFSET + \"px\";\n    this.instance.setContent(content);\n    this.instance.show();\n  };\n\n  return Tooltip;\n}();\n\nfunction coordinatesToPosition(coordinates, radius) {\n  var lat = coordinates[0],\n      long = coordinates[1];\n  var phi = lat * Math.PI / 180;\n  var theta = (long - 180) * Math.PI / 180;\n  var x = -radius * Math.cos(phi) * Math.cos(theta);\n  var y = radius * Math.sin(phi);\n  var z = radius * Math.cos(phi) * Math.sin(theta);\n  return [x, y, z];\n}\n\nfunction getMarkerCoordinatesKey(marker) {\n  return marker.coordinates.toString();\n}\n\nfunction maxValue(array, callback) {\n  var maxValue = 0;\n  array.forEach(function (item) {\n    if (callback(item) > maxValue) {\n      maxValue = callback(item);\n    }\n  });\n  return maxValue;\n}\n\nfunction minValue(array, callback) {\n  var minValue = Infinity;\n  array.forEach(function (item) {\n    if (callback(item) < minValue) {\n      minValue = callback(item);\n    }\n  });\n  return minValue;\n}\n\nfunction tween(from, to, animationDuration, easingFunction, onUpdate, onEnd) {\n  new Tween(from).to(to, animationDuration).easing(Easing[easingFunction[0]][easingFunction[1]]).on('update', onUpdate).on('complete', onEnd).start();\n}\n\nvar emptyFunction = function () {};\n\nvar defaultCallbacks = {\n  onClickMarker: emptyFunction,\n  onDefocus: emptyFunction,\n  onMouseOutMarker: emptyFunction,\n  onMouseOverMarker: emptyFunction,\n  onTextureLoaded: emptyFunction\n};\nvar defaultOptions = {\n  camera: defaultCameraOptions,\n  globe: defaultGlobeOptions,\n  focus: defaultFocusOptions,\n  marker: defaultMarkerOptions,\n  light: defaultLightOptions\n};\n\nvar Globe =\n/** @class */\nfunction () {\n  function Globe(canvas, tooltipDiv) {\n    var _this = this; // create objects\n\n\n    var renderer = new WebGLRenderer({\n      alpha: true,\n      antialias: true,\n      canvas: canvas\n    });\n    var camera = new PerspectiveCamera();\n    var cameraAmbientLight = new AmbientLight('white');\n    var cameraPointLight = new PointLight('white');\n    var globe = new Group();\n    var globeBackground = new Mesh();\n    var globeClouds = new Mesh();\n    var globeSphere = new Mesh();\n    var markerObjects = new Group();\n    var orbitControls = new OrbitControls(camera, renderer.domElement);\n    var scene = new Scene();\n    var tooltip = new Tooltip(tooltipDiv); // name objects\n\n    camera.name = ObjectName.Camera;\n    cameraAmbientLight.name = ObjectName.CameraAmbientLight;\n    cameraPointLight.name = ObjectName.CameraPointLight;\n    globe.name = ObjectName.Globe;\n    globeBackground.name = ObjectName.GlobeBackground;\n    globeClouds.name = ObjectName.GlobeClouds;\n    globeSphere.name = ObjectName.GlobeSphere;\n    markerObjects.name = ObjectName.MarkerObjects;\n    scene.name = ObjectName.Scene; // add objects to scene\n\n    camera.add(cameraAmbientLight);\n    camera.add(cameraPointLight);\n    globe.add(globeBackground);\n    globe.add(globeClouds);\n    globe.add(globeSphere);\n    scene.add(markerObjects);\n    scene.add(camera);\n    scene.add(globe); // add interactions to scene\n\n    new Interaction(renderer, scene, camera);\n    scene.on('mousemove', function (event) {\n      if (_this.isFocusing()) {\n        return;\n      }\n\n      if (_this.activeMarker) {\n        var activeScale = _this.options.marker.activeScale;\n        var from_1 = [activeScale, activeScale, activeScale];\n        tween(from_1, [1, 1, 1], MARKER_ACTIVE_ANIMATION_DURATION, MARKER_ACTIVE_ANIMATION_EASING_FUNCTION, function () {\n          var _a;\n\n          if (_this.activeMarkerObject) {\n            (_a = _this.activeMarkerObject.scale).set.apply(_a, from_1);\n          }\n        }, function () {\n          _this.activeMarker = undefined;\n          _this.activeMarkerObject = undefined;\n        });\n\n        _this.callbacks.onMouseOutMarker(_this.activeMarker, _this.activeMarkerObject, event.data.originalEvent);\n\n        _this.tooltip.hide();\n      }\n    });\n    scene.on('click', function (event) {\n      if (_this.isFocusing()) {\n        return;\n      }\n\n      if (_this.options.focus.enableDefocus && _this.preFocusPosition) {\n        _this.callbacks.onDefocus(_this.focus, event.data.originalEvent);\n\n        _this.updateFocus(undefined, _this.options.focus);\n      }\n    }); // assign values to class variables\n\n    this.activeMarker = undefined;\n    this.activeMarkerObject = undefined;\n    this.animationFrameId = undefined;\n    this.callbacks = defaultCallbacks;\n    this.camera = camera;\n    this.focus = undefined;\n    this.globe = globe;\n    this.isFrozen = false;\n    this.markerObjects = markerObjects;\n    this.options = defaultOptions;\n    this.orbitControls = orbitControls;\n    this.preFocusPosition = undefined;\n    this.renderer = renderer;\n    this.scene = scene;\n    this.tooltip = tooltip; // update objects\n\n    this.updateCallbacks();\n    this.updateCamera();\n    this.updateFocus();\n    this.updateGlobe({\n      enableBackground: false,\n      enableClouds: false\n    });\n    this.updateLights();\n    this.updateMarkers();\n    this.updateSize();\n  }\n\n  Globe.prototype.animate = function () {\n    this.render();\n    this.animationFrameId = requestAnimationFrame(this.animate.bind(this));\n  }; // TODO: expose a way to customize animating clouds in every axis\n\n\n  Globe.prototype.animateClouds = function () {\n    var globeClouds = this.getObjectByName(ObjectName.GlobeClouds);\n    ['x', 'y', 'z'].forEach(function (axis) {\n      globeClouds.rotation[axis] += Math.random() / 10000;\n    });\n  }; // For each animation, update the focus and focusOptions provided by the animation over an array of timeouts\n\n\n  Globe.prototype.applyAnimations = function (animations) {\n    var _this = this;\n\n    var currentFocus = this.focus;\n    var currentFocusOptions = this.options.focus;\n    var wait = 0;\n    var timeouts = [];\n    animations.forEach(function (animation) {\n      var animationDuration = animation.animationDuration,\n          coordinates = animation.coordinates,\n          distanceRadiusScale = animation.distanceRadiusScale,\n          easingFunction = animation.easingFunction;\n      var timeout = setTimeout(function () {\n        _this.updateFocus(coordinates, {\n          animationDuration: animationDuration,\n          distanceRadiusScale: distanceRadiusScale,\n          easingFunction: easingFunction\n        }, true);\n      }, wait);\n      timeouts.push(timeout);\n      wait += animationDuration;\n    }); // return cleanup function\n\n    return function () {\n      timeouts.forEach(function (timeout) {\n        clearTimeout(timeout);\n      });\n\n      _this.updateFocus(currentFocus, currentFocusOptions);\n    };\n  };\n\n  Globe.prototype.destroy = function () {\n    cancelAnimationFrame(this.animationFrameId);\n    this.tooltip.destroy();\n  };\n\n  Globe.prototype.enableOrbitControls = function (enabled, autoRotate) {\n    if (autoRotate === void 0) {\n      autoRotate = enabled;\n    }\n\n    this.orbitControls.enabled = enabled;\n    this.orbitControls.autoRotate = autoRotate;\n  };\n\n  Globe.prototype.freeze = function () {\n    this.isFrozen = true;\n    this.enableOrbitControls(false);\n    cancelAnimationFrame(this.animationFrameId);\n  };\n\n  Globe.prototype.getObjectByName = function (name) {\n    return this.scene.getObjectByName(name);\n  };\n\n  Globe.prototype.isFocusing = function () {\n    return !this.orbitControls.enabled;\n  };\n\n  Globe.prototype.render = function () {\n    this.renderer.sortObjects = false;\n    this.renderer.render(this.scene, this.camera);\n    this.animateClouds();\n    this.orbitControls.update();\n    update();\n  };\n\n  Globe.prototype.updateCallbacks = function (callbacks) {\n    var _this = this;\n\n    if (callbacks === void 0) {\n      callbacks = {};\n    }\n\n    Object.keys(defaultCallbacks).forEach(function (key) {\n      _this.callbacks[key] = callbacks[key] || defaultCallbacks[key];\n    });\n  };\n\n  Globe.prototype.updateCamera = function (initialCoordinates, cameraOptions) {\n    if (initialCoordinates === void 0) {\n      initialCoordinates = INITIAL_COORDINATES;\n    }\n\n    if (cameraOptions === void 0) {\n      cameraOptions = {};\n    }\n\n    this.updateOptions(cameraOptions, 'camera');\n    var _a = this.options.camera,\n        autoRotateSpeed = _a.autoRotateSpeed,\n        distanceRadiusScale = _a.distanceRadiusScale,\n        enableAutoRotate = _a.enableAutoRotate,\n        enableRotate = _a.enableRotate,\n        enableZoom = _a.enableZoom,\n        maxDistanceRadiusScale = _a.maxDistanceRadiusScale,\n        maxPolarAngle = _a.maxPolarAngle,\n        minPolarAngle = _a.minPolarAngle,\n        rotateSpeed = _a.rotateSpeed,\n        zoomSpeed = _a.zoomSpeed;\n\n    if (this.initialCoordinates !== initialCoordinates) {\n      var _b = coordinatesToPosition(initialCoordinates, RADIUS * distanceRadiusScale),\n          x = _b[0],\n          y = _b[1],\n          z = _b[2];\n\n      this.camera.position.set(x, y, z);\n      this.initialCoordinates = initialCoordinates;\n    }\n\n    this.camera.far = CAMERA_FAR;\n    this.camera.fov = CAMERA_FOV;\n    this.camera.near = CAMERA_NEAR;\n    this.orbitControls.autoRotate = enableAutoRotate;\n    this.orbitControls.autoRotateSpeed = autoRotateSpeed;\n    this.orbitControls.dampingFactor = CAMERA_DAMPING_FACTOR;\n    this.orbitControls.enableDamping = true;\n    this.orbitControls.enablePan = false;\n    this.orbitControls.enableRotate = enableRotate;\n    this.orbitControls.enableZoom = enableZoom;\n    this.orbitControls.maxDistance = RADIUS * maxDistanceRadiusScale;\n    this.orbitControls.maxPolarAngle = maxPolarAngle;\n    this.orbitControls.minDistance = RADIUS * CAMERA_MIN_DISTANCE_RADIUS_SCALE;\n    this.orbitControls.minPolarAngle = minPolarAngle;\n    this.orbitControls.rotateSpeed = rotateSpeed;\n    this.orbitControls.zoomSpeed = zoomSpeed;\n  };\n\n  Globe.prototype.updateFocus = function (focus, focusOptions, autoDefocus) {\n    var _this = this;\n\n    if (focusOptions === void 0) {\n      focusOptions = {};\n    }\n\n    if (autoDefocus === void 0) {\n      autoDefocus = false;\n    }\n\n    this.updateOptions(focusOptions, 'focus');\n    this.focus = focus;\n    var _a = this.options.focus,\n        animationDuration = _a.animationDuration,\n        distanceRadiusScale = _a.distanceRadiusScale,\n        easingFunction = _a.easingFunction;\n\n    if (this.isFrozen) {\n      return;\n    }\n\n    if (this.focus) {\n      // disable orbit controls when focused\n      var from_2 = [this.camera.position.x, this.camera.position.y, this.camera.position.z];\n      var to = coordinatesToPosition(this.focus, RADIUS * distanceRadiusScale);\n      this.preFocusPosition = this.preFocusPosition || __spreadArrays(from_2);\n      tween(from_2, to, animationDuration, easingFunction, function () {\n        var _a;\n\n        _this.enableOrbitControls(false);\n\n        (_a = _this.camera.position).set.apply(_a, from_2);\n      }, function () {\n        if (autoDefocus) {\n          _this.focus = undefined;\n          _this.preFocusPosition = undefined;\n        }\n\n        _this.enableOrbitControls(true, autoDefocus);\n      });\n    } else {\n      if (this.preFocusPosition) {\n        var from_3 = [this.camera.position.x, this.camera.position.y, this.camera.position.z];\n        var to = this.preFocusPosition;\n        tween(from_3, to, animationDuration, easingFunction, function () {\n          var _a;\n\n          _this.enableOrbitControls(false);\n\n          (_a = _this.camera.position).set.apply(_a, from_3);\n        }, function () {\n          _this.preFocusPosition = undefined;\n\n          _this.enableOrbitControls(true);\n        });\n      }\n    }\n  };\n\n  Globe.prototype.updateGlobe = function (globeOptions) {\n    var _this = this;\n\n    if (globeOptions === void 0) {\n      globeOptions = {};\n    }\n\n    this.updateOptions(globeOptions, 'globe');\n    var _a = this.options.globe,\n        backgroundTexture = _a.backgroundTexture,\n        cloudsOpacity = _a.cloudsOpacity,\n        cloudsTexture = _a.cloudsTexture,\n        enableBackground = _a.enableBackground,\n        enableClouds = _a.enableClouds,\n        enableGlow = _a.enableGlow,\n        glowColor = _a.glowColor,\n        glowCoefficient = _a.glowCoefficient,\n        glowPower = _a.glowPower,\n        glowRadiusScale = _a.glowRadiusScale,\n        texture = _a.texture;\n    var globeBackground = this.getObjectByName(ObjectName.GlobeBackground);\n    var globeClouds = this.getObjectByName(ObjectName.GlobeClouds);\n    var globeSphere = this.getObjectByName(ObjectName.GlobeSphere);\n    new TextureLoader().load(texture, function (map) {\n      globeSphere.geometry = new SphereGeometry(RADIUS, GLOBE_SEGMENTS, GLOBE_SEGMENTS);\n      globeSphere.material = new MeshLambertMaterial({\n        map: map\n      });\n\n      if (enableGlow) {\n        globeSphere.remove(_this.getObjectByName(ObjectName.GlobeGlow));\n        var globeGlow = createGlowMesh(globeSphere.geometry, {\n          backside: true,\n          color: glowColor,\n          coefficient: glowCoefficient,\n          power: glowPower,\n          size: RADIUS * glowRadiusScale\n        });\n        globeGlow.name = ObjectName.GlobeGlow;\n        globeSphere.add(globeGlow);\n      }\n\n      _this.callbacks.onTextureLoaded();\n    });\n\n    if (enableBackground) {\n      new TextureLoader().load(backgroundTexture, function (map) {\n        globeBackground.geometry = new SphereGeometry(RADIUS * BACKGROUND_RADIUS_SCALE, GLOBE_SEGMENTS, GLOBE_SEGMENTS);\n        globeBackground.material = new MeshBasicMaterial({\n          map: map,\n          side: BackSide\n        });\n      });\n    }\n\n    if (enableClouds) {\n      new TextureLoader().load(cloudsTexture, function (map) {\n        globeClouds.geometry = new SphereGeometry(RADIUS + CLOUDS_RADIUS_OFFSET, GLOBE_SEGMENTS, GLOBE_SEGMENTS);\n        globeClouds.material = new MeshLambertMaterial({\n          map: map,\n          transparent: true\n        });\n        globeClouds.material.opacity = cloudsOpacity;\n      });\n    }\n  };\n\n  Globe.prototype.updateLights = function (lightOptions) {\n    if (lightOptions === void 0) {\n      lightOptions = {};\n    }\n\n    this.updateOptions(lightOptions, 'light');\n    var _a = this.options.light,\n        ambientLightColor = _a.ambientLightColor,\n        ambientLightIntensity = _a.ambientLightIntensity,\n        pointLightColor = _a.pointLightColor,\n        pointLightIntensity = _a.pointLightIntensity,\n        pointLightPositionRadiusScales = _a.pointLightPositionRadiusScales;\n    var cameraAmbientLight = this.getObjectByName(ObjectName.CameraAmbientLight);\n    var cameraPointLight = this.getObjectByName(ObjectName.CameraPointLight);\n    cameraAmbientLight.color = new Color(ambientLightColor);\n    cameraAmbientLight.intensity = ambientLightIntensity;\n    cameraPointLight.color = new Color(pointLightColor);\n    cameraPointLight.intensity = pointLightIntensity;\n    cameraPointLight.position.set(RADIUS * pointLightPositionRadiusScales[0], RADIUS * pointLightPositionRadiusScales[1], RADIUS * pointLightPositionRadiusScales[2]);\n  };\n\n  Globe.prototype.updateMarkers = function (markers, markerOptions) {\n    var _this = this;\n\n    if (markers === void 0) {\n      markers = [];\n    }\n\n    if (markerOptions === void 0) {\n      markerOptions = {};\n    }\n\n    this.updateOptions(markerOptions, 'marker');\n    var _a = this.options.marker,\n        activeScale = _a.activeScale,\n        enableGlow = _a.enableGlow,\n        enableTooltip = _a.enableTooltip,\n        enterAnimationDuration = _a.enterAnimationDuration,\n        enterEasingFunction = _a.enterEasingFunction,\n        exitAnimationDuration = _a.exitAnimationDuration,\n        exitEasingFunction = _a.exitEasingFunction,\n        getTooltipContent = _a.getTooltipContent,\n        glowCoefficient = _a.glowCoefficient,\n        glowPower = _a.glowPower,\n        glowRadiusScale = _a.glowRadiusScale,\n        offsetRadiusScale = _a.offsetRadiusScale,\n        radiusScaleRange = _a.radiusScaleRange,\n        renderer = _a.renderer,\n        type = _a.type;\n    var unitRadius = RADIUS * MARKER_UNIT_RADIUS_SCALE;\n    var sizeScale = scaleLinear().domain([minValue(markers, function (marker) {\n      return marker.value;\n    }), maxValue(markers, function (marker) {\n      return marker.value;\n    })]).range([RADIUS * radiusScaleRange[0], RADIUS * radiusScaleRange[1]]);\n    var markerCoordinatesKeys = new Set(markers.map(getMarkerCoordinatesKey));\n    var markerObjectNames = new Set(this.markerObjects.children.map(function (markerObject) {\n      return markerObject.name;\n    }));\n    markers.forEach(function (marker) {\n      var _a;\n\n      var coordinates = marker.coordinates,\n          value = marker.value;\n      var markerCoordinatesKey = getMarkerCoordinatesKey(marker);\n      var size = sizeScale(value);\n      var markerObject; // create new marker objects\n\n      if (!markerObjectNames.has(markerCoordinatesKey)) {\n        if (renderer !== undefined) {\n          markerObject = renderer(marker);\n        } else {\n          var color_1 = marker.color || MARKER_DEFAULT_COLOR;\n          var from_4 = {\n            size: 0\n          };\n          var to = {\n            size: size\n          };\n          var mesh_1 = new Mesh();\n          tween(from_4, to, enterAnimationDuration, enterEasingFunction, function () {\n            switch (type) {\n              case MarkerType.Bar:\n                mesh_1.geometry = new BoxGeometry(unitRadius, unitRadius, from_4.size);\n                mesh_1.material = new MeshLambertMaterial({\n                  color: color_1\n                });\n                break;\n\n              case MarkerType.Dot:\n              default:\n                mesh_1.geometry = new SphereGeometry(from_4.size, MARKER_SEGMENTS, MARKER_SEGMENTS);\n                mesh_1.material = new MeshBasicMaterial({\n                  color: color_1\n                });\n\n                if (enableGlow) {\n                  // add glow\n                  var glowMesh = createGlowMesh(mesh_1.geometry.clone(), {\n                    backside: false,\n                    color: color_1,\n                    coefficient: glowCoefficient,\n                    power: glowPower,\n                    size: from_4.size * glowRadiusScale\n                  });\n                  mesh_1.children = [];\n                  mesh_1.add(glowMesh);\n                }\n\n            }\n          });\n          markerObject = mesh_1;\n        } // place markers\n\n\n        var heightOffset = 0;\n\n        if (offsetRadiusScale !== undefined) {\n          heightOffset = RADIUS * offsetRadiusScale;\n        } else {\n          if (type === MarkerType.Dot) {\n            heightOffset = size * (1 + glowRadiusScale) / 2;\n          } else {\n            heightOffset = 0;\n          }\n        }\n\n        var position = coordinatesToPosition(coordinates, RADIUS + heightOffset);\n\n        (_a = markerObject.position).set.apply(_a, position);\n\n        markerObject.lookAt(new Vector3(0, 0, 0));\n        markerObject.name = markerCoordinatesKey;\n\n        _this.markerObjects.add(markerObject);\n      } // update existing marker objects\n\n\n      markerObject = _this.markerObjects.getObjectByName(markerCoordinatesKey);\n\n      var handleClick = function (event) {\n        event.stopPropagation();\n\n        _this.updateFocus(marker.coordinates);\n\n        _this.callbacks.onClickMarker(marker, markerObject, event.data.originalEvent);\n      };\n\n      markerObject.on('click', handleClick.bind(_this));\n      markerObject.on('touchstart', handleClick.bind(_this));\n      markerObject.on('mousemove', function (event) {\n        if (_this.isFocusing()) {\n          _this.tooltip.hide();\n\n          return;\n        }\n\n        event.stopPropagation();\n        var from = markerObject.scale.toArray();\n        tween(from, [activeScale, activeScale, activeScale], MARKER_ACTIVE_ANIMATION_DURATION, MARKER_ACTIVE_ANIMATION_EASING_FUNCTION, function () {\n          var _a;\n\n          if (markerObject) {\n            (_a = markerObject.scale).set.apply(_a, from);\n          }\n        });\n        var originalEvent = event.data.originalEvent;\n        _this.activeMarker = marker;\n        _this.activeMarkerObject = markerObject;\n\n        _this.callbacks.onMouseOverMarker(marker, markerObject, originalEvent);\n\n        if (enableTooltip) {\n          _this.tooltip.show(originalEvent.clientX, originalEvent.clientY, getTooltipContent(marker));\n        }\n      });\n    }); // remove marker objects that are stale\n\n    var markerObjectsToRemove = this.markerObjects.children.filter(function (markerObject) {\n      return !markerCoordinatesKeys.has(markerObject.name);\n    });\n    markerObjectsToRemove.forEach(function (markerObject) {\n      var from = markerObject.scale.toArray();\n      tween(from, [0, 0, 0], exitAnimationDuration, exitEasingFunction, function () {\n        var _a;\n\n        if (markerObject) {\n          (_a = markerObject.scale).set.apply(_a, from);\n        }\n      }, function () {\n        _this.markerObjects.remove(markerObject);\n      });\n    });\n  };\n\n  Globe.prototype.updateOptions = function (options, key) {\n    var _a;\n\n    this.options = __assign(__assign({}, defaultOptions), (_a = {}, _a[key] = __assign(__assign({}, defaultOptions[key]), options), _a));\n  };\n\n  Globe.prototype.updateSize = function (size) {\n    if (size) {\n      var width = size[0],\n          height = size[1];\n      this.renderer.setSize(width, height);\n      this.camera.aspect = width / height;\n    }\n\n    this.camera.updateProjectionMatrix();\n  };\n\n  Globe.prototype.unfreeze = function () {\n    if (this.isFrozen) {\n      this.isFrozen = false;\n      this.enableOrbitControls(true);\n      this.animate();\n    }\n  };\n\n  return Globe;\n}();\n\nfunction useResize(mountRef, initialSize) {\n  var _a = useState([0, 0]),\n      size = _a[0],\n      setSize = _a[1];\n\n  useEffect(function () {\n    var mount = mountRef.current; // update initial size\n\n    var width = 0;\n    var height = 0;\n\n    if (initialSize) {\n      // Use initialSize if it is provided\n      width = initialSize[0], height = initialSize[1];\n    } else {\n      // Use parentElement size if resized has not updated\n      width = mount.offsetWidth;\n      height = mount.offsetHeight;\n    }\n\n    setSize([width, height]); // update resize using a resize observer\n\n    var resizeObserver = new ResizeObserver(function (entries) {\n      if (!entries || !entries.length) {\n        return;\n      }\n\n      if (initialSize === undefined) {\n        var _a = entries[0].contentRect,\n            width_1 = _a.width,\n            height_1 = _a.height;\n        setSize([width_1, height_1]);\n      }\n    });\n    resizeObserver.observe(mount);\n    return function () {\n      resizeObserver.unobserve(mount);\n    };\n  }, [initialSize, mountRef]);\n  return size;\n}\n\nfunction ReactGlobe(_a) {\n  var animations = _a.animations,\n      cameraOptions = _a.cameraOptions,\n      focus = _a.focus,\n      focusOptions = _a.focusOptions,\n      globeOptions = _a.globeOptions,\n      lightOptions = _a.lightOptions,\n      initialCoordinates = _a.initialCoordinates,\n      markers = _a.markers,\n      markerOptions = _a.markerOptions,\n      onClickMarker = _a.onClickMarker,\n      onDefocus = _a.onDefocus,\n      onMouseOutMarker = _a.onMouseOutMarker,\n      onMouseOverMarker = _a.onMouseOverMarker,\n      onGetGlobeInstance = _a.onGetGlobeInstance,\n      onTextureLoaded = _a.onTextureLoaded,\n      initialSize = _a.size;\n  var canvasRef = useRef();\n  var globeInstanceRef = useRef();\n  var mountRef = useRef();\n  var tooltipRef = useRef();\n  var size = useResize(mountRef, initialSize); // init\n\n  useEffect(function () {\n    var mount = mountRef.current;\n    var globeInstance = new Globe(canvasRef.current, tooltipRef.current);\n    mount.appendChild(globeInstance.renderer.domElement);\n    globeInstance.animate();\n    globeInstanceRef.current = globeInstance;\n    onGetGlobeInstance && onGetGlobeInstance(globeInstance);\n    return function () {\n      mount.removeChild(globeInstance.renderer.domElement);\n      globeInstance.destroy();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // update callbacks\n\n  useEffect(function () {\n    globeInstanceRef.current.updateCallbacks({\n      onClickMarker: onClickMarker,\n      onDefocus: onDefocus,\n      onMouseOutMarker: onMouseOutMarker,\n      onMouseOverMarker: onMouseOverMarker,\n      onTextureLoaded: onTextureLoaded\n    });\n  }, [onClickMarker, onDefocus, onMouseOutMarker, onMouseOverMarker, onTextureLoaded]); // update camera\n\n  useEffect(function () {\n    globeInstanceRef.current.updateCamera(initialCoordinates, cameraOptions);\n  }, [cameraOptions, initialCoordinates]); // update focus\n\n  useEffect(function () {\n    globeInstanceRef.current.updateFocus(focus, focusOptions);\n  }, [focus, focusOptions]); // update globe\n\n  useEffect(function () {\n    globeInstanceRef.current.updateGlobe(globeOptions);\n  }, [globeOptions]); // update lights\n\n  useEffect(function () {\n    globeInstanceRef.current.updateLights(lightOptions);\n  }, [lightOptions]); // update markers\n\n  useEffect(function () {\n    globeInstanceRef.current.updateMarkers(markers, markerOptions);\n  }, [markerOptions, markers]); // apply animations\n\n  useEffect(function () {\n    return globeInstanceRef.current.applyAnimations(animations);\n  }, [animations]); // resize\n\n  useEffect(function () {\n    globeInstanceRef.current.updateSize(size);\n  }, [size]);\n  return React.createElement(\"div\", {\n    ref: mountRef,\n    style: {\n      height: '100%',\n      width: '100%'\n    }\n  }, React.createElement(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      display: 'block'\n    }\n  }), React.createElement(\"div\", {\n    ref: tooltipRef\n  }));\n}\n\nReactGlobe.defaultProps = {\n  animations: [],\n  cameraOptions: defaultCameraOptions,\n  focusOptions: defaultFocusOptions,\n  globeOptions: defaultGlobeOptions,\n  lightOptions: defaultLightOptions,\n  initialCoordinates: INITIAL_COORDINATES,\n  markers: [],\n  markerOptions: defaultMarkerOptions\n};\nexport default ReactGlobe;\nexport { BACKGROUND_RADIUS_SCALE, CAMERA_DAMPING_FACTOR, CAMERA_FAR, CAMERA_FOV, CAMERA_MAX_POLAR_ANGLE, CAMERA_MIN_DISTANCE_RADIUS_SCALE, CAMERA_MIN_POLAR_ANGLE, CAMERA_NEAR, CLOUDS_RADIUS_OFFSET, GLOBE_SEGMENTS, Globe, INITIAL_COORDINATES, MARKER_ACTIVE_ANIMATION_DURATION, MARKER_ACTIVE_ANIMATION_EASING_FUNCTION, MARKER_DEFAULT_COLOR, MARKER_SEGMENTS, MARKER_UNIT_RADIUS_SCALE, MarkerType, ObjectName, RADIUS, Tooltip, coordinatesToPosition, defaultBarMarkerOptions, defaultCameraOptions, defaultDotMarkerOptions, defaultFocusOptions, defaultGlobeOptions, defaultLightOptions, defaultMarkerOptions, getMarkerCoordinatesKey, maxValue, minValue, tween };","map":{"version":3,"sources":["/Users/uthaya/ourjourneys/node_modules/react-globe/dist/index.module.js"],"names":["React","useState","useEffect","useRef","scaleLinear","Tween","Easing","update","TextureLoader","SphereGeometry","MeshLambertMaterial","MeshBasicMaterial","BackSide","Color","Mesh","BoxGeometry","Vector3","WebGLRenderer","PerspectiveCamera","AmbientLight","PointLight","Group","Scene","createGlowMesh","OrbitControls","Interaction","tippy","ResizeObserver","ObjectName","MarkerType","RADIUS","BACKGROUND_RADIUS_SCALE","CAMERA_FAR","CAMERA_FOV","CAMERA_NEAR","CAMERA_DAMPING_FACTOR","CAMERA_MAX_POLAR_ANGLE","Math","PI","CAMERA_MIN_POLAR_ANGLE","CAMERA_MIN_DISTANCE_RADIUS_SCALE","CLOUDS_RADIUS_OFFSET","GLOBE_SEGMENTS","INITIAL_COORDINATES","MARKER_DEFAULT_COLOR","MARKER_SEGMENTS","MARKER_UNIT_RADIUS_SCALE","MARKER_ACTIVE_ANIMATION_DURATION","MARKER_ACTIVE_ANIMATION_EASING_FUNCTION","defaultCameraOptions","autoRotateSpeed","distanceRadiusScale","enableAutoRotate","enableRotate","enableZoom","maxDistanceRadiusScale","maxPolarAngle","minPolarAngle","rotateSpeed","zoomSpeed","defaultFocusOptions","animationDuration","easingFunction","enableDefocus","defaultGlobeOptions","backgroundTexture","cloudsOpacity","cloudsTexture","enableBackground","enableClouds","enableGlow","glowCoefficient","glowColor","glowPower","glowRadiusScale","texture","defaultLightOptions","ambientLightColor","ambientLightIntensity","pointLightColor","pointLightIntensity","pointLightPositionRadiusScales","defaultDotMarkerOptions","activeScale","enableTooltip","enterAnimationDuration","enterEasingFunction","exitAnimationDuration","exitEasingFunction","getTooltipContent","marker","JSON","stringify","coordinates","radiusScaleRange","type","Dot","defaultBarMarkerOptions","offsetRadiusScale","Bar","defaultMarkerOptions","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__spreadArrays","il","r","Array","k","a","j","jl","TOOLTIP_OFFSET","Tooltip","div","instance","animation","destroy","hide","document","body","style","cursor","position","left","top","show","clientX","clientY","content","setContent","coordinatesToPosition","radius","lat","long","phi","theta","x","cos","y","sin","z","getMarkerCoordinatesKey","toString","maxValue","array","callback","forEach","item","minValue","Infinity","tween","from","to","onUpdate","onEnd","easing","on","start","emptyFunction","defaultCallbacks","onClickMarker","onDefocus","onMouseOutMarker","onMouseOverMarker","onTextureLoaded","defaultOptions","camera","globe","focus","light","Globe","canvas","tooltipDiv","_this","renderer","alpha","antialias","cameraAmbientLight","cameraPointLight","globeBackground","globeClouds","globeSphere","markerObjects","orbitControls","domElement","scene","tooltip","name","Camera","CameraAmbientLight","CameraPointLight","GlobeBackground","GlobeClouds","GlobeSphere","MarkerObjects","add","event","isFocusing","activeMarker","options","from_1","_a","activeMarkerObject","scale","set","undefined","callbacks","data","originalEvent","preFocusPosition","updateFocus","animationFrameId","isFrozen","updateCallbacks","updateCamera","updateGlobe","updateLights","updateMarkers","updateSize","animate","render","requestAnimationFrame","bind","animateClouds","getObjectByName","axis","rotation","random","applyAnimations","animations","currentFocus","currentFocusOptions","wait","timeouts","timeout","setTimeout","push","clearTimeout","cancelAnimationFrame","enableOrbitControls","enabled","autoRotate","freeze","sortObjects","keys","key","initialCoordinates","cameraOptions","updateOptions","_b","far","fov","near","dampingFactor","enableDamping","enablePan","maxDistance","minDistance","focusOptions","autoDefocus","from_2","from_3","globeOptions","load","map","geometry","material","remove","GlobeGlow","globeGlow","backside","color","coefficient","power","size","side","transparent","opacity","lightOptions","intensity","markers","markerOptions","unitRadius","sizeScale","domain","value","range","markerCoordinatesKeys","Set","markerObjectNames","children","markerObject","markerCoordinatesKey","has","color_1","from_4","mesh_1","glowMesh","clone","heightOffset","lookAt","handleClick","stopPropagation","toArray","markerObjectsToRemove","filter","width","height","setSize","aspect","updateProjectionMatrix","unfreeze","useResize","mountRef","initialSize","mount","current","offsetWidth","offsetHeight","resizeObserver","entries","contentRect","width_1","height_1","observe","unobserve","ReactGlobe","onGetGlobeInstance","canvasRef","globeInstanceRef","tooltipRef","globeInstance","appendChild","removeChild","createElement","ref","display","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { scaleLinear } from 'd3-scale';\nimport { Tween, Easing, update } from 'es6-tween';\nimport { TextureLoader, SphereGeometry, MeshLambertMaterial, MeshBasicMaterial, BackSide, Color, Mesh, BoxGeometry, Vector3, WebGLRenderer, PerspectiveCamera, AmbientLight, PointLight, Group, Scene } from 'three';\nimport { createGlowMesh } from 'three-glow-mesh';\nimport OrbitControls from 'three-orbitcontrols';\nimport { Interaction } from 'three.interaction';\nimport tippy from 'tippy.js';\nimport ResizeObserver from 'resize-observer-polyfill';\n\nvar ObjectName;\r\n(function (ObjectName) {\r\n    ObjectName[\"Camera\"] = \"CAMERA\";\r\n    ObjectName[\"CameraAmbientLight\"] = \"CAMERA_AMBIENT_LIGHT\";\r\n    ObjectName[\"CameraPointLight\"] = \"CAMERA_POINT_LIGHT\";\r\n    ObjectName[\"Globe\"] = \"GLOBE\";\r\n    ObjectName[\"GlobeBackground\"] = \"GLOBE_BACKGROUND\";\r\n    ObjectName[\"GlobeClouds\"] = \"GLOBE_CLOUDS\";\r\n    ObjectName[\"GlobeGlow\"] = \"GLOBE_GLOW\";\r\n    ObjectName[\"GlobeSphere\"] = \"GLOBE_SPHERE\";\r\n    ObjectName[\"MarkerObjects\"] = \"MARKER_OBJECTS\";\r\n    ObjectName[\"Scene\"] = \"SCENE\";\r\n})(ObjectName || (ObjectName = {}));\r\nvar MarkerType;\r\n(function (MarkerType) {\r\n    MarkerType[\"Bar\"] = \"bar\";\r\n    MarkerType[\"Dot\"] = \"dot\";\r\n})(MarkerType || (MarkerType = {}));\n\n// hardcoded constants that can eventually be exposed via options\r\nvar RADIUS = 300;\r\nvar BACKGROUND_RADIUS_SCALE = 10;\r\nvar CAMERA_FAR = RADIUS * 100;\r\nvar CAMERA_FOV = 45;\r\nvar CAMERA_NEAR = 1;\r\nvar CAMERA_DAMPING_FACTOR = 0.1;\r\nvar CAMERA_MAX_POLAR_ANGLE = Math.PI;\r\nvar CAMERA_MIN_POLAR_ANGLE = 0;\r\nvar CAMERA_MIN_DISTANCE_RADIUS_SCALE = 1.1;\r\nvar CLOUDS_RADIUS_OFFSET = 1;\r\nvar GLOBE_SEGMENTS = 50;\r\nvar INITIAL_COORDINATES = [37.773972, -122.431297];\r\nvar MARKER_DEFAULT_COLOR = 'gold';\r\nvar MARKER_SEGMENTS = 10;\r\nvar MARKER_UNIT_RADIUS_SCALE = 0.01;\r\nvar MARKER_ACTIVE_ANIMATION_DURATION = 100;\r\nvar MARKER_ACTIVE_ANIMATION_EASING_FUNCTION = [\r\n    'Cubic',\r\n    'In',\r\n];\r\nvar defaultCameraOptions = {\r\n    autoRotateSpeed: 0.1,\r\n    distanceRadiusScale: 3,\r\n    enableAutoRotate: true,\r\n    enableRotate: true,\r\n    enableZoom: true,\r\n    maxDistanceRadiusScale: 4,\r\n    maxPolarAngle: CAMERA_MAX_POLAR_ANGLE,\r\n    minPolarAngle: CAMERA_MIN_POLAR_ANGLE,\r\n    rotateSpeed: 0.2,\r\n    zoomSpeed: 1,\r\n};\r\nvar defaultFocusOptions = {\r\n    animationDuration: 1000,\r\n    distanceRadiusScale: 1.5,\r\n    easingFunction: ['Cubic', 'Out'],\r\n    enableDefocus: true,\r\n};\r\nvar defaultGlobeOptions = {\r\n    backgroundTexture: 'https://raw.githubusercontent.com/chrisrzhou/react-globe/master/textures/background.png',\r\n    cloudsOpacity: 0.3,\r\n    cloudsTexture: 'https://raw.githubusercontent.com/chrisrzhou/react-globe/master/textures/clouds.png',\r\n    enableBackground: true,\r\n    enableClouds: true,\r\n    enableGlow: true,\r\n    glowCoefficient: 0.1,\r\n    glowColor: '#d1d1d1',\r\n    glowPower: 3,\r\n    glowRadiusScale: 0.2,\r\n    texture: 'https://raw.githubusercontent.com/chrisrzhou/react-globe/master/textures/globe.jpg',\r\n};\r\nvar defaultLightOptions = {\r\n    ambientLightColor: 'white',\r\n    ambientLightIntensity: 0.8,\r\n    pointLightColor: 'white',\r\n    pointLightIntensity: 1,\r\n    pointLightPositionRadiusScales: [-2, 1, -1],\r\n};\r\nvar defaultDotMarkerOptions = {\r\n    activeScale: 1.3,\r\n    enableGlow: true,\r\n    enableTooltip: true,\r\n    enterAnimationDuration: 1000,\r\n    enterEasingFunction: ['Linear', 'None'],\r\n    exitAnimationDuration: 500,\r\n    exitEasingFunction: ['Cubic', 'Out'],\r\n    getTooltipContent: function (marker) { return JSON.stringify(marker.coordinates); },\r\n    glowCoefficient: 0,\r\n    glowPower: 3,\r\n    glowRadiusScale: 2,\r\n    radiusScaleRange: [0.005, 0.02],\r\n    type: MarkerType.Dot,\r\n};\r\nvar defaultBarMarkerOptions = {\r\n    activeScale: 1.02,\r\n    enableGlow: false,\r\n    enableTooltip: true,\r\n    enterAnimationDuration: 2000,\r\n    enterEasingFunction: ['Linear', 'None'],\r\n    exitAnimationDuration: 1000,\r\n    exitEasingFunction: ['Cubic', 'Out'],\r\n    getTooltipContent: function (marker) { return JSON.stringify(marker.coordinates); },\r\n    glowCoefficient: 0,\r\n    glowPower: 3,\r\n    glowRadiusScale: 2,\r\n    offsetRadiusScale: 0,\r\n    radiusScaleRange: [0.2, defaultFocusOptions.distanceRadiusScale - 1],\r\n    type: MarkerType.Bar,\r\n};\r\nvar defaultMarkerOptions = defaultDotMarkerOptions;\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\n\nvar TOOLTIP_OFFSET = 10;\r\nvar Tooltip = /** @class */ (function () {\r\n    function Tooltip(div) {\r\n        this.div = div;\r\n        this.instance = tippy(this.div, {\r\n            animation: 'scale',\r\n        });\r\n    }\r\n    Tooltip.prototype.destroy = function () {\r\n        this.instance.destroy();\r\n    };\r\n    Tooltip.prototype.hide = function () {\r\n        document.body.style.cursor = 'inherit';\r\n        this.div.style.position = 'fixed';\r\n        this.div.style.left = '0';\r\n        this.div.style.top = '0';\r\n        this.instance.hide();\r\n    };\r\n    Tooltip.prototype.show = function (clientX, clientY, content) {\r\n        document.body.style.cursor = 'pointer';\r\n        this.div.style.position = 'fixed';\r\n        this.div.style.left = clientX + TOOLTIP_OFFSET + \"px\";\r\n        this.div.style.top = clientY + TOOLTIP_OFFSET + \"px\";\r\n        this.instance.setContent(content);\r\n        this.instance.show();\r\n    };\r\n    return Tooltip;\r\n}());\n\nfunction coordinatesToPosition(coordinates, radius) {\r\n    var lat = coordinates[0], long = coordinates[1];\r\n    var phi = (lat * Math.PI) / 180;\r\n    var theta = ((long - 180) * Math.PI) / 180;\r\n    var x = -radius * Math.cos(phi) * Math.cos(theta);\r\n    var y = radius * Math.sin(phi);\r\n    var z = radius * Math.cos(phi) * Math.sin(theta);\r\n    return [x, y, z];\r\n}\r\nfunction getMarkerCoordinatesKey(marker) {\r\n    return marker.coordinates.toString();\r\n}\r\nfunction maxValue(array, callback) {\r\n    var maxValue = 0;\r\n    array.forEach(function (item) {\r\n        if (callback(item) > maxValue) {\r\n            maxValue = callback(item);\r\n        }\r\n    });\r\n    return maxValue;\r\n}\r\nfunction minValue(array, callback) {\r\n    var minValue = Infinity;\r\n    array.forEach(function (item) {\r\n        if (callback(item) < minValue) {\r\n            minValue = callback(item);\r\n        }\r\n    });\r\n    return minValue;\r\n}\r\nfunction tween(from, to, animationDuration, easingFunction, onUpdate, onEnd) {\r\n    new Tween(from)\r\n        .to(to, animationDuration)\r\n        .easing(Easing[easingFunction[0]][easingFunction[1]])\r\n        .on('update', onUpdate)\r\n        .on('complete', onEnd)\r\n        .start();\r\n}\n\nvar emptyFunction = function () { };\r\nvar defaultCallbacks = {\r\n    onClickMarker: emptyFunction,\r\n    onDefocus: emptyFunction,\r\n    onMouseOutMarker: emptyFunction,\r\n    onMouseOverMarker: emptyFunction,\r\n    onTextureLoaded: emptyFunction,\r\n};\r\nvar defaultOptions = {\r\n    camera: defaultCameraOptions,\r\n    globe: defaultGlobeOptions,\r\n    focus: defaultFocusOptions,\r\n    marker: defaultMarkerOptions,\r\n    light: defaultLightOptions,\r\n};\r\nvar Globe = /** @class */ (function () {\r\n    function Globe(canvas, tooltipDiv) {\r\n        var _this = this;\r\n        // create objects\r\n        var renderer = new WebGLRenderer({\r\n            alpha: true,\r\n            antialias: true,\r\n            canvas: canvas,\r\n        });\r\n        var camera = new PerspectiveCamera();\r\n        var cameraAmbientLight = new AmbientLight('white');\r\n        var cameraPointLight = new PointLight('white');\r\n        var globe = new Group();\r\n        var globeBackground = new Mesh();\r\n        var globeClouds = new Mesh();\r\n        var globeSphere = new Mesh();\r\n        var markerObjects = new Group();\r\n        var orbitControls = new OrbitControls(camera, renderer.domElement);\r\n        var scene = new Scene();\r\n        var tooltip = new Tooltip(tooltipDiv);\r\n        // name objects\r\n        camera.name = ObjectName.Camera;\r\n        cameraAmbientLight.name = ObjectName.CameraAmbientLight;\r\n        cameraPointLight.name = ObjectName.CameraPointLight;\r\n        globe.name = ObjectName.Globe;\r\n        globeBackground.name = ObjectName.GlobeBackground;\r\n        globeClouds.name = ObjectName.GlobeClouds;\r\n        globeSphere.name = ObjectName.GlobeSphere;\r\n        markerObjects.name = ObjectName.MarkerObjects;\r\n        scene.name = ObjectName.Scene;\r\n        // add objects to scene\r\n        camera.add(cameraAmbientLight);\r\n        camera.add(cameraPointLight);\r\n        globe.add(globeBackground);\r\n        globe.add(globeClouds);\r\n        globe.add(globeSphere);\r\n        scene.add(markerObjects);\r\n        scene.add(camera);\r\n        scene.add(globe);\r\n        // add interactions to scene\r\n        new Interaction(renderer, scene, camera);\r\n        scene.on('mousemove', function (event) {\r\n            if (_this.isFocusing()) {\r\n                return;\r\n            }\r\n            if (_this.activeMarker) {\r\n                var activeScale = _this.options.marker.activeScale;\r\n                var from_1 = [activeScale, activeScale, activeScale];\r\n                tween(from_1, [1, 1, 1], MARKER_ACTIVE_ANIMATION_DURATION, MARKER_ACTIVE_ANIMATION_EASING_FUNCTION, function () {\r\n                    var _a;\r\n                    if (_this.activeMarkerObject) {\r\n                        (_a = _this.activeMarkerObject.scale).set.apply(_a, from_1);\r\n                    }\r\n                }, function () {\r\n                    _this.activeMarker = undefined;\r\n                    _this.activeMarkerObject = undefined;\r\n                });\r\n                _this.callbacks.onMouseOutMarker(_this.activeMarker, _this.activeMarkerObject, event.data.originalEvent);\r\n                _this.tooltip.hide();\r\n            }\r\n        });\r\n        scene.on('click', function (event) {\r\n            if (_this.isFocusing()) {\r\n                return;\r\n            }\r\n            if (_this.options.focus.enableDefocus && _this.preFocusPosition) {\r\n                _this.callbacks.onDefocus(_this.focus, event.data.originalEvent);\r\n                _this.updateFocus(undefined, _this.options.focus);\r\n            }\r\n        });\r\n        // assign values to class variables\r\n        this.activeMarker = undefined;\r\n        this.activeMarkerObject = undefined;\r\n        this.animationFrameId = undefined;\r\n        this.callbacks = defaultCallbacks;\r\n        this.camera = camera;\r\n        this.focus = undefined;\r\n        this.globe = globe;\r\n        this.isFrozen = false;\r\n        this.markerObjects = markerObjects;\r\n        this.options = defaultOptions;\r\n        this.orbitControls = orbitControls;\r\n        this.preFocusPosition = undefined;\r\n        this.renderer = renderer;\r\n        this.scene = scene;\r\n        this.tooltip = tooltip;\r\n        // update objects\r\n        this.updateCallbacks();\r\n        this.updateCamera();\r\n        this.updateFocus();\r\n        this.updateGlobe({\r\n            enableBackground: false,\r\n            enableClouds: false,\r\n        });\r\n        this.updateLights();\r\n        this.updateMarkers();\r\n        this.updateSize();\r\n    }\r\n    Globe.prototype.animate = function () {\r\n        this.render();\r\n        this.animationFrameId = requestAnimationFrame(this.animate.bind(this));\r\n    };\r\n    // TODO: expose a way to customize animating clouds in every axis\r\n    Globe.prototype.animateClouds = function () {\r\n        var globeClouds = this.getObjectByName(ObjectName.GlobeClouds);\r\n        ['x', 'y', 'z'].forEach(function (axis) {\r\n            globeClouds.rotation[axis] += Math.random() / 10000;\r\n        });\r\n    };\r\n    // For each animation, update the focus and focusOptions provided by the animation over an array of timeouts\r\n    Globe.prototype.applyAnimations = function (animations) {\r\n        var _this = this;\r\n        var currentFocus = this.focus;\r\n        var currentFocusOptions = this.options.focus;\r\n        var wait = 0;\r\n        var timeouts = [];\r\n        animations.forEach(function (animation) {\r\n            var animationDuration = animation.animationDuration, coordinates = animation.coordinates, distanceRadiusScale = animation.distanceRadiusScale, easingFunction = animation.easingFunction;\r\n            var timeout = setTimeout(function () {\r\n                _this.updateFocus(coordinates, {\r\n                    animationDuration: animationDuration,\r\n                    distanceRadiusScale: distanceRadiusScale,\r\n                    easingFunction: easingFunction,\r\n                }, true);\r\n            }, wait);\r\n            timeouts.push(timeout);\r\n            wait += animationDuration;\r\n        });\r\n        // return cleanup function\r\n        return function () {\r\n            timeouts.forEach(function (timeout) {\r\n                clearTimeout(timeout);\r\n            });\r\n            _this.updateFocus(currentFocus, currentFocusOptions);\r\n        };\r\n    };\r\n    Globe.prototype.destroy = function () {\r\n        cancelAnimationFrame(this.animationFrameId);\r\n        this.tooltip.destroy();\r\n    };\r\n    Globe.prototype.enableOrbitControls = function (enabled, autoRotate) {\r\n        if (autoRotate === void 0) { autoRotate = enabled; }\r\n        this.orbitControls.enabled = enabled;\r\n        this.orbitControls.autoRotate = autoRotate;\r\n    };\r\n    Globe.prototype.freeze = function () {\r\n        this.isFrozen = true;\r\n        this.enableOrbitControls(false);\r\n        cancelAnimationFrame(this.animationFrameId);\r\n    };\r\n    Globe.prototype.getObjectByName = function (name) {\r\n        return this.scene.getObjectByName(name);\r\n    };\r\n    Globe.prototype.isFocusing = function () {\r\n        return !this.orbitControls.enabled;\r\n    };\r\n    Globe.prototype.render = function () {\r\n        this.renderer.sortObjects = false;\r\n        this.renderer.render(this.scene, this.camera);\r\n        this.animateClouds();\r\n        this.orbitControls.update();\r\n        update();\r\n    };\r\n    Globe.prototype.updateCallbacks = function (callbacks) {\r\n        var _this = this;\r\n        if (callbacks === void 0) { callbacks = {}; }\r\n        Object.keys(defaultCallbacks).forEach(function (key) {\r\n            _this.callbacks[key] = callbacks[key] || defaultCallbacks[key];\r\n        });\r\n    };\r\n    Globe.prototype.updateCamera = function (initialCoordinates, cameraOptions) {\r\n        if (initialCoordinates === void 0) { initialCoordinates = INITIAL_COORDINATES; }\r\n        if (cameraOptions === void 0) { cameraOptions = {}; }\r\n        this.updateOptions(cameraOptions, 'camera');\r\n        var _a = this.options.camera, autoRotateSpeed = _a.autoRotateSpeed, distanceRadiusScale = _a.distanceRadiusScale, enableAutoRotate = _a.enableAutoRotate, enableRotate = _a.enableRotate, enableZoom = _a.enableZoom, maxDistanceRadiusScale = _a.maxDistanceRadiusScale, maxPolarAngle = _a.maxPolarAngle, minPolarAngle = _a.minPolarAngle, rotateSpeed = _a.rotateSpeed, zoomSpeed = _a.zoomSpeed;\r\n        if (this.initialCoordinates !== initialCoordinates) {\r\n            var _b = coordinatesToPosition(initialCoordinates, RADIUS * distanceRadiusScale), x = _b[0], y = _b[1], z = _b[2];\r\n            this.camera.position.set(x, y, z);\r\n            this.initialCoordinates = initialCoordinates;\r\n        }\r\n        this.camera.far = CAMERA_FAR;\r\n        this.camera.fov = CAMERA_FOV;\r\n        this.camera.near = CAMERA_NEAR;\r\n        this.orbitControls.autoRotate = enableAutoRotate;\r\n        this.orbitControls.autoRotateSpeed = autoRotateSpeed;\r\n        this.orbitControls.dampingFactor = CAMERA_DAMPING_FACTOR;\r\n        this.orbitControls.enableDamping = true;\r\n        this.orbitControls.enablePan = false;\r\n        this.orbitControls.enableRotate = enableRotate;\r\n        this.orbitControls.enableZoom = enableZoom;\r\n        this.orbitControls.maxDistance = RADIUS * maxDistanceRadiusScale;\r\n        this.orbitControls.maxPolarAngle = maxPolarAngle;\r\n        this.orbitControls.minDistance = RADIUS * CAMERA_MIN_DISTANCE_RADIUS_SCALE;\r\n        this.orbitControls.minPolarAngle = minPolarAngle;\r\n        this.orbitControls.rotateSpeed = rotateSpeed;\r\n        this.orbitControls.zoomSpeed = zoomSpeed;\r\n    };\r\n    Globe.prototype.updateFocus = function (focus, focusOptions, autoDefocus) {\r\n        var _this = this;\r\n        if (focusOptions === void 0) { focusOptions = {}; }\r\n        if (autoDefocus === void 0) { autoDefocus = false; }\r\n        this.updateOptions(focusOptions, 'focus');\r\n        this.focus = focus;\r\n        var _a = this.options.focus, animationDuration = _a.animationDuration, distanceRadiusScale = _a.distanceRadiusScale, easingFunction = _a.easingFunction;\r\n        if (this.isFrozen) {\r\n            return;\r\n        }\r\n        if (this.focus) {\r\n            // disable orbit controls when focused\r\n            var from_2 = [\r\n                this.camera.position.x,\r\n                this.camera.position.y,\r\n                this.camera.position.z,\r\n            ];\r\n            var to = coordinatesToPosition(this.focus, RADIUS * distanceRadiusScale);\r\n            this.preFocusPosition = this.preFocusPosition || __spreadArrays(from_2);\r\n            tween(from_2, to, animationDuration, easingFunction, function () {\r\n                var _a;\r\n                _this.enableOrbitControls(false);\r\n                (_a = _this.camera.position).set.apply(_a, from_2);\r\n            }, function () {\r\n                if (autoDefocus) {\r\n                    _this.focus = undefined;\r\n                    _this.preFocusPosition = undefined;\r\n                }\r\n                _this.enableOrbitControls(true, autoDefocus);\r\n            });\r\n        }\r\n        else {\r\n            if (this.preFocusPosition) {\r\n                var from_3 = [\r\n                    this.camera.position.x,\r\n                    this.camera.position.y,\r\n                    this.camera.position.z,\r\n                ];\r\n                var to = this.preFocusPosition;\r\n                tween(from_3, to, animationDuration, easingFunction, function () {\r\n                    var _a;\r\n                    _this.enableOrbitControls(false);\r\n                    (_a = _this.camera.position).set.apply(_a, from_3);\r\n                }, function () {\r\n                    _this.preFocusPosition = undefined;\r\n                    _this.enableOrbitControls(true);\r\n                });\r\n            }\r\n        }\r\n    };\r\n    Globe.prototype.updateGlobe = function (globeOptions) {\r\n        var _this = this;\r\n        if (globeOptions === void 0) { globeOptions = {}; }\r\n        this.updateOptions(globeOptions, 'globe');\r\n        var _a = this.options.globe, backgroundTexture = _a.backgroundTexture, cloudsOpacity = _a.cloudsOpacity, cloudsTexture = _a.cloudsTexture, enableBackground = _a.enableBackground, enableClouds = _a.enableClouds, enableGlow = _a.enableGlow, glowColor = _a.glowColor, glowCoefficient = _a.glowCoefficient, glowPower = _a.glowPower, glowRadiusScale = _a.glowRadiusScale, texture = _a.texture;\r\n        var globeBackground = this.getObjectByName(ObjectName.GlobeBackground);\r\n        var globeClouds = this.getObjectByName(ObjectName.GlobeClouds);\r\n        var globeSphere = this.getObjectByName(ObjectName.GlobeSphere);\r\n        new TextureLoader().load(texture, function (map) {\r\n            globeSphere.geometry = new SphereGeometry(RADIUS, GLOBE_SEGMENTS, GLOBE_SEGMENTS);\r\n            globeSphere.material = new MeshLambertMaterial({\r\n                map: map,\r\n            });\r\n            if (enableGlow) {\r\n                globeSphere.remove(_this.getObjectByName(ObjectName.GlobeGlow));\r\n                var globeGlow = createGlowMesh(globeSphere.geometry, {\r\n                    backside: true,\r\n                    color: glowColor,\r\n                    coefficient: glowCoefficient,\r\n                    power: glowPower,\r\n                    size: RADIUS * glowRadiusScale,\r\n                });\r\n                globeGlow.name = ObjectName.GlobeGlow;\r\n                globeSphere.add(globeGlow);\r\n            }\r\n            _this.callbacks.onTextureLoaded();\r\n        });\r\n        if (enableBackground) {\r\n            new TextureLoader().load(backgroundTexture, function (map) {\r\n                globeBackground.geometry = new SphereGeometry(RADIUS * BACKGROUND_RADIUS_SCALE, GLOBE_SEGMENTS, GLOBE_SEGMENTS);\r\n                globeBackground.material = new MeshBasicMaterial({\r\n                    map: map,\r\n                    side: BackSide,\r\n                });\r\n            });\r\n        }\r\n        if (enableClouds) {\r\n            new TextureLoader().load(cloudsTexture, function (map) {\r\n                globeClouds.geometry = new SphereGeometry(RADIUS + CLOUDS_RADIUS_OFFSET, GLOBE_SEGMENTS, GLOBE_SEGMENTS);\r\n                globeClouds.material = new MeshLambertMaterial({\r\n                    map: map,\r\n                    transparent: true,\r\n                });\r\n                globeClouds.material.opacity = cloudsOpacity;\r\n            });\r\n        }\r\n    };\r\n    Globe.prototype.updateLights = function (lightOptions) {\r\n        if (lightOptions === void 0) { lightOptions = {}; }\r\n        this.updateOptions(lightOptions, 'light');\r\n        var _a = this.options.light, ambientLightColor = _a.ambientLightColor, ambientLightIntensity = _a.ambientLightIntensity, pointLightColor = _a.pointLightColor, pointLightIntensity = _a.pointLightIntensity, pointLightPositionRadiusScales = _a.pointLightPositionRadiusScales;\r\n        var cameraAmbientLight = this.getObjectByName(ObjectName.CameraAmbientLight);\r\n        var cameraPointLight = this.getObjectByName(ObjectName.CameraPointLight);\r\n        cameraAmbientLight.color = new Color(ambientLightColor);\r\n        cameraAmbientLight.intensity = ambientLightIntensity;\r\n        cameraPointLight.color = new Color(pointLightColor);\r\n        cameraPointLight.intensity = pointLightIntensity;\r\n        cameraPointLight.position.set(RADIUS * pointLightPositionRadiusScales[0], RADIUS * pointLightPositionRadiusScales[1], RADIUS * pointLightPositionRadiusScales[2]);\r\n    };\r\n    Globe.prototype.updateMarkers = function (markers, markerOptions) {\r\n        var _this = this;\r\n        if (markers === void 0) { markers = []; }\r\n        if (markerOptions === void 0) { markerOptions = {}; }\r\n        this.updateOptions(markerOptions, 'marker');\r\n        var _a = this.options.marker, activeScale = _a.activeScale, enableGlow = _a.enableGlow, enableTooltip = _a.enableTooltip, enterAnimationDuration = _a.enterAnimationDuration, enterEasingFunction = _a.enterEasingFunction, exitAnimationDuration = _a.exitAnimationDuration, exitEasingFunction = _a.exitEasingFunction, getTooltipContent = _a.getTooltipContent, glowCoefficient = _a.glowCoefficient, glowPower = _a.glowPower, glowRadiusScale = _a.glowRadiusScale, offsetRadiusScale = _a.offsetRadiusScale, radiusScaleRange = _a.radiusScaleRange, renderer = _a.renderer, type = _a.type;\r\n        var unitRadius = RADIUS * MARKER_UNIT_RADIUS_SCALE;\r\n        var sizeScale = scaleLinear()\r\n            .domain([\r\n            minValue(markers, function (marker) { return marker.value; }),\r\n            maxValue(markers, function (marker) { return marker.value; }),\r\n        ])\r\n            .range([RADIUS * radiusScaleRange[0], RADIUS * radiusScaleRange[1]]);\r\n        var markerCoordinatesKeys = new Set(markers.map(getMarkerCoordinatesKey));\r\n        var markerObjectNames = new Set(this.markerObjects.children.map(function (markerObject) { return markerObject.name; }));\r\n        markers.forEach(function (marker) {\r\n            var _a;\r\n            var coordinates = marker.coordinates, value = marker.value;\r\n            var markerCoordinatesKey = getMarkerCoordinatesKey(marker);\r\n            var size = sizeScale(value);\r\n            var markerObject;\r\n            // create new marker objects\r\n            if (!markerObjectNames.has(markerCoordinatesKey)) {\r\n                if (renderer !== undefined) {\r\n                    markerObject = renderer(marker);\r\n                }\r\n                else {\r\n                    var color_1 = marker.color || MARKER_DEFAULT_COLOR;\r\n                    var from_4 = { size: 0 };\r\n                    var to = { size: size };\r\n                    var mesh_1 = new Mesh();\r\n                    tween(from_4, to, enterAnimationDuration, enterEasingFunction, function () {\r\n                        switch (type) {\r\n                            case MarkerType.Bar:\r\n                                mesh_1.geometry = new BoxGeometry(unitRadius, unitRadius, from_4.size);\r\n                                mesh_1.material = new MeshLambertMaterial({\r\n                                    color: color_1,\r\n                                });\r\n                                break;\r\n                            case MarkerType.Dot:\r\n                            default:\r\n                                mesh_1.geometry = new SphereGeometry(from_4.size, MARKER_SEGMENTS, MARKER_SEGMENTS);\r\n                                mesh_1.material = new MeshBasicMaterial({ color: color_1 });\r\n                                if (enableGlow) {\r\n                                    // add glow\r\n                                    var glowMesh = createGlowMesh(mesh_1.geometry.clone(), {\r\n                                        backside: false,\r\n                                        color: color_1,\r\n                                        coefficient: glowCoefficient,\r\n                                        power: glowPower,\r\n                                        size: from_4.size * glowRadiusScale,\r\n                                    });\r\n                                    mesh_1.children = [];\r\n                                    mesh_1.add(glowMesh);\r\n                                }\r\n                        }\r\n                    });\r\n                    markerObject = mesh_1;\r\n                }\r\n                // place markers\r\n                var heightOffset = 0;\r\n                if (offsetRadiusScale !== undefined) {\r\n                    heightOffset = RADIUS * offsetRadiusScale;\r\n                }\r\n                else {\r\n                    if (type === MarkerType.Dot) {\r\n                        heightOffset = (size * (1 + glowRadiusScale)) / 2;\r\n                    }\r\n                    else {\r\n                        heightOffset = 0;\r\n                    }\r\n                }\r\n                var position = coordinatesToPosition(coordinates, RADIUS + heightOffset);\r\n                (_a = markerObject.position).set.apply(_a, position);\r\n                markerObject.lookAt(new Vector3(0, 0, 0));\r\n                markerObject.name = markerCoordinatesKey;\r\n                _this.markerObjects.add(markerObject);\r\n            }\r\n            // update existing marker objects\r\n            markerObject = _this.markerObjects.getObjectByName(markerCoordinatesKey);\r\n            var handleClick = function (event) {\r\n                event.stopPropagation();\r\n                _this.updateFocus(marker.coordinates);\r\n                _this.callbacks.onClickMarker(marker, markerObject, event.data.originalEvent);\r\n            };\r\n            markerObject.on('click', handleClick.bind(_this));\r\n            markerObject.on('touchstart', handleClick.bind(_this));\r\n            markerObject.on('mousemove', function (event) {\r\n                if (_this.isFocusing()) {\r\n                    _this.tooltip.hide();\r\n                    return;\r\n                }\r\n                event.stopPropagation();\r\n                var from = markerObject.scale.toArray();\r\n                tween(from, [activeScale, activeScale, activeScale], MARKER_ACTIVE_ANIMATION_DURATION, MARKER_ACTIVE_ANIMATION_EASING_FUNCTION, function () {\r\n                    var _a;\r\n                    if (markerObject) {\r\n                        (_a = markerObject.scale).set.apply(_a, from);\r\n                    }\r\n                });\r\n                var originalEvent = event.data.originalEvent;\r\n                _this.activeMarker = marker;\r\n                _this.activeMarkerObject = markerObject;\r\n                _this.callbacks.onMouseOverMarker(marker, markerObject, originalEvent);\r\n                if (enableTooltip) {\r\n                    _this.tooltip.show(originalEvent.clientX, originalEvent.clientY, getTooltipContent(marker));\r\n                }\r\n            });\r\n        });\r\n        // remove marker objects that are stale\r\n        var markerObjectsToRemove = this.markerObjects.children.filter(function (markerObject) { return !markerCoordinatesKeys.has(markerObject.name); });\r\n        markerObjectsToRemove.forEach(function (markerObject) {\r\n            var from = markerObject.scale.toArray();\r\n            tween(from, [0, 0, 0], exitAnimationDuration, exitEasingFunction, function () {\r\n                var _a;\r\n                if (markerObject) {\r\n                    (_a = markerObject.scale).set.apply(_a, from);\r\n                }\r\n            }, function () {\r\n                _this.markerObjects.remove(markerObject);\r\n            });\r\n        });\r\n    };\r\n    Globe.prototype.updateOptions = function (options, key) {\r\n        var _a;\r\n        this.options = __assign(__assign({}, defaultOptions), (_a = {}, _a[key] = __assign(__assign({}, defaultOptions[key]), options), _a));\r\n    };\r\n    Globe.prototype.updateSize = function (size) {\r\n        if (size) {\r\n            var width = size[0], height = size[1];\r\n            this.renderer.setSize(width, height);\r\n            this.camera.aspect = width / height;\r\n        }\r\n        this.camera.updateProjectionMatrix();\r\n    };\r\n    Globe.prototype.unfreeze = function () {\r\n        if (this.isFrozen) {\r\n            this.isFrozen = false;\r\n            this.enableOrbitControls(true);\r\n            this.animate();\r\n        }\r\n    };\r\n    return Globe;\r\n}());\n\nfunction useResize(mountRef, initialSize) {\r\n    var _a = useState([0, 0]), size = _a[0], setSize = _a[1];\r\n    useEffect(function () {\r\n        var mount = mountRef.current;\r\n        // update initial size\r\n        var width = 0;\r\n        var height = 0;\r\n        if (initialSize) {\r\n            // Use initialSize if it is provided\r\n            width = initialSize[0], height = initialSize[1];\r\n        }\r\n        else {\r\n            // Use parentElement size if resized has not updated\r\n            width = mount.offsetWidth;\r\n            height = mount.offsetHeight;\r\n        }\r\n        setSize([width, height]);\r\n        // update resize using a resize observer\r\n        var resizeObserver = new ResizeObserver(function (entries) {\r\n            if (!entries || !entries.length) {\r\n                return;\r\n            }\r\n            if (initialSize === undefined) {\r\n                var _a = entries[0].contentRect, width_1 = _a.width, height_1 = _a.height;\r\n                setSize([width_1, height_1]);\r\n            }\r\n        });\r\n        resizeObserver.observe(mount);\r\n        return function () {\r\n            resizeObserver.unobserve(mount);\r\n        };\r\n    }, [initialSize, mountRef]);\r\n    return size;\r\n}\n\nfunction ReactGlobe(_a) {\r\n    var animations = _a.animations, cameraOptions = _a.cameraOptions, focus = _a.focus, focusOptions = _a.focusOptions, globeOptions = _a.globeOptions, lightOptions = _a.lightOptions, initialCoordinates = _a.initialCoordinates, markers = _a.markers, markerOptions = _a.markerOptions, onClickMarker = _a.onClickMarker, onDefocus = _a.onDefocus, onMouseOutMarker = _a.onMouseOutMarker, onMouseOverMarker = _a.onMouseOverMarker, onGetGlobeInstance = _a.onGetGlobeInstance, onTextureLoaded = _a.onTextureLoaded, initialSize = _a.size;\r\n    var canvasRef = useRef();\r\n    var globeInstanceRef = useRef();\r\n    var mountRef = useRef();\r\n    var tooltipRef = useRef();\r\n    var size = useResize(mountRef, initialSize);\r\n    // init\r\n    useEffect(function () {\r\n        var mount = mountRef.current;\r\n        var globeInstance = new Globe(canvasRef.current, tooltipRef.current);\r\n        mount.appendChild(globeInstance.renderer.domElement);\r\n        globeInstance.animate();\r\n        globeInstanceRef.current = globeInstance;\r\n        onGetGlobeInstance && onGetGlobeInstance(globeInstance);\r\n        return function () {\r\n            mount.removeChild(globeInstance.renderer.domElement);\r\n            globeInstance.destroy();\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    // update callbacks\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateCallbacks({\r\n            onClickMarker: onClickMarker,\r\n            onDefocus: onDefocus,\r\n            onMouseOutMarker: onMouseOutMarker,\r\n            onMouseOverMarker: onMouseOverMarker,\r\n            onTextureLoaded: onTextureLoaded,\r\n        });\r\n    }, [\r\n        onClickMarker,\r\n        onDefocus,\r\n        onMouseOutMarker,\r\n        onMouseOverMarker,\r\n        onTextureLoaded,\r\n    ]);\r\n    // update camera\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateCamera(initialCoordinates, cameraOptions);\r\n    }, [cameraOptions, initialCoordinates]);\r\n    // update focus\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateFocus(focus, focusOptions);\r\n    }, [focus, focusOptions]);\r\n    // update globe\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateGlobe(globeOptions);\r\n    }, [globeOptions]);\r\n    // update lights\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateLights(lightOptions);\r\n    }, [lightOptions]);\r\n    // update markers\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateMarkers(markers, markerOptions);\r\n    }, [markerOptions, markers]);\r\n    // apply animations\r\n    useEffect(function () {\r\n        return globeInstanceRef.current.applyAnimations(animations);\r\n    }, [animations]);\r\n    // resize\r\n    useEffect(function () {\r\n        globeInstanceRef.current.updateSize(size);\r\n    }, [size]);\r\n    return (React.createElement(\"div\", { ref: mountRef, style: { height: '100%', width: '100%' } },\r\n        React.createElement(\"canvas\", { ref: canvasRef, style: { display: 'block' } }),\r\n        React.createElement(\"div\", { ref: tooltipRef })));\r\n}\r\nReactGlobe.defaultProps = {\r\n    animations: [],\r\n    cameraOptions: defaultCameraOptions,\r\n    focusOptions: defaultFocusOptions,\r\n    globeOptions: defaultGlobeOptions,\r\n    lightOptions: defaultLightOptions,\r\n    initialCoordinates: INITIAL_COORDINATES,\r\n    markers: [],\r\n    markerOptions: defaultMarkerOptions,\r\n};\n\nexport default ReactGlobe;\nexport { BACKGROUND_RADIUS_SCALE, CAMERA_DAMPING_FACTOR, CAMERA_FAR, CAMERA_FOV, CAMERA_MAX_POLAR_ANGLE, CAMERA_MIN_DISTANCE_RADIUS_SCALE, CAMERA_MIN_POLAR_ANGLE, CAMERA_NEAR, CLOUDS_RADIUS_OFFSET, GLOBE_SEGMENTS, Globe, INITIAL_COORDINATES, MARKER_ACTIVE_ANIMATION_DURATION, MARKER_ACTIVE_ANIMATION_EASING_FUNCTION, MARKER_DEFAULT_COLOR, MARKER_SEGMENTS, MARKER_UNIT_RADIUS_SCALE, MarkerType, ObjectName, RADIUS, Tooltip, coordinatesToPosition, defaultBarMarkerOptions, defaultCameraOptions, defaultDotMarkerOptions, defaultFocusOptions, defaultGlobeOptions, defaultLightOptions, defaultMarkerOptions, getMarkerCoordinatesKey, maxValue, minValue, tween };\n"]},"metadata":{},"sourceType":"module"}